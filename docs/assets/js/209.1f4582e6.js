(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{513:function(t,a,s){"use strict";s.r(a);var r=s(6),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("a短链系统设计看起来简单，但是每个点都能展开很多知识点。短链是通过访问服务器上的链接，通过Http返回的302Code，对链接进行重定向，然后访问到对应的地址上。")]),t._v(" "),a("p",[t._v("‍")]),t._v(" "),a("div",{staticClass:"language-mermaid extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mermaid"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sequenceDiagram")]),t._v("\n    客户端"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("->>")]),t._v("短链服务器"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 访问A\n    短链服务器"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("->>")]),t._v("客户端"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" status code"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("302  location"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("B\n    客户端 "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("->>")]),t._v(" B服务器"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 访问B\n")])])]),a("p",[t._v("Http协议中重定向有两种code: 301 、302")]),t._v(" "),a("ul",[a("li",[t._v("301: 代表永久"),a("strong",[t._v("重定向")]),t._v("。")]),t._v(" "),a("li",[t._v("302: 代表"),a("strong",[t._v("临时重定向")]),t._v("。")])]),t._v(" "),a("p",[t._v("他们的区别就在于浏览器会对301做缓存的效果，如果返回的code是301，则浏览器缓存A到B的映射，在下次发起请求的时候不会再去请求A的服务器。")]),t._v(" "),a("h1",{attrs:{id:"概述用例和约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述用例和约束"}},[t._v("#")]),t._v(" 概述用例和约束")]),t._v(" "),a("h2",{attrs:{id:"用例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用例"}},[t._v("#")]),t._v(" 用例")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("用户")]),t._v(" 输入一段文本，然后得到一个随机生成的链接")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("过期设置")]),t._v(" "),a("ul",[a("li",[t._v("默认的设置是不会过期的")]),t._v(" "),a("li",[t._v("可以选择设置一个过期的时间")])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("用户")]),t._v(" 输入一个 paste 的 url 后，可以看到它存储的内容")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("用户")]),t._v(" 是匿名的")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Service")]),t._v(" 跟踪页面分析")]),t._v(" "),a("ul",[a("li",[t._v("一个月的访问统计")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Service")]),t._v(" 删除过期的 pastes")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Service")]),t._v(" 需要高可用")])])]),t._v(" "),a("h2",{attrs:{id:"约束和假设"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#约束和假设"}},[t._v("#")]),t._v(" 约束和假设")]),t._v(" "),a("ul",[a("li",[t._v("访问流量不是均匀分布的")]),t._v(" "),a("li",[t._v("打开一个短链接应该是很快的")]),t._v(" "),a("li",[t._v("pastes 只能是文本")]),t._v(" "),a("li",[t._v("页面访问分析数据可以不用实时")]),t._v(" "),a("li",[t._v("一千万的用户量")]),t._v(" "),a("li",[t._v("每个月一千万的 paste 写入量")]),t._v(" "),a("li",[t._v("每个月一亿的 paste 读取量")]),t._v(" "),a("li",[t._v("读写比例在 10:1")])]),t._v(" "),a("h2",{attrs:{id:"预估容量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预估容量"}},[t._v("#")]),t._v(" 预估容量")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("每个 paste 的大小")]),t._v(" "),a("ul",[a("li",[t._v("每一个 paste 1 KB")]),t._v(" "),a("li",[a("code",[t._v("shortlink")]),t._v(" - 7 bytes")]),t._v(" "),a("li",[a("code",[t._v("expiration_length_in_minutes")]),t._v(" - 4 bytes")]),t._v(" "),a("li",[a("code",[t._v("created_at")]),t._v(" - 5 bytes")]),t._v(" "),a("li",[t._v("总共 = ~1.27 KB")])])]),t._v(" "),a("li",[a("p",[t._v("每个月新的 paste 内容在 12.7GB")]),t._v(" "),a("ul",[a("li",[t._v("(1.27 * 10000000)KB / 月的 paste")]),t._v(" "),a("li",[t._v("三年内将近 450GB 的新 paste 内容")]),t._v(" "),a("li",[t._v("三年内 3.6 亿短链接")]),t._v(" "),a("li",[t._v("假设大部分都是新的 paste，而不是需要更新已存在的 paste")])])]),t._v(" "),a("li",[a("p",[t._v("平均 4paste/s 的写入速度")])]),t._v(" "),a("li",[a("p",[t._v("平均 40paste/s 的读取速度")])])]),t._v(" "),a("h1",{attrs:{id:"创建一个高层次设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建一个高层次设计"}},[t._v("#")]),t._v(" 创建一个高层次设计")]),t._v(" "),a("p",[t._v("用webServer作为请求的入口，然后调用API去访问SQL。最后采用Analytics对请求数据进行分析。")]),t._v(" "),a("div",{staticClass:"language-mermaid extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mermaid"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("graph")]),t._v(" TD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    客户端"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("WebServer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    WebServer"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("WriteAPI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    WebServer"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("ReadAPI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ReadAPI"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("SQL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    WriteAPI"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("SQL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   Analytics "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("SQL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h1",{attrs:{id:"设计核心组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计核心组件"}},[t._v("#")]),t._v(" 设计核心组件")]),t._v(" "),a("h2",{attrs:{id:"用例-用户输入一段文本-然后得到一个随机生成的链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用例-用户输入一段文本-然后得到一个随机生成的链接"}},[t._v("#")]),t._v(" 用例: "),a("strong",[t._v("用户")]),t._v("输入一段文本，然后得到一个随机生成的链接")]),t._v(" "),a("p",[t._v("用关系型数据库直接将生成的URL映射成用户的URL。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("客户端")]),t._v(" 发送一个创建 paste 的请求到作为一个"),a("a",{attrs:{href:"https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md#%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86web-%E6%9C%8D%E5%8A%A1%E5%99%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("反向代理"),a("OutboundLink")],1),t._v("启动的  "),a("strong",[t._v("Web 服务器")]),t._v(" 。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Web 服务器")]),t._v(" 转发请求给 "),a("strong",[t._v("写接口")]),t._v(" 服务器")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("写接口")]),t._v(" 服务器执行如下操作：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("生成一个唯一的 url")]),t._v(" "),a("ul",[a("li",[t._v("检查这个 url 在 "),a("strong",[t._v("SQL 数据库")]),t._v(" 里面是否是唯一的")]),t._v(" "),a("li",[t._v("如果这个 url 不是唯一的，生成另外一个 url")]),t._v(" "),a("li",[t._v("如果我们支持自定义 url，我们可以使用用户提供的 url（也需要检查是否重复）")])])]),t._v(" "),a("li",[a("p",[t._v("把生成的 url 和用户的url 存储到 "),a("strong",[t._v("SQL 数据库")]),t._v(" 的 "),a("code",[t._v("pastes")]),t._v(" 表里面")])]),t._v(" "),a("li",[a("p",[t._v("返回生成的 url")])])])])]),t._v(" "),a("p",[a("code",[t._v("pastes")]),t._v("结构如下:")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("shortlink "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\nexpiration_length_in_minutes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\ncreated_at "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("datetime")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\npaste "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shortlink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("在"),a("code",[t._v("shortlink")]),t._v("上创建一个数据库索引，用来提高查询的速度。")]),t._v(" "),a("h2",{attrs:{id:"用例-用户输入一个-paste-的-url-后可以看到它存储的内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用例-用户输入一个-paste-的-url-后可以看到它存储的内容"}},[t._v("#")]),t._v(" 用例：用户输入一个 paste 的 url 后可以看到它存储的内容")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("客户端")]),t._v(" 发送一个获取 paste 请求到 "),a("strong",[t._v("Web Server")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Web Server")]),t._v(" 转发请求给 "),a("strong",[t._v("读取接口")]),t._v(" 服务器")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("读取接口")]),t._v(" 服务器执行如下操作：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在 "),a("strong",[t._v("SQL 数据库")]),t._v(" 检查这个生成的 url")]),t._v(" "),a("ul",[a("li",[t._v("如果这个 url 在 "),a("strong",[t._v("SQL 数据库")]),t._v(" 里面，则从返回这个 "),a("code",[t._v("paste")]),t._v(" 的内容")]),t._v(" "),a("li",[t._v("否则，返回一个错误页面给用户")])])])])])]),t._v(" "),a("h2",{attrs:{id:"用例-服务跟踪分析页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用例-服务跟踪分析页面"}},[t._v("#")]),t._v(" 用例： 服务跟踪分析页面")]),t._v(" "),a("p",[t._v("因为实时分析不是必须的，所以我们可以简单的 "),a("strong",[t._v("MapReduce")]),t._v(" "),a("strong",[t._v("Web Server")]),t._v(" 的日志，用来生成点击次数。")]),t._v(" "),a("h2",{attrs:{id:"用例-服务删除过期的-pastes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用例-服务删除过期的-pastes"}},[t._v("#")]),t._v(" 用例： 服务删除过期的 pastes")]),t._v(" "),a("p",[t._v("为了删除过期的 pastes，我们可以直接搜索 "),a("strong",[t._v("SQL 数据库")]),t._v(" 中所有的过期时间比当前时间更早的记录， 所有过期的记录将从这张表里面删除（或者将其标记为过期）。")]),t._v(" "),a("h1",{attrs:{id:"扩展设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展设计"}},[t._v("#")]),t._v(" 扩展设计")]),t._v(" "),a("div",{staticClass:"language-mermaid extra-class"},[a("pre",{pre:!0,attrs:{class:"language-mermaid"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("graph")]),t._v(" TD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tClient"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("DNS负载"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Client"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("CDN回源"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tDNS负载"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("LoadBalancer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tLoadBalancer"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("WebServer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tWebServer"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("WriteAPI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tWebServer"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("ReadAPI"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tReadAPI"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("MemoryCache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tWriteAPI"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("SQLMaster-Slave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tReadAPI"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("SQLReadReplicas"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tSQLMaster-Slave "),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("---")]),t._v(" SQLReadReplicas"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tAnalytics"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("SQLAnalytics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tSQLAnalytics"),a("span",{pre:!0,attrs:{class:"token arrow operator"}},[t._v("--\x3e")]),t._v("SQLMaster-Slave\n")])])]),a("ul",[a("li",[a("p",[t._v("对于请求量比较大的，应该将数据留在上游，这部分可以采用CDN来代理源站，将数据放在边缘")])]),t._v(" "),a("li",[a("p",[t._v("使用LoadBalancer来代理我们具体的服务器，以便于可以对webServer进行水平扩展")])]),t._v(" "),a("li",[a("p",[t._v("处理每秒40的读请求，其内容应该交由给内存级别的缓存来处理。比如Redis这种")])]),t._v(" "),a("li",[a("p",[t._v("对于单个关系型数据库，主从切分之后每秒4次的写入问题不大。")]),t._v(" "),a("p",[t._v("如果写入出现了瓶颈，需要额外采用别的方式。包括但不限于：")]),t._v(" "),a("ol",[a("li",[t._v("水平、垂直分片")]),t._v(" "),a("li",[t._v("非规范化")]),t._v(" "),a("li",[t._v("SQL调优")])])])]),t._v(" "),a("h1",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("对于短链系统，整体的系统的设计大概如此，从架构方面应该是满足要求了。")]),t._v(" "),a("p",[t._v("其次，还有一些细节在我看来就是属于业务上的东西了，需要自行衡量,比如: 短链生成方法有好几种方式，Hash、Md5、UUID、redis、Snowflake、Mysql 自增主键。其选型并没有什么优劣之分，只有合适与否。")]),t._v(" "),a("p",[t._v("整个系统的诞生是一个不断优化的过程，我们需要先解决有的问题，再持续进行优化。")]),t._v(" "),a("ul",[a("li",[t._v("继续对系统进行基准测试和监控，以在瓶颈出现时解决它们")]),t._v(" "),a("li",[t._v("扩展是一个迭代的过程")])]),t._v(" "),a("p",[t._v("‍")])])}),[],!1,null,null,null);a.default=e.exports}}]);