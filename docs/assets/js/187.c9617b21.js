(window.webpackJsonp=window.webpackJsonp||[]).push([[187],{491:function(a,t,s){"use strict";s.r(t);var r=s(6),e=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"前提"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前提"}},[a._v("#")]),a._v(" 前提")]),a._v(" "),t("ul",[t("li",[a._v("支持XA 事务的数据库。")]),a._v(" "),t("li",[a._v("Java 应用，通过 JDBC 访问数据库。")])]),a._v(" "),t("h1",{attrs:{id:"整体机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整体机制"}},[a._v("#")]),a._v(" 整体机制")]),a._v(" "),t("p",[a._v("在 Seata 定义的分布式事务框架内，利用事务资源（数据库、消息服务等）对 XA 协议的支持，以 XA 协议的机制来管理分支事务的一种 事务模式。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://image.ztianzeng.com/uPic/20220427111452.png",alt:""}})]),a._v(" "),t("ul",[t("li",[a._v("执行阶段：")]),a._v(" "),t("li",[t("ul",[t("li",[a._v("可回滚：业务 SQL 操作放在 XA 分支中进行，由资源对 XA 协议的支持来保证 "),t("em",[a._v("可回滚")])]),a._v(" "),t("li",[a._v("持久化：XA 分支完成后，执行 XA prepare，同样，由资源对 XA 协议的支持来保证  "),t("em",[a._v("持久化")]),a._v(" （即，之后任何意外都不会造成无法回滚的情况）")])])]),a._v(" "),t("li",[a._v("完成阶段：")]),a._v(" "),t("li",[t("ul",[t("li",[a._v("分支提交：执行 XA 分支的 commit")]),a._v(" "),t("li",[a._v("分支回滚：执行 XA 分支的 rollback")])])])]),a._v(" "),t("h1",{attrs:{id:"工作机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作机制"}},[a._v("#")]),a._v(" 工作机制")]),a._v(" "),t("h4",{attrs:{id:"_1-整体运行机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-整体运行机制"}},[a._v("#")]),a._v(" 1. 整体运行机制")]),a._v(" "),t("p",[a._v("XA 模式 运行在 Seata 定义的事务框架内：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://image.ztianzeng.com/uPic/20220427111511.png",alt:""}})]),a._v(" "),t("ul",[t("li",[a._v("执行阶段（E xecute）：")]),a._v(" "),t("li",[t("ul",[t("li",[a._v("XA start/XA end/XA prepare + SQL + 注册分支")])])]),a._v(" "),t("li",[a._v("完成阶段（F inish）：")]),a._v(" "),t("li",[t("ul",[t("li",[a._v("XA commit/XA rollback")])])])]),a._v(" "),t("h4",{attrs:{id:"_2-数据源代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据源代理"}},[a._v("#")]),a._v(" 2. 数据源代理")]),a._v(" "),t("p",[a._v("XA 模式需要 XAConnection。")]),a._v(" "),t("p",[a._v("获取 XAConnection 两种方式：")]),a._v(" "),t("ul",[t("li",[a._v("方式一：要求开发者配置 XADataSource")]),a._v(" "),t("li",[a._v("方式二：根据开发者的普通 DataSource 来创建")])]),a._v(" "),t("p",[a._v("第一种方式，给开发者增加了认知负担，需要为 XA 模式专门去学习和使用 XA 数据源，与 透明化 XA 编程模型的设计目标相违背。")]),a._v(" "),t("p",[a._v("第二种方式，对开发者比较友好，和 AT 模式使用一样，开发者完全不必关心 XA 层面的任何问题，保持本地编程模型即可。")]),a._v(" "),t("p",[a._v("我们优先设计实现第二种方式：数据源代理根据普通数据源中获取的普通 JDBC 连接创建出相应的 XAConnection。")]),a._v(" "),t("p",[a._v("类比 AT 模式的数据源代理机制，如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://image.ztianzeng.com/uPic/20220427111529.png",alt:""}})]),a._v(" "),t("p",[a._v("但是，第二种方法有局限：无法保证兼容的正确性。")]),a._v(" "),t("p",[a._v("实际上，这种方法是在做数据库驱动程序要做的事情。不同的厂商、不同版本的数据库驱动实现机制是厂商私有的，我们只能保证在充分测试过的驱动程序上是正确的，开发者使用的驱动程序版本差异很可能造成机制的失效。")]),a._v(" "),t("p",[a._v("这点在 Oracle 上体现非常明显。参见 Druid issue："),t("a",{attrs:{href:"https://github.com/alibaba/druid/issues/3707",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/alibaba/druid/issues/3707"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("综合考虑，XA 模式的数据源代理设计需要同时支持第一种方式：基于 XA 数据源进行代理。")]),a._v(" "),t("p",[a._v("类比 AT 模式的数据源代理机制，如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://image.ztianzeng.com/uPic/20220427111546.png",alt:""}})]),a._v(" "),t("h4",{attrs:{id:"_3-分支注册"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-分支注册"}},[a._v("#")]),a._v(" 3. 分支注册")]),a._v(" "),t("p",[a._v("XA start 需要 Xid 参数。")]),a._v(" "),t("p",[a._v("这个 Xid 需要和 Seata 全局事务的 XID 和 BranchId 关联起来，以便由 TC 驱动 XA 分支的提交或回滚。")]),a._v(" "),t("p",[a._v("目前 Seata 的 BranchId 是在分支注册过程，由 TC 统一生成的，所以 XA 模式分支注册的时机需要在 XA start 之前。")]),a._v(" "),t("p",[a._v("将来一个可能的优化方向：")]),a._v(" "),t("p",[a._v("把分支注册尽量延后。类似 AT 模式在本地事务提交之前才注册分支，避免分支执行失败情况下，没有意义的分支注册。")]),a._v(" "),t("p",[a._v("这个优化方向需要 BranchId 生成机制的变化来配合。BranchId 不通过分支注册过程生成，而是生成后再带着 BranchId 去注册分支。")]),a._v(" "),t("h2",{attrs:{id:"xa-模式的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xa-模式的使用"}},[a._v("#")]),a._v(" XA 模式的使用")]),a._v(" "),t("p",[a._v("从编程模型上，XA 模式与 AT 模式保持完全一致。")]),a._v(" "),t("p",[a._v("可以参考 Seata 官网的样例："),t("a",{attrs:{href:"https://github.com/seata/seata-samples/tree/master/seata-xa",target:"_blank",rel:"noopener noreferrer"}},[a._v("seata-xa"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("样例场景是 Seata 经典的，涉及库存、订单、账户 3 个微服务的商品订购业务。")]),a._v(" "),t("p",[a._v("在样例中，上层编程模型与 AT 模式完全相同。只需要修改数据源代理，即可实现 XA 模式与 AT 模式之间的切换。")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"dataSource"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DataSource")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("dataSource")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DruidDataSource")]),a._v(" druidDataSource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// DataSourceProxy for AT mode")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// return new DataSourceProxy(druidDataSource);")]),a._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// DataSourceProxyXA for XA mode")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DataSourceProxyXA")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("druidDataSource"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);