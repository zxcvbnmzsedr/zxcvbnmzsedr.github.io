{
    "componentChunkName": "component---src-templates-topic-page-template-tsx",
    "path": "/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/Sega模式",
    "result": {"pageContext":{"id":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/Sega模式","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Sega模式"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Saga模式是SEATA提供的⻓事务解决⽅案，在Saga模式中，业务流程中 每个参与者都提交本地事务，当出现某⼀个参与者失败则补偿前⾯已经成 功的参与者，⼀阶段正向服务和⼆阶段补偿服务都由业务开发实现。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"基于状态机引擎的 Saga 实现"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"⽬前SEATA提供的Saga模式是基于状态机引擎来实现的，机制是："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"基于json格式定义服务调用状态图；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"状态图的一个节点可以是一个服务，节点可以配置补偿节点；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"状态图json由状态机执行引擎驱动执行，当出现异常状态时状态机引擎执行反向补偿任务将事物回滚；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"异常状态发生时是否进行补偿由用户自定义决定；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"可以实现服务编排的需求，支持单项选择、并发、异步、子状态机调用、参数转换、参数映射、服务执行状态判断、异常捕获等功能；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://image.ztianzeng.com/uPic/20220427111055.png","alt":""},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"springCloud seata saga接入指南"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"配置状态机"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-json"]},"children":[{"type":"text","value":"{\n  \"Name\": \"purchaseProcess\",\n  \"Comment\": \"用户下单流程-saga流程\",\n  \"StartState\": \"CreateOrderNo\",\n  \"Version\": \"1.0.0\",\n  \"States\": {\n    \"CreateOrderNo\": {\n      \"Comment\": \"生成订单号服务\",\n      \"Type\": \"ServiceTask\",\n      \"ServiceName\": \"com.fly.seata.api.OrderApi\",\n      \"ServiceMethod\": \"createOrderNo\",\n      \"CompensateState\": \"CompensationCanalOrder1\",\n      \"Catch\": [\n        {\n          \"Exceptions\": [\n            \"java.lang.Throwable\"\n          ],\n          \"Next\": \"CompensationTrigger\"\n        }],\n      \"Output\": {\n        \"orderNo\":\"$.#root\"\n      },\n      \"Next\": \"CreateOrder\",\n      \"Status\": {\n        \"$Exception{java.lang.Throwable}\": \"UN\",\n        \"#root != null\": \"SU\",\n        \"#root == null\": \"FA\"\n      }\n    },\n    \"CreateOrder\": {\n      \"Comment\": \"创建订单服务\",\n      \"Type\": \"ServiceTask\",\n      \"ServiceName\": \"com.fly.seata.api.OrderApi\",\n      \"ServiceMethod\": \"createOrder\",\n      \"CompensateState\": \"CompensationCanalOrder2\",\n      \"Next\": \"ReduceStorage\",\n      \"Input\": [{\n          \"orderNo\": \"$.[orderNo]\",\n          \"userId\": \"$.[order].userId\",\n          \"productId\": \"$.[order].productId\",\n          \"count\": \"$.[order].count\",\n          \"price\": \"$.[order].price\"\n        }],\n      \"Catch\": [{\n          \"Exceptions\": [\n            \"java.lang.Throwable\"\n          ],\n          \"Next\": \"CompensationTrigger\"\n        }],\n      \"Status\": {\n        \"$Exception{java.lang.Throwable}\": \"UN\",\n        \"#root != null\": \"SU\",\n        \"#root == null\": \"FA\"\n      }\n    },\n    \"ReduceStorage\": {\n      \"Comment\": \"扣减库存服务\",\n      \"Type\": \"ServiceTask\",\n      \"ServiceName\": \"com.fly.seata.api.StorageApi\",\n      \"ServiceMethod\": \"reduce\",\n      \"CompensateState\": \"CompensatingReduceStorage\",\n      \"Next\":\"Succeed\",\n      \"Input\": [{\n        \"orderNo\": \"$.[orderNo]\",\n        \"productId\": \"$.[order].productId\",\n        \"count\": \"$.[order].count\"\n      }],\n      \"Catch\": [{\n        \"Exceptions\": [\n          \"java.lang.Throwable\"\n        ],\n        \"Next\": \"CompensationTrigger\"\n      }]\n    },\n    \"CompensationCanalOrder1\": {\n      \"Comment\": \"取消订单补偿服务1--用于订单号生成失败\",\n      \"Type\": \"ServiceTask\",\n      \"ServiceName\": \"com.fly.seata.api.OrderApi\",\n      \"ServiceMethod\": \"canalOrder\",\n      \"Input\": [\n        \"$.[orderNo]\",\n        1\n      ]\n    },\n    \"CompensationCanalOrder2\": {\n      \"Comment\": \"取消订单补偿服务2--用于订单生成失败\",\n      \"Type\": \"ServiceTask\",\n      \"ServiceName\": \"com.fly.seata.api.OrderApi\",\n      \"ServiceMethod\": \"canalOrder\",\n      \"Input\": [\n        \"$.[orderNo]\",\n        2\n      ]\n    },\n    \"CompensatingReduceStorage\": {\n      \"Comment\": \"库存补偿服务\",\n      \"Comment\": \"扣减库存服务\",\n      \"Type\": \"ServiceTask\",\n      \"ServiceName\": \"com.fly.seata.api.StorageApi\",\n      \"ServiceMethod\": \"compensateReduce\",\n      \"Input\": [{\n        \"orderNo\": \"$.[orderNo]\",\n        \"productId\": \"$.[order].productId\",\n        \"count\": \"$.[order].count\"\n      }]\n    },\n    \"CompensationTrigger\": {\n      \"Type\": \"CompensationTrigger\"\n    },\n    \"Succeed\": {\n      \"Type\":\"Succeed\"\n    },\n    \"Fail\": {\n      \"Type\":\"Fail\",\n      \"ErrorCode\": \"STORAGE_FAILED\",\n      \"Message\": \"purchase failed\"\n    }\n  }\n}\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"配置状态机引擎"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"@Configuration\npublic class SagaConfig {\n\n  @ConfigurationProperties(\"spring.datasource.saga\")\n  @Bean\n  public DataSource dataSource(){\n    return new DruidDataSource();\n  }\n\n  @Bean\n  public DbStateMachineConfig dbStateMachineConfig(){\n    DbStateMachineConfig dbStateMachineConfig = new DbStateMachineConfig();\n    dbStateMachineConfig.setDataSource(dataSource());\n    Resource[] resources = {new ClassPathResource(\"statelang/purchase.json\")};\n    dbStateMachineConfig.setResources(resources);\n    dbStateMachineConfig.setEnableAsync(true);\n    dbStateMachineConfig.setThreadPoolExecutor(threadPoolExecutor());\n    dbStateMachineConfig.setApplicationId(\"sage-tm\");\n    dbStateMachineConfig.setTxServiceGroup(\"my_test_tx_group\");\n    return dbStateMachineConfig;\n  }\n\n  /**\n   * saga状态图执行引擎\n   * @return\n   */\n  @Bean\n  public StateMachineEngine processCtrlStateMachineEngine(){\n    ProcessCtrlStateMachineEngine stateMachineEngine = new ProcessCtrlStateMachineEngine();\n    stateMachineEngine.setStateMachineConfig(dbStateMachineConfig());\n    return stateMachineEngine;\n  }\n\n  @Bean\n  public StateMachineEngineHolder stateMachineEngineHolder(){\n    StateMachineEngineHolder stateMachineEngineHolder = new StateMachineEngineHolder();\n    stateMachineEngineHolder.setStateMachineEngine(processCtrlStateMachineEngine());\n    return stateMachineEngineHolder;\n  }\n\n  @Bean\n  public ThreadPoolExecutor threadPoolExecutor(){\n    ThreadPoolExecutorFactoryBean threadPoolExecutorFactoryBean = new ThreadPoolExecutorFactoryBean();\n    threadPoolExecutorFactoryBean.setCorePoolSize(1);\n    threadPoolExecutorFactoryBean.setMaxPoolSize(20);\n    threadPoolExecutorFactoryBean.setThreadNamePrefix(\"saga_\");\n    return (ThreadPoolExecutor)threadPoolExecutorFactoryBean.getObject();\n  }\n}\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"状态机执行"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"@RequestMapping(\"/tm\")\n@RestController\npublic class TmController {\n\n  /**\n   * 模拟购买商品流程\n   * @return\n   */\n  @GlobalTransactional\n  @GetMapping(\"/purchase\")\n  public String purchase(){\n    Map<String, Object> startParams = new HashMap<>();\n    OrderDTO orderDTO = new OrderDTO();\n    orderDTO.setUserId(1l);\n    orderDTO.setCount(1);\n    orderDTO.setPrice(new BigDecimal(19));\n    orderDTO.setProductId(1l);\n    startParams.put(\"order\",orderDTO);\n    StateMachineInstance stateMachineInstance = stateMachineEngine.start(\"purchaseProcess\",null,startParams);\n    return \"执行状态:\"+stateMachineInstance.getStatus().getStatusString();\n  }\n\n}\n"}]}]}],"data":{"quirksMode":false}},"headings":[{"depth":1,"value":"Sega模式","slug":"sega模式"},{"depth":1,"value":"基于状态机引擎的 Saga 实现","slug":"基于状态机引擎的-saga-实现"},{"depth":1,"value":"springCloud seata saga接入指南","slug":"springcloud-seata-saga接入指南"},{"depth":3,"value":"配置状态机","slug":"配置状态机"},{"depth":2,"value":"配置状态机引擎","slug":"配置状态机引擎"},{"depth":2,"value":"状态机执行","slug":"状态机执行"}]}},
    "staticQueryHashes": ["928362550"]}