{"version":3,"file":"component---src-pages-feedback-tsx-92289f88b70bc068747a.js","mappings":"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","sources":["webpack://ztianzeng.com/./src/components/Article/CommentPanel.tsx","webpack://ztianzeng.com/./src/layouts/BannerLayout.tsx","webpack://ztianzeng.com/./src/layouts/LayeredLayout.tsx","webpack://ztianzeng.com/./src/layouts/Page.tsx","webpack://ztianzeng.com/./src/pages/feedback.tsx"],"sourcesContent":["import \"gitalk/dist/gitalk.css\";\n\nimport GitalkComponent from \"gitalk/dist/gitalk-component\";\nimport React, { useEffect } from \"react\";\nimport { FaComments } from \"react-icons/fa\";\nimport styled from \"styled-components\";\n\nimport { languageInfo,Localized, useI18n } from \"@/i18n\";\nimport isServer from \"@/utils/isServer\";\n\ninterface Props {\n  articleId: string;\n  articleTitle: string;\n  language: string;\n}\n\nconst CommentDiv = styled.div`\n  margin-top: 32px;\n\n  .gt-action-text {\n    color: #6190e8;;\n  }\n`;\n\nconst CommentPanel: React.FC<Props> = (props) => {\n\n  const [mount, setMount] = React.useState(!isServer());\n\n  const firstUpdate = React.useRef(true);\n\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    setMount(false);\n  }, [props.language]);\n\n  useEffect(() => {\n    if (!isServer() && !mount) {\n      setMount(true);\n    }\n  });\n\n  return (\n    <CommentDiv>\n      <h3>\n        <FaComments />\n        <Localized id=\"comments.title\" />\n      </h3>\n\n    </CommentDiv>\n  );\n};\n\nconst CommentPanelWithCurrentLanguage: React.FC<Omit<Props, \"language\">> = (props) => {\n  const i18n = useI18n();\n\n  return (\n    <CommentPanel\n      {...props}\n      language={languageInfo[i18n.currentLanguage.id].gitalkLangId\n        ?? languageInfo.cn.gitalkLangId}\n    />\n  );\n};\n\nexport { CommentPanelWithCurrentLanguage,CommentPanel as default };\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  InnerContainer as BaseInnerContainer,\n  RootContainer as BaseRootContainer,\n} from \"@/layouts/LayeredLayout\";\nimport moveInAnimation from \"@/styles/moveInAnimation\";\nimport { colors,heights } from \"@/styles/variables\";\n\nimport HeaderFooterLayout from \"./HeaderFooterLayout\";\n\ninterface Props {\n  transparentHeader: boolean;\n  banner?: React.ReactNode;\n}\n\nconst BannerLayout: React.FC<Props> = ({ transparentHeader, banner, children }) => {\n  return (\n    <HeaderFooterLayout transparentHeader={transparentHeader}>\n      {banner && <RootContainer>\n        <InnerContainer>\n          <BannerContainer>\n            {banner}\n          </BannerContainer>\n        </InnerContainer>\n      </RootContainer>\n      }\n\n      {children}\n    </HeaderFooterLayout>\n  );\n};\n\nconst RootContainer = styled(BaseRootContainer)`\n  height: ${heights.banner}px;\n  width: 100%;\n  background-color: ${colors.headerBg};\n\n`;\n\nconst InnerContainer = styled(BaseInnerContainer)`\n  height: ${heights.banner}px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  animation: ${moveInAnimation} 0.2s ease-out;\n`;\n\nconst BannerContainer = styled.div`\n  text-align: center;\n  color: white;\n  padding: 0px 8px 8px 8px;\n`;\n\nconst BannerLayoutTitle = styled.h1`\n  font-size: 2em;\n  padding: 4px 0;\n`;\n\nconst BannerLayoutDescription = styled.h2`\n  font-size: 0.9em;\n  padding: 4px 0;\n`;\n\nexport { BannerLayoutDescription,BannerLayoutTitle, BannerLayout as default };\n","import styled from \"styled-components\";\n\nexport const RootContainer = styled.div`\n  position: relative;\n`;\n\nexport const InnerContainer = styled.div`\n  position: absolute;\n  width: 100%;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport moveInAnimation from \"@/styles/moveInAnimation\";\nimport { widths } from \"@/styles/variables\";\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: 16px;\n\n  img {\n    max-width: 100%;\n  }\n\n  table {\n    display: inline-block;\n    overflow-x: auto;\n  }\n\n  blockquote p:last-child {\n    margin-bottom: 0;\n  }\n`;\n\ninterface Props {\n  className?: string;\n  children?: React.ReactNode;\n  maxWidth?: number;\n}\n\nconst StyledContainer = styled.div<{ maxWidth: number }>`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${({ maxWidth }) => maxWidth}px;\n\n  animation: ${moveInAnimation} 0.2s ease-out;\n`;\n\nconst Page: React.FC<Props> = ({\n  className, children,\n  maxWidth = widths.mainContent,\n}) => {\n  return (\n    <StyledPage>\n      <StyledContainer maxWidth={maxWidth} className={className}>\n        {children}\n      </StyledContainer>\n    </StyledPage>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\r\n\r\nimport { CommentPanelWithCurrentLanguage } from \"@/components/Article/CommentPanel\";\r\nimport Contacts from \"@/components/Contacts\";\r\nimport { PageMetadata } from \"@/components/PageMetadata\";\r\nimport { Localized, prefix } from \"@/i18n\";\r\nimport { BannerLayoutTitle } from \"@/layouts/BannerLayout\";\r\nimport HeaderFooterLayout from \"@/layouts/HeaderFooterLayout\";\r\nimport Page from \"@/layouts/Page\";\r\n\r\nconst root = prefix(\"feedback.\");\r\n\r\nconst FeedbackPage: React.FC = () => {\r\n\r\n  return (\r\n    <HeaderFooterLayout transparentHeader={false}>\r\n      <PageMetadata\r\n        titleId={root(\"title\")}\r\n      />\r\n      <Page>\r\n        <BannerLayoutTitle><Localized id={root(\"title\")} /></BannerLayoutTitle>\r\n        <p><Localized id={root(\"paragraph1\")} /></p>\r\n        <p><Localized id={root(\"paragraph2\")} /></p>\r\n        <p><Localized id={root(\"paragraph3\")} /></p>\r\n        <Contacts color={\"white\"} size={1.4} />\r\n        <CommentPanelWithCurrentLanguage articleId=\"feedback\" articleTitle=\"反馈\" />\r\n      </Page>\r\n    </HeaderFooterLayout>\r\n\r\n  );\r\n};\r\n\r\nexport default FeedbackPage;\r\n"],"names":["CommentDiv","styled","CommentPanel","props","React","isServer","mount","setMount","firstUpdate","useEffect","current","language","FaComments","Localized","id","CommentPanelWithCurrentLanguage","i18n","useI18n","languageInfo","currentLanguage","gitalkLangId","BannerLayout","transparentHeader","banner","children","HeaderFooterLayout","RootContainer","InnerContainer","BannerContainer","BaseRootContainer","withConfig","heights","colors","BaseInnerContainer","moveInAnimation","BannerLayoutTitle","StyledPage","StyledContainer","maxWidth","className","widths","root","prefix","PageMetadata","titleId","Page","Contacts","color","size","articleId","articleTitle"],"sourceRoot":""}