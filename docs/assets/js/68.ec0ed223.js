(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{371:function(s,t,a){"use strict";a.r(t);var e=a(6),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("由于之前没有考虑到nas的强大，在不断的装docker之后，磁盘竟然满了，后面扩容就一不小心将扩展分区给删除了，虽然成功的扩容了磁盘，但只成功运行了几天，后面一次断点重启，就直接导致无法开机（grub的问题），因为里面就一些电影文件，所以索性心一横直接重装了系统。")]),s._v(" "),t("p",[s._v("我重新审视了一下我自己的需求，无非是影音文件的共享，顺带装个逼，又考虑到J3160这颗垃圾U着实撑不起场面，所以就抛弃了之前用OMV5装docker这种庞大臃肿的方案，能原生的就原生去装。")]),s._v(" "),t("p",[s._v("OMV5的插件比OMV4少了太多，原生插件堪称基类，基本上都是docker的方案来解决，既然如此，那么用OMV6其实并没有太大的区别，反正都没啥插件，还能体验新系统，所以就折腾起OMV6了。")]),s._v(" "),t("p",[s._v("再次记录一下装OMV6的过程。")]),s._v(" "),t("p",[s._v("使用ISO傻瓜式安装过程就不在此叙述了~~~~")]),s._v(" "),t("h2",{attrs:{id:"安装完之后的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装完之后的问题"}},[s._v("#")]),s._v(" 安装完之后的问题")]),s._v(" "),t("h3",{attrs:{id:"中文乱码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#中文乱码"}},[s._v("#")]),s._v(" 中文乱码")]),s._v(" "),t("p",[s._v("安装完，第一件要解决的就是中文乱码问题。")]),s._v(" "),t("p",[s._v("装完之后使用"),t("code",[s._v("local")]),s._v("e命令输出的编码是"),t("code",[s._v("zh_CN.UTF-8")]),s._v(" 不知道为啥会导致ls 查看中文目录的时候乱码。")]),s._v(" "),t("p",[s._v("解决方案: 使用 "),t("code",[s._v("dpkg-reconfigure locales")]),s._v(" 重新配置编码方式 为 "),t("code",[s._v("en_US.UTF-8")])]),s._v(" "),t("h3",{attrs:{id:"smb协议兼容问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#smb协议兼容问题"}},[s._v("#")]),s._v(" smb协议兼容问题")]),s._v(" "),t("p",[s._v("我用小米电视连接smb的时候，始终无法连接上，网上查询得知小米电视采用的是"),t("code",[s._v("SMB1.0")]),s._v("的协议 ,然后OMV6的需要手动修改一下SMB支持的最低版本")]),s._v(" "),t("p",[s._v("在图形化界面的SMB设置那里设置 "),t("code",[s._v("server min protocol = CORE")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://image.ztianzeng.com/uPic/image-20220108225924680.png",alt:"image-20220108225924680"}})]),s._v(" "),t("h2",{attrs:{id:"需要安装的软件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#需要安装的软件"}},[s._v("#")]),s._v(" 需要安装的软件")]),s._v(" "),t("p",[s._v("这些软件原本我是采用docker进行安装，现在都改为原生安装")]),s._v(" "),t("p",[s._v("为了这颗破U，能省则省")]),s._v(" "),t("h3",{attrs:{id:"airconnect"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#airconnect"}},[s._v("#")]),s._v(" airconnect")]),s._v(" "),t("p",[s._v("目的为了能将苹果的音频投放到我的小爱音箱")]),s._v(" "),t("p",[s._v("从 https://github.com/philippe44/AirConnect 下载对应架构的 airupnp")]),s._v(" "),t("p",[s._v("我的是 airupnp-x86-64,")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://github.com/philippe44/AirConnect/raw/master/bin/airupnp-x86-64\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" airupnp-x86-64 /usr/bin/air\n")])])]),t("p",[s._v("设置服务")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /usr/lib/systemd/system/air.service\t\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 写入")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Description")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("air server\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("After")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("network.target\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Service"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Type")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("simple\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("User")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("root\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/bin/air  -Z\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Restart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("on-failure\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Install"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("WantedBy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("multi-user.target\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 执行")]),s._v("\nsystemctl daemon-reload\nsystemctl start air\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" air\nsystemctl status air\n")])])]),t("h3",{attrs:{id:"webdav"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webdav"}},[s._v("#")]),s._v(" webdav")]),s._v(" "),t("p",[s._v("将smb转为更加通用的webdav协议")]),s._v(" "),t("p",[s._v("用的是"),t("a",{attrs:{href:"https://github.com/hacdias/webdav",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/hacdias/webdav"),t("OutboundLink")],1),s._v("，发现这个用go写的，最为轻量才几M")]),s._v(" "),t("p",[s._v("下载对应架构的webdav执行文件，放到/usr/bin目录下面")]),s._v(" "),t("p",[s._v("配置文件说明:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 监听任意网卡，多网卡可指定对应ip")]),s._v("\naddress: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0\nport: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8081")]),s._v("\nauth: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\nprefix: /\n\nmodify: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\nrules: "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 跨域设置")]),s._v("\ncors:\n  enabled: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n  credentials: "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n  allowed_headers:\n    - Depth\n  allowed_hosts:\n    - http://localhost:8081\n  allowed_methods:\n    - GET\n  exposed_headers:\n    - Content-Length\n    - Content-Range\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用户信息，如果 auth 为 true 生效")]),s._v("\nusers:\n  - username: admin\n    password: admin\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置自己的硬盘路径")]),s._v("\n    scope: /srv/dev-disk-by-uuid-c78a92c0-7c20-4480-b997-1f88c9d0cd4d/\n")])])]),t("p",[s._v("更多的就去找官网吧，我将这个文件保存为 /home/webdav/webdav.config.yml （个人习惯保存在home目录下）")]),s._v(" "),t("p",[s._v("将webdav 配置成服务")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Unit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Description")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("WebDAV server\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("After")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("network.target\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Service"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Type")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("simple\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("User")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("root\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ExecStart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/usr/bin/webdav --config /home/webdav/webdav.config.yml\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("Restart")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("on-failure\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Install"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("WantedBy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("multi-user.target\n")])])]),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("systemctl daemon-reload\nsystemctl start webdav\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" webdav\nsystemctl status webdav\n")])])]),t("h3",{attrs:{id:"远程挂载webdav"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#远程挂载webdav"}},[s._v("#")]),s._v(" 远程挂载webdav")]),s._v(" "),t("p",[s._v("因为有大佬将阿里云盘封装成webdav协议，所以我们可以通过挂载webdav的方式将阿里云盘作为我们的本地盘.")]),s._v(" "),t("p",[s._v("原本的挂载阿里云盘的服务使用docker部署的，着实太重，后面我就给迁移到了openwrt上面去了，就不在nas上进行挂载了，nas上只需要挂载阿里云盘的webdav服务即可，挂载教程 https://github.com/messense/aliyundrive-webdav")]),s._v(" "),t("p",[t("s",[s._v("nas上挂载webdav的方法是采用davfs2")])]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 安装davfs2")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" davfs2 -y\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 挂载，自行修改webdav的ip 和 挂载路径")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v("  -t davfs -o noexec http://192.168.31.3:8080 /srv/dev-disk-by-uuid-c78a92c0-7c20-4480-b997-1f88c9d0cd4d/aliyun/\n")])])]),t("p",[t("s",[s._v("如果想要开机自动挂载 WebDAV，并且自动输入用户名和密码，需要将")]),s._v("​~~ 中的 "),t("s",[s._v("​")]),s._v(" 解除注释，并将值修改为 "),t("s",[s._v("​")]),s._v("，接下来在 "),t("s",[s._v("​")]),s._v(" 末尾添加 "),t("s",[s._v("​")]),s._v("，最后在 "),t("s",[s._v("​")]),s._v(" 末尾添加 "),t("s",[s._v("​")]),s._v("。"),t("s",[s._v("​")]),t("code",[s._v("/etc/davfs2/davfs2.conf")]),t("s",[s._v("​")]),t("code",[s._v("use_lock")]),t("s",[s._v("​")]),t("code",[s._v("0")]),t("s",[s._v("​")]),t("code",[s._v("/etc/davfs2/secrets")]),t("s",[s._v("​")]),t("code",[s._v("WebDAV地址 用户名 密码")]),t("s",[s._v("​")]),t("code",[s._v("/etc/fstab")]),t("s",[s._v("​")]),t("code",[s._v("WebDAV地址 /mnt/webdav davfs rw,user,_netdev 0 0")]),s._v("~~")]),s._v(" "),t("p",[s._v("使用过程中发现，davfs2挂载的时候会出现无法播放以及网络资源占用的莫名情况，故改为rclone挂载。")]),s._v(" "),t("p",[s._v("安装rclone:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" https://rclone.org/install.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\nrclone\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 根据命令行给出的提示进行配置操作")]),s._v("\n")])])]),t("p",[s._v("修改"),t("code",[s._v("/etc/fuse.conf")]),s._v(",加上"),t("code",[s._v("user_allow_other")]),s._v(" 表示允许非root用户可以登录")]),s._v(" "),t("p",[s._v("挂载文件的命令:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("rclone "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" ali:/ /srv/dev-disk-by-uuid-c78a92c0-7c20-4480-b997-1f88c9d0cd4d/aliyun --cache-dir /tmp --allow-other --vfs-cache-mode full --allow-non-empty  \n")])])]),t("p",[s._v("注册成服务")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('command="mount ali:/ /srv/dev-disk-by-uuid-c78a92c0-7c20-4480-b997-1f88c9d0cd4d/aliyun --cache-dir /tmp --allow-other --vfs-cache-mode full --allow-non-empty"\ncat > /etc/systemd/system/rclone.service <<EOF\n[Unit]\nDescription=Rclone\nAfter=network-online.target\n\n[Service]\nType=simple\nExecStart=$(command -v rclone) ${command}\nRestart=on-abort\nUser=root\n\n[Install]\nWantedBy=default.target\nEOF\n')])])]),t("h3",{attrs:{id:"内网穿透"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内网穿透"}},[s._v("#")]),s._v(" 内网穿透")]),s._v(" "),t("p",[s._v("我发现国内某头部厂商基于"),t("code",[s._v("ngork")]),s._v("提供了一个不限速的内网穿透工具，为了它能存活的久一点，我就不透露它的名字了。")]),s._v(" "),t("p",[s._v("因为是基于"),t("code",[s._v("ngork")]),s._v("，使用"),t("code",[s._v("nohup")]),s._v("无法使其在后台运行，使用"),t("code",[s._v("screen")]),s._v("能够后台运行但是无法开机启动，因此我们需要安装"),t("code",[s._v("supervisord")]),s._v("来控制进程的启动")]),s._v(" "),t("p",[s._v("安装: supervisor")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-cache")]),s._v(" show supervisor\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" supervisor\nsupervisord -v\n")])])]),t("p",[s._v("设置启动服务")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/supervisor/conf.d/ngrok.conf\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目名称，对应前面supervisorctl命令里的服务名称")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("program:ngrok"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 目录")]),s._v("\ndirectory "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" /usr/local/bin/\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行的命令")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" /usr/local/bin/ngrok http -log stdout --authtoken yourtoken "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.200:4000\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 supervisord 启动的时候也自动启动")]),s._v("\nautostart "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动 5 秒后没有异常退出，就当作已经正常启动了")]),s._v("\nstartsecs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 程序异常退出后自动重启")]),s._v("\nautorestart "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动失败自动重试次数，默认是 3")]),s._v("\nstartretries "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行命令的用户")]),s._v("\nuser "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" root\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 把 stderr 重定向到 stdout，默认 false")]),s._v("\nredirect_stderr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stdout 日志文件大小，默认 50MB")]),s._v("\nstdout_logfile_maxbytes "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" 50MB\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stdout 日志文件备份数")]),s._v("\nstdout_logfile_backups "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stdout 日志文件")]),s._v("\nstdout_logfile "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" /var/log/supervisor/ngrok.log\n")])])]),t("p",[s._v("运行:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加载 ngrok 服务")]),s._v("\nsupervisorctl start ngrok\n")])])]),t("h3",{attrs:{id:"zidr-管理文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zidr-管理文件"}},[s._v("#")]),s._v(" zidr 管理文件")]),s._v(" "),t("p",[s._v("这也是一个神器")]),s._v(" "),t("p",[s._v("nginx配置，直接使用omv的php 的socket进行通讯:")]),s._v(" "),t("div",{staticClass:"language-nginx extra-class"},[t("pre",{pre:!0,attrs:{class:"language-nginx"}},[t("code",[t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("listen")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("server_name")]),s._v(" zidr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" zdir/index.php index.html index.htm index.php")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("root")]),s._v(" /data/wwwroot/default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("access_log")]),s._v(" /var/log/zdir.log combined")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#rewrite")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rewrite")]),s._v(" ^/static/(.+) /zdir/static/"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(" break")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     \n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#error_page 404 /404.html;")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#error_page 502 /502.html;")]),s._v("\n\n      "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" ~ [^/]\\.php(/|$)")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_split_path_info")]),s._v(" ^(.+\\.php)(/.+)$")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_pass")]),s._v(" unix:/run/php/php7.4-fpm-openmediavault-webgui.sock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_index")]),s._v(" index.php")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_read_timeout")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("60s")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("include")]),s._v(" fastcgi.conf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fastcgi_param")]),s._v(" SCRIPT_FILENAME "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$document_root")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$fastcgi_script_name")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n      "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" ~ .*\\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("expires")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30d")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("access_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("off")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" ~ .*\\.(js|css)?$")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("expires")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7d")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("access_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("off")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("location")]),s._v(" ~ /\\.ht")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token directive"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("deny")]),s._v(" all")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("创建路径:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p  /data/wwwroot/default "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /data/wwwroot/default\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/helloxz/zdir.git\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 将目录软连接到这里")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s /srv/dev dev\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);