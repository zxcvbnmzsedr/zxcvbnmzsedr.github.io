{
    "componentChunkName": "component---src-templates-article-page-template-tsx",
    "path": "/posts/记:多线程中调用feign失败",
    "result": {"pageContext":{"id":"/posts/记:多线程中调用feign失败","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"记:多线程中调用feign失败"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在代码运行的时候，在第一次调用feign抛出异常"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"className":["grvsc-container","dark-default-dark"],"dataLanguage":"","dataIndex":"0"},"children":[{"type":"element","tagName":"code","properties":{"className":["grvsc-code"]},"children":[{"type":"element","tagName":"span","properties":{"className":["grvsc-line"]},"children":[{"type":"element","tagName":"span","properties":{"className":["grvsc-source"]},"children":[{"type":"text","value":"Could not find class [org.springframework.boot.autoconfigure.condition.OnPropertyCondition]"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"一查发现github上有个issus:"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"https://github.com/spring-cloud/spring-cloud-openfeign/issues/475"},"children":[{"type":"text","value":"https://github.com/spring-cloud/spring-cloud-openfeign/issues/475"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"目前暂无解决方案"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"目前只有启动时监听配置文件，让其能够主动先将feign初始化好，以免后续在调用的时候进行初始化"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"大佬的pr:"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"https://github.com/spring-cloud/spring-cloud-openfeign/pull/512"},"children":[{"type":"text","value":"https://github.com/spring-cloud/spring-cloud-openfeign/pull/512"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"但是，openfeign的作者认为这个并没有解决本质的问题，还是考虑在ForkjoinPool中以异步的方式初始化feignclient"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"不过，这个PR是目前，对代码侵入性最小的解决方案。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"style","properties":{"className":["grvsc-styles"]},"children":[{"type":"text","value":"\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n"}]}],"data":{"quirksMode":false}},"html":"<h1 id=\"记-多线程中调用feign失败\">记:多线程中调用feign失败</h1>\n<p updated=\"20220721104027\">在代码运行的时候，在第一次调用feign抛出异常</p>\n<pre class=\"code-block\" data-language=\"\"><code class=\"hljs\">Could not find class [org.springframework.boot.autoconfigure.condition.OnPropertyCondition]\n</code></pre>\n<p updated=\"20220721104027\">一查发现github上有个issus:<br />\n<a href=\"https://github.com/spring-cloud/spring-cloud-openfeign/issues/475\">https://github.com/spring-cloud/spring-cloud-openfeign/issues/475</a></p>\n<p updated=\"20220721104027\">目前暂无解决方案</p>\n<p updated=\"20220721104027\">目前只有启动时监听配置文件，让其能够主动先将feign初始化好，以免后续在调用的时候进行初始化</p>\n<p updated=\"20220721104027\">大佬的pr:<br />\n<a href=\"https://github.com/spring-cloud/spring-cloud-openfeign/pull/512\">https://github.com/spring-cloud/spring-cloud-openfeign/pull/512</a></p>\n<p updated=\"20220721104027\">但是，openfeign的作者认为这个并没有解决本质的问题，还是考虑在ForkjoinPool中以异步的方式初始化feignclient</p>\n<p updated=\"20220721104027\">不过，这个PR是目前，对代码侵入性最小的解决方案。</p>\n","articleNode":{"field":{"contentType":"posts","topic":null},"frontmatter":{"id":"/posts/记:多线程中调用feign失败","title":"记:多线程中调用feign失败","date":"2022-04-21 15:48","absolute_path":"/posts/记:多线程中调用feign失败"},"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"记:多线程中调用feign失败"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在代码运行的时候，在第一次调用feign抛出异常"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{"className":["grvsc-container","dark-default-dark"],"dataLanguage":"","dataIndex":"0"},"children":[{"type":"element","tagName":"code","properties":{"className":["grvsc-code"]},"children":[{"type":"element","tagName":"span","properties":{"className":["grvsc-line"]},"children":[{"type":"element","tagName":"span","properties":{"className":["grvsc-source"]},"children":[{"type":"text","value":"Could not find class [org.springframework.boot.autoconfigure.condition.OnPropertyCondition]"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"一查发现github上有个issus:"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"https://github.com/spring-cloud/spring-cloud-openfeign/issues/475"},"children":[{"type":"text","value":"https://github.com/spring-cloud/spring-cloud-openfeign/issues/475"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"目前暂无解决方案"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"目前只有启动时监听配置文件，让其能够主动先将feign初始化好，以免后续在调用的时候进行初始化"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"大佬的pr:"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"a","properties":{"href":"https://github.com/spring-cloud/spring-cloud-openfeign/pull/512"},"children":[{"type":"text","value":"https://github.com/spring-cloud/spring-cloud-openfeign/pull/512"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"但是，openfeign的作者认为这个并没有解决本质的问题，还是考虑在ForkjoinPool中以异步的方式初始化feignclient"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"不过，这个PR是目前，对代码侵入性最小的解决方案。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"style","properties":{"className":["grvsc-styles"]},"children":[{"type":"text","value":"\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .dark-default-dark {\n    background-color: #1E1E1E;\n    color: #D4D4D4;\n  }\n  .dark-default-dark .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n"}]}],"data":{"quirksMode":false}},"html":"<h1 id=\"记-多线程中调用feign失败\">记:多线程中调用feign失败</h1>\n<p updated=\"20220721104027\">在代码运行的时候，在第一次调用feign抛出异常</p>\n<pre class=\"code-block\" data-language=\"\"><code class=\"hljs\">Could not find class [org.springframework.boot.autoconfigure.condition.OnPropertyCondition]\n</code></pre>\n<p updated=\"20220721104027\">一查发现github上有个issus:<br />\n<a href=\"https://github.com/spring-cloud/spring-cloud-openfeign/issues/475\">https://github.com/spring-cloud/spring-cloud-openfeign/issues/475</a></p>\n<p updated=\"20220721104027\">目前暂无解决方案</p>\n<p updated=\"20220721104027\">目前只有启动时监听配置文件，让其能够主动先将feign初始化好，以免后续在调用的时候进行初始化</p>\n<p updated=\"20220721104027\">大佬的pr:<br />\n<a href=\"https://github.com/spring-cloud/spring-cloud-openfeign/pull/512\">https://github.com/spring-cloud/spring-cloud-openfeign/pull/512</a></p>\n<p updated=\"20220721104027\">但是，openfeign的作者认为这个并没有解决本质的问题，还是考虑在ForkjoinPool中以异步的方式初始化feignclient</p>\n<p updated=\"20220721104027\">不过，这个PR是目前，对代码侵入性最小的解决方案。</p>\n","headings":[{"depth":1,"value":"记:多线程中调用feign失败"}],"path":"/posts/记:多线程中调用feign失败"},"headings":[{"depth":1,"value":"记:多线程中调用feign失败","slug":"记多线程中调用feign失败"}]}},
    "staticQueryHashes": ["630634786","928362550"]}