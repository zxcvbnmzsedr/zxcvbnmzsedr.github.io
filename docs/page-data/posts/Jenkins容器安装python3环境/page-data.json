{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Jenkins容器安装python3环境","result":{"data":{"siYuan":{"excerpt":"Jenkins容器安装python3环境 在docker环境中安装jenkins，jenkins的构建环境是docker中的环境，默认的docker中默认只有python2而没有python3，因此需要再docker中手动装python3 ...","raw":"# Jenkins容器安装python3环境\n\n在docker环境中安装jenkins，jenkins的构建环境是docker中的环境，默认的docker中默认只有python2而没有python3，因此需要再docker中手动装python3\n\n# 进入jenkins容器\n\ndocker exec -it -u root 容器id /bin/bash\n\n# 容器内部安装python3\n\n## 下载python3安装包\n\n```\ncd /var/jenkins_home/\nmkdir python3 && cd python3\nwget https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tgz\ntar -xvf Python-3.6.8.tgz\ncd Python-3.6.8\n./configure --prefix=/var/jenkins_home/python3\n```\n\n如果执行后报错 configure: error: no acceptable C compiler found in $PATH 则是因为缺少gcc相关的依赖包\n\n## 安装依赖包\n\n自行根据docker的系统镜像选用apt-get 或者 yum 进行安装\n\n```\nyum -y install gcc automake autoconf libtool make\nyum -y install make*\nyum -y install zlib*\nyum -y install openssl libssl-dev\nyum install sudo\n```\n\n## make 编译\n\n在python-3.6.8这个目录下重新执行安装\n\n```\n./configure --prefix=/var/jenkins_home/python3 --with-ssl\nmake\nmake install\n```\n\n## 添加软连接\n\n```\nln -s /var/jenkins_home/python3/bin/python3.6 /usr/bin/python3\nln -s /var/jenkins_home/python3/bin/pip3 /usr/bin/pip3\n```\n\n## 检查是否安装成功\n\n```\npip3\npython3\n```\n","field":{"slug":"/posts/Jenkins容器安装python3环境"},"frontmatter":{"title":"Jenkins容器安装python3环境","tags":[],"date":"2022-04-21","description":"Jenkins容器安装python3环境 在docker环境中安装jenkins，jenkins的构建环境是docker中的环境，默认的docker中默认只有python2而没有python3，因此需要再docker中手动装python3 ..."}},"prev":{"frontmatter":{"title":"K8S入门到放弃 —— 前置环境准备"},"field":{"slug":"/posts/K8S入门到放弃 —— 前置环境准备"}},"next":{"frontmatter":{"title":"记:多线程中调用feign失败"},"field":{"slug":"/posts/记:多线程中调用feign失败"}}},"pageContext":{"slug":"/posts/Jenkins容器安装python3环境","prevSlug":"/posts/K8S入门到放弃 —— 前置环境准备","nextSlug":"/posts/记:多线程中调用feign失败"}},"staticQueryHashes":["1284643331","2841359383"]}