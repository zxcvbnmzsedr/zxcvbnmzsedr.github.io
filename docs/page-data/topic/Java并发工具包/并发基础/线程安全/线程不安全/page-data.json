{
    "componentChunkName": "component---src-templates-topic-page-template-tsx",
    "path": "/topic/Java并发工具包/并发基础/线程安全/线程不安全",
    "result": {"pageContext":{"id":"/topic/Java并发工具包/并发基础/线程安全/线程不安全","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"线程不安全"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"线程不安全示例"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果多个线程对同一个共享数据进行访问而不采取同步操作的话，那么操作的结果是不一致的。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"以下代码演示了 1000 个线程同时对 cnt 执行自增操作，操作结束之后它的值有可能小于 1000。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"public class ThreadUnsafeExample {\n\n    private int cnt = 0;\n\n    public void add() {\n        cnt++;\n    }\n\n    public int get() {\n        return cnt;\n    }\n}\n\npublic static void main(String[] args) throws InterruptedException {\n    final int threadSize = 1000;\n    ThreadUnsafeExample example = new ThreadUnsafeExample();\n    final CountDownLatch countDownLatch = new CountDownLatch(threadSize);\n    ExecutorService executorService = Executors.newCachedThreadPool();\n    for (int i = 0; i < threadSize; i++) {\n        executorService.execute(() -> {\n            example.add();\n            countDownLatch.countDown();\n        });\n    }\n    countDownLatch.await();\n    executorService.shutdown();\n    System.out.println(example.get());\n}\n\n997 // 结果总是小于1000\n\n"}]}]}],"data":{"quirksMode":false}},"headings":[{"depth":1,"value":"线程不安全","slug":"线程不安全"},{"depth":2,"value":"线程不安全示例","slug":"线程不安全示例"}]}},
    "staticQueryHashes": ["928362550"]}