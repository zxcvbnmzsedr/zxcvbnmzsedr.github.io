(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{503:function(t,a,s){"use strict";s.r(a);var n=s(6),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"tcc模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcc模式"}},[t._v("#")]),t._v(" TCC模式")]),t._v(" "),a("p",[t._v("TCC 与 Seata AT 事务⼀样都是两阶段事务，它与 AT 事务的主要区别为：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("TCC 对业务代码侵⼊严重")]),t._v(" "),a("p",[t._v("每个阶段的数据操作都要⾃⼰进⾏编码来实现，事务框架⽆法⾃动处理。")])]),t._v(" "),a("li",[a("p",[t._v("TCC 性能更⾼")]),t._v(" "),a("p",[t._v("不必对数据加全局锁，允许多个事务同时操作数据。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.ztianzeng.com/uPic/ecaeda572495e4ea5e308fb938a38fd5.png",alt:"ecaeda572495e4ea5e308fb938a38fd5"}})]),t._v(" "),a("p",[t._v("Seata TCC整体是"),a("code",[t._v("两阶段提交")]),t._v("的模型。")]),t._v(" "),a("p",[t._v("⼀个分布式的全局事务，全局事务是由若⼲分⽀事务组成的，分⽀事务要满⾜"),a("code",[t._v("两阶段提交")]),t._v("的模型要求，即需要每个分⽀事务都具备⾃⼰的：")]),t._v(" "),a("ul",[a("li",[t._v("⼀阶段 prepare ⾏为")]),t._v(" "),a("li",[t._v("⼆阶段 commit 或 rollback ⾏为")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.ztianzeng.com/uPic/20220427100423.png",alt:""}})]),t._v(" "),a("p",[t._v("TCC 模式，不依赖于底层数据资源的事务⽀持：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("⼀阶段 prepare ⾏为：调⽤ ⾃定义 的 prepare 逻辑。")])]),t._v(" "),a("li",[a("p",[t._v("⼆阶段 commit ⾏为：调⽤ ⾃定义 的 commit 逻辑。")])]),t._v(" "),a("li",[a("p",[t._v("⼆阶段 rollback ⾏为：调⽤ ⾃定义 的 rollback 逻辑。")])])]),t._v(" "),a("p",[t._v("TCC 模式，是指⽀持把"),a("code",[t._v("⾃定义")]),t._v("的分⽀事务纳⼊到全局事务的管理中。")]),t._v(" "),a("p",[t._v("‍")]),t._v(" "),a("h1",{attrs:{id:"第一阶段-try"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一阶段-try"}},[t._v("#")]),t._v(" 第⼀阶段 Try")]),t._v(" "),a("p",[t._v("以账户服务为例，当下订单时要扣减⽤户账户⾦额：")]),t._v(" "),a("p",[t._v("假如⽤户购买 100 元商品，要扣减 100 元。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.ztianzeng.com/uPic/20220427100935.png",alt:""}})]),t._v(" "),a("p",[t._v("TCC 事务⾸先对这100元的扣减⾦额进⾏预留，或者说是先冻结这100元")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.ztianzeng.com/uPic/20220427101002.png",alt:""}})]),t._v(" "),a("h1",{attrs:{id:"第二阶段-confirm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二阶段-confirm"}},[t._v("#")]),t._v(" 第⼆阶段 Confirm")]),t._v(" "),a("p",[t._v("如果第⼀阶段能够顺利完成，那么说明“扣减⾦额”业务(分⽀事务)最终肯定 是可以成功的。")]),t._v(" "),a("p",[t._v("当全局事务提交时， TC会控制当前分⽀事务进⾏提交，如 果提交失败，TC 会反复尝试，直到提交成功为⽌。")]),t._v(" "),a("p",[t._v("当全局事务提交时，就可以使⽤冻结的⾦额来最终实现业务数据操作：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.ztianzeng.com/uPic/20220427101024.png",alt:""}})]),t._v(" "),a("h1",{attrs:{id:"第二阶段-cancel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二阶段-cancel"}},[t._v("#")]),t._v(" 第⼆阶段 Cancel")]),t._v(" "),a("p",[t._v("如果全局事务回滚，就把冻结的⾦额进⾏解冻，恢复到以前的状态，TC 会 控制当前分⽀事务回滚，如果回滚失败，TC 会反复尝试，直到回滚完成为⽌。")]),t._v(" "),a("p",[a("img",{attrs:{src:"assets/image-20220427101106-zhsw0mu.png",alt:"image.png"}})]),t._v(" "),a("h1",{attrs:{id:"多个事务并发的情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多个事务并发的情况"}},[t._v("#")]),t._v(" 多个事务并发的情况")]),t._v(" "),a("p",[t._v("多个TCC全局事务允许并发，它们执⾏扣减⾦额时，只需要冻结各⾃的⾦额即可：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.ztianzeng.com/uPic/20220427101229.png",alt:""}})]),t._v(" "),a("h1",{attrs:{id:"springcloud集成tcc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springcloud集成tcc"}},[t._v("#")]),t._v(" SpringCloud集成TCC")]),t._v(" "),a("h3",{attrs:{id:"定义tcc接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义tcc接口"}},[t._v("#")]),t._v(" 定义TCC接口")]),t._v(" "),a("p",[t._v("由于我们使用的是 SpringCloud + Feign，Feign的调用基于http，因此此处我们使用"),a("code",[t._v("@LocalTCC")]),t._v("便可。值得注意的是，"),a("code",[t._v("@LocalTCC")]),t._v("一定需要注解在接口上，此接口可以是寻常的业务接口，只要实现了TCC的两阶段提交对应方法便可，TCC相关注解如下：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("@LocalTCC")]),t._v(" 适用于SpringCloud+Feign模式下的TCC")]),t._v(" "),a("li",[a("code",[t._v("@TwoPhaseBusinessAction")]),t._v(" 注解try方法，其中name为当前tcc方法的bean名称，写方法名便可（全局唯一），commitMethod指向提交方法，rollbackMethod指向事务回滚方法。指定好三个方法之后，seata会根据全局事务的成功或失败，去帮我们自动调用提交方法或者回滚方法。")]),t._v(" "),a("li",[a("code",[t._v("@BusinessActionContextParameter")]),t._v(" 注解可以将参数传递到二阶段（commitMethod/rollbackMethod）的方法。")]),t._v(" "),a("li",[a("code",[t._v("BusinessActionContext")]),t._v(" 便是指TCC事务上下文")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 这里定义tcc的接口\n * 一定要定义在接口上\n * 我们使用springCloud的远程调用\n * 那么这里使用LocalTCC便可\n *\n * @author tanzj\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@LocalTCC")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TccService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 定义两阶段提交\n     * name = 该tcc的bean名称,全局唯一\n     * commitMethod = commit 为二阶段确认方法\n     * rollbackMethod = rollback 为二阶段取消方法\n     * BusinessActionContextParameter注解 传递参数到二阶段中\n     *\n     * @param params  -入参\n     * @return String\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@TwoPhaseBusinessAction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"insert"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" commitMethod "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitTcc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rollbackMethod "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cancel"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@BusinessActionContextParameter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("paramName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"params"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" params\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 确认方法、可以另命名，但要保证与commitMethod一致\n     * context可以传递try方法的参数\n     *\n     * @param context 上下文\n     * @return boolean\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitTcc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BusinessActionContext")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 二阶段取消方法\n     *\n     * @param context 上下文\n     * @return boolean\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cancel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BusinessActionContext")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"tcc接口的业务实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcc接口的业务实现"}},[t._v("#")]),t._v(" TCC接口的业务实现")]),t._v(" "),a("p",[t._v("为了保证代码的简洁，此处将路由层与业务层结合讲解，实际项目则不然。")]),t._v(" "),a("ul",[a("li",[t._v("在try方法中使用"),a("code",[t._v("@Transational")]),t._v("可以直接通过spring事务回滚关系型数据库中的操作，而非关系型数据库等中间件的回滚操作可以交给rollbackMethod方法处理。")]),t._v(" "),a("li",[t._v('使用context.getActionContext("params")便可以得到一阶段try中定义的参数，在二阶段对此参数进行业务回滚操作。')]),t._v(" "),a("li",[t._v("**注意1：**此处亦不可以捕获异常（同理切面处理异常），否则TCC将识别该操作为成功，二阶段直接执行commitMethod。")]),t._v(" "),a("li",[a("strong",[t._v("注意2："),a("strong",[t._v("TCC模式要")]),t._v("开发者自行")]),t._v("保证幂等和事务防悬挂")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Slf4j")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RestController")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TccServiceImpl")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TccService")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TccDAO")]),t._v(" tccDAO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * tcc服务t（try）方法\n     * 根据实际业务场景选择实际业务执行逻辑或者资源预留逻辑\n     *\n     * @param params - name\n     * @return String\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@PostMapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tcc-insert"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Transactional")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rollbackFor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" propagation "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Propagation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("REQUIRED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestBody")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xid = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RootContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getXID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//todo 实际的操作，或操作MQ、redis等")]),t._v("\n        tccDAO"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//放开以下注解抛出异常")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//throw new RuntimeException("服务tcc测试回滚");')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"success"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * tcc服务 confirm方法\n     * 若一阶段采用资源预留，在二阶段确认时要提交预留的资源\n     *\n     * @param context 上下文\n     * @return boolean\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitTcc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BusinessActionContext")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xid = "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getXid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"提交成功"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//todo 若一阶段资源预留，这里则要提交资源")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * tcc 服务 cancel方法\n     *\n     * @param context 上下文\n     * @return boolean\n     */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cancel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BusinessActionContext")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//todo 这里写中间件、非关系型数据库的回滚操作")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"please manually rollback this data:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getActionContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"params"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);