{
    "componentChunkName": "component---src-templates-article-page-template-tsx",
    "path": "/posts/K8S入门到放弃 —— 初始化节点",
    "result": {"pageContext":{"id":"/posts/K8S入门到放弃 —— 初始化节点","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"K8S入门到放弃 —— 初始化节点"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"title: 'K8S入门到放弃 —— 初始化节点'\ndate: 2021-06-02 13:40:09\ntags: [K8S]\npublished: true\nhideInList: false\nfeature:\nisTop: false"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"执行下面操作之前先执行"},{"type":"element","tagName":"a","properties":{"href":"/post/k8s-ru-men-dao-fang-qi-qian-zhi-huan-jing-zhun-bei/"},"children":[{"type":"text","value":"前置环境"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"初始化master节点"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"hostnamectl set-hostname master1\n# 只在第一个 master 节点执行\n# 替换 apiserver.demo 为 您想要的 dnsName\nexport APISERVER_NAME=apiserver.demo\n# Kubernetes 容器组所在的网段，该网段安装完成后，由 kubernetes 创建，事先并不存在于您的物理网络中\nexport POD_SUBNET=10.100.0.1/16\necho \"127.0.0.1    ${APISERVER_NAME}\" >> /etc/hosts\n\ncat <<EOF > ./kubeadm-config.yaml\napiVersion: kubeadm.k8s.io/v1beta2\nkind: ClusterConfiguration\nkubernetesVersion: v1.16.2\nimageRepository: registry.aliyuncs.com/google_containers\ncontrolPlaneEndpoint: \"${APISERVER_NAME}:6443\"\nnetworking:\n  serviceSubnet: \"10.96.0.0/16\"\n  podSubnet: \"${POD_SUBNET}\"\n  dnsDomain: \"cluster.local\"\nEOF\n\n# kubeadm init\nkubeadm init --config=kubeadm-config.yaml --upload-certs\n\n# 配置 kubectl\nrm -rf /root/.kube/\nmkdir /root/.kube/\ncp -i /etc/kubernetes/admin.conf /root/.kube/config\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"初始化完成后安装网络插件"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"只有安装网络插件之后，pod直接才能够正常进行通讯"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"安装calico插件"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"# 要是服务器上网络不好，从本地下载下来传上去也行\ncurl https://docs.projectcalico.org/manifests/calico.yaml -O\n# calico默认子网是192.168.0.0，需要替换成自己设置的子网，这步非常重要！！！\nsed -i \"s#192\\.168\\.0\\.0/16#${POD_SUBNET}#\" calico.yaml \nkubectl apply -f calico.yaml \n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"加入第二master个节点做高可用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"# 执行master安装完成后打印出来的代码\n# 替换 x.x.x.x 为 ApiServer LoadBalancer 的 IP 地址\nexport APISERVER_IP=x.x.x.x\n# 替换 apiserver.demo 为 前面已经使用的 dnsName\nexport APISERVER_NAME=apiserver.demo\necho \"${APISERVER_IP}    ${APISERVER_NAME}\" >> /etc/hosts\n\n  kubeadm join apiserver.k8s:6443 --token 4z3r2v.2p43g28ons3b475v \\\n    --discovery-token-ca-cert-hash sha256:959569cbaaf0cf3fad744f8bd8b798ea9e11eb1e568c15825355879cf4cdc5d6 \\\n    --control-plane --certificate-key 41a741533a038a936759aff43b5680f0e8c41375614a873ea49fde8944614dd6\n\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果显示过期了，则重新生成token进行请求"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"# 生成证书\nkubeadm init phase upload-certs --upload-certs\n# 生成加入命令\nkubeadm token create --print-join-command\n\n# 最后拼接出来就大概是这样\nkubeadm join apiserver.demo:6443 --token mpfjma.4vjjg8flqihor4vt     --discovery-token-ca-cert-hash sha256:6f7a8e40a810323672de5eee6f4d19aa2dbdb38411845a1bf5dd63485c43d303\n--control-plane --certificate-key  $证书\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"初始化worker节点"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"hostnamectl set-hostname node1\n# 如果dns能解析到APISERVER_NAME的域名，则不需要写入到hosts中\nexport MASTER_IP=x.x.x.x\n# 替换 apiserver.demo 为初始化 master 节点时所使用的 APISERVER_NAME\nexport APISERVER_NAME=apiserver.demo\necho \"${MASTER_IP}    ${APISERVER_NAME}\" >> /etc/hosts\n\n# 替换为前面 kubeadm token create --print-join-command 的输出结果,如果过期了就再执行一下\nkubeadm join apiserver.demo:6443 --token mpfjma.4vjjg8flqihor4vt     --discovery-token-ca-cert-hash sha256:6f7a8e40a810323672de5eee6f4d19aa2dbdb38411845a1bf5dd63485c43d303\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"正常情况下，这个时候能够可以在master节点上通过下面这个命令"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"kubectl get nodes\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"获取到对应的节点信息以及状态"}]}],"data":{"quirksMode":false}},"articleNode":{"field":{"contentType":"posts","topic":null},"frontmatter":{"id":"/posts/K8S入门到放弃 —— 初始化节点","title":"K8S入门到放弃 —— 初始化节点","date":"2022-04-21 15:48","absolute_path":"/posts/K8S入门到放弃 —— 初始化节点"},"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"K8S入门到放弃 —— 初始化节点"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"title: 'K8S入门到放弃 —— 初始化节点'\ndate: 2021-06-02 13:40:09\ntags: [K8S]\npublished: true\nhideInList: false\nfeature:\nisTop: false"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"执行下面操作之前先执行"},{"type":"element","tagName":"a","properties":{"href":"/post/k8s-ru-men-dao-fang-qi-qian-zhi-huan-jing-zhun-bei/"},"children":[{"type":"text","value":"前置环境"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"初始化master节点"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"hostnamectl set-hostname master1\n# 只在第一个 master 节点执行\n# 替换 apiserver.demo 为 您想要的 dnsName\nexport APISERVER_NAME=apiserver.demo\n# Kubernetes 容器组所在的网段，该网段安装完成后，由 kubernetes 创建，事先并不存在于您的物理网络中\nexport POD_SUBNET=10.100.0.1/16\necho \"127.0.0.1    ${APISERVER_NAME}\" >> /etc/hosts\n\ncat <<EOF > ./kubeadm-config.yaml\napiVersion: kubeadm.k8s.io/v1beta2\nkind: ClusterConfiguration\nkubernetesVersion: v1.16.2\nimageRepository: registry.aliyuncs.com/google_containers\ncontrolPlaneEndpoint: \"${APISERVER_NAME}:6443\"\nnetworking:\n  serviceSubnet: \"10.96.0.0/16\"\n  podSubnet: \"${POD_SUBNET}\"\n  dnsDomain: \"cluster.local\"\nEOF\n\n# kubeadm init\nkubeadm init --config=kubeadm-config.yaml --upload-certs\n\n# 配置 kubectl\nrm -rf /root/.kube/\nmkdir /root/.kube/\ncp -i /etc/kubernetes/admin.conf /root/.kube/config\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"初始化完成后安装网络插件"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"只有安装网络插件之后，pod直接才能够正常进行通讯"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"安装calico插件"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"# 要是服务器上网络不好，从本地下载下来传上去也行\ncurl https://docs.projectcalico.org/manifests/calico.yaml -O\n# calico默认子网是192.168.0.0，需要替换成自己设置的子网，这步非常重要！！！\nsed -i \"s#192\\.168\\.0\\.0/16#${POD_SUBNET}#\" calico.yaml \nkubectl apply -f calico.yaml \n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"加入第二master个节点做高可用"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"# 执行master安装完成后打印出来的代码\n# 替换 x.x.x.x 为 ApiServer LoadBalancer 的 IP 地址\nexport APISERVER_IP=x.x.x.x\n# 替换 apiserver.demo 为 前面已经使用的 dnsName\nexport APISERVER_NAME=apiserver.demo\necho \"${APISERVER_IP}    ${APISERVER_NAME}\" >> /etc/hosts\n\n  kubeadm join apiserver.k8s:6443 --token 4z3r2v.2p43g28ons3b475v \\\n    --discovery-token-ca-cert-hash sha256:959569cbaaf0cf3fad744f8bd8b798ea9e11eb1e568c15825355879cf4cdc5d6 \\\n    --control-plane --certificate-key 41a741533a038a936759aff43b5680f0e8c41375614a873ea49fde8944614dd6\n\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果显示过期了，则重新生成token进行请求"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"# 生成证书\nkubeadm init phase upload-certs --upload-certs\n# 生成加入命令\nkubeadm token create --print-join-command\n\n# 最后拼接出来就大概是这样\nkubeadm join apiserver.demo:6443 --token mpfjma.4vjjg8flqihor4vt     --discovery-token-ca-cert-hash sha256:6f7a8e40a810323672de5eee6f4d19aa2dbdb38411845a1bf5dd63485c43d303\n--control-plane --certificate-key  $证书\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"初始化worker节点"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"hostnamectl set-hostname node1\n# 如果dns能解析到APISERVER_NAME的域名，则不需要写入到hosts中\nexport MASTER_IP=x.x.x.x\n# 替换 apiserver.demo 为初始化 master 节点时所使用的 APISERVER_NAME\nexport APISERVER_NAME=apiserver.demo\necho \"${MASTER_IP}    ${APISERVER_NAME}\" >> /etc/hosts\n\n# 替换为前面 kubeadm token create --print-join-command 的输出结果,如果过期了就再执行一下\nkubeadm join apiserver.demo:6443 --token mpfjma.4vjjg8flqihor4vt     --discovery-token-ca-cert-hash sha256:6f7a8e40a810323672de5eee6f4d19aa2dbdb38411845a1bf5dd63485c43d303\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"正常情况下，这个时候能够可以在master节点上通过下面这个命令"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"kubectl get nodes\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"获取到对应的节点信息以及状态"}]}],"data":{"quirksMode":false}},"headings":[{"depth":1,"value":"K8S入门到放弃 —— 初始化节点"},{"depth":1,"value":"初始化master节点"},{"depth":2,"value":"初始化完成后安装网络插件"},{"depth":3,"value":"安装calico插件"},{"depth":1,"value":"加入第二master个节点做高可用"},{"depth":1,"value":"初始化worker节点"}],"path":"/posts/K8S入门到放弃 —— 初始化节点"},"headings":[{"depth":1,"value":"K8S入门到放弃 —— 初始化节点","slug":"k8s入门到放弃--初始化节点"},{"depth":1,"value":"初始化master节点","slug":"初始化master节点"},{"depth":2,"value":"初始化完成后安装网络插件","slug":"初始化完成后安装网络插件"},{"depth":3,"value":"安装calico插件","slug":"安装calico插件"},{"depth":1,"value":"加入第二master个节点做高可用","slug":"加入第二master个节点做高可用"},{"depth":1,"value":"初始化worker节点","slug":"初始化worker节点"}]}},
    "staticQueryHashes": ["630634786","928362550"]}