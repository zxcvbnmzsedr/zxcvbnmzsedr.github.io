{
    "componentChunkName": "component---src-templates-topic-page-template-tsx",
    "path": "/topic/LeetCode/双指针/283.移动零",
    "result": {"pageContext":{"id":"/topic/LeetCode/双指针/283.移动零","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"283.移动零"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"LeetCode链接: "},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.cn/problems/move-zeroes/submissions/"},"children":[{"type":"text","value":"https://leetcode.cn/problems/move-zeroes/submissions/"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"题目描述: 将数组中的零，移动到数组的最后，同时保持数组相对顺序不变"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"输入: nums = [0,1,0,3,12]"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n输出: [1,3,12,0,0]"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"使用双指针，左指针指向当前已经处理好的序列的尾部，右指针指向待处理序列的头部。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"右指针不断向右移动，每次右指针指向非零数，则将左右指针对应的数交换，同时左指针右移。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"因此每次交换，都是将左指针的零与右指针的非零数交换，且非零数的相对顺序并未改变。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"public void moveZeroes(int[] nums) {\n    int slow = 0;\n    int fast = 0;\n    while (fast < nums.length){\n        if (nums[fast] != 0 ){\n            nums[slow] = nums[fast];\n            slow++;\n        }\n        fast++;\n    }\n    for (int i = slow;i<nums.length;i++){\n        nums[i] = 0;\n    }\n}\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"复杂度分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"时间复杂度：O(n)"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"O"}]},{"type":"text","value":"("},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"n"}]},{"type":"text","value":")，其中 n"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"n"}]},{"type":"text","value":" 为序列长度。每个位置至多被遍历两次。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"空间复杂度：O(1)"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"O"}]},{"type":"text","value":"("},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"1"}]},{"type":"text","value":")。只需要常数的空间存放若干变量。"}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"headings":[{"depth":1,"value":"283.移动零","slug":"283移动零"}]}},
    "staticQueryHashes": ["928362550"]}