(window.webpackJsonp=window.webpackJsonp||[]).push([[199],{591:function(t,s,a){"use strict";a.r(s);var r=a(7),v=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"缓存穿透"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存穿透"}},[t._v("#")]),t._v(" 缓存穿透")]),t._v(" "),s("p",[t._v("是值查询一个缓存和数据库中都没有的数据，由于大部分的缓存策略是被动加载的，并且处于容错考虑，如果从存储层查不到数据则不写入缓存。")]),t._v(" "),s("p",[t._v("这个不存在的数据每次都会到存储层去查询，失去缓存的意义，用户不断发起请求，量大甚至可以导致缓存雪崩。")]),t._v(" "),s("h1",{attrs:{id:"接口校验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口校验"}},[t._v("#")]),t._v(" 接口校验")]),t._v(" "),s("p",[t._v("不要相信前端传来的东西，所以数据一定要在后端进行校验。")]),t._v(" "),s("p",[t._v("我们可以在接口层添加校验，不合法的直接返回即可，没必要做后续的操作。")]),t._v(" "),s("h1",{attrs:{id:"空对象缓存或者缺省值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空对象缓存或者缺省值"}},[t._v("#")]),t._v(" 空对象缓存或者缺省值")]),t._v(" "),s("p",[t._v("一般情况下OK。")]),t._v(" "),s("p",[s("strong",[t._v("但是")]),t._v("黑客会对你的系统进行攻击，拿一个不存在的id 去查询数据，会产生大量的请求到数据库去查询。可能会导致你的数据库由于压力过大而宕掉。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("id相同:")]),t._v(" 第一次打到DB，空对象缓存后第二次就返回null了，避免DB被攻击，不用再到数据库中去走一圈了")]),t._v(" "),s("li",[s("strong",[t._v("id不同:")]),t._v(" 由于存在空对象缓存和缓存回写，redis中的无关紧要的key也会越写越多")])]),t._v(" "),s("h1",{attrs:{id:"布隆过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布隆过滤器"}},[t._v("#")]),t._v(" 布隆过滤器")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.shiyitopo.tech/uPic/image-20210918170608143.png",alt:"image-20210918170608143"}})])])}),[],!1,null,null,null);s.default=v.exports}}]);