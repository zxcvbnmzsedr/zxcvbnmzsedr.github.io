{"componentChunkName":"component---src-templates-tags-template-js","path":"/tags/RocketMQ/","result":{"data":{"allSiYuan":{"totalCount":5,"nodes":[{"field":{"slug":"/posts/RocketMQ/RocketMQ Rebalance流程"},"frontmatter":{"date":"2022-05-11","description":"RocketMQ存在Rebalance机制，这个机制的作用是将一个Topic下的多个队列，在同一个消费者组下的多个consumer之间重新进行分配。 Rebalance机制目的是为了提升消息的并行处理能力。 假设不存在Rebalance机制...","tags":["RocketMQ"],"title":"RocketMQ Rebalance流程"},"timeToRead":9,"excerpt":"RocketMQ存在Rebalance机制，这个机制的作用是将一个Topic下的多个队列，在同一个消费者组下的多个consumer之间重新进行分配。 Rebalance机制目的是为了提升消息的并行处理能力。 假设不存在Rebalance机制..."},{"field":{"slug":"/posts/RocketMQ/RocketMQ顺序消息"},"frontmatter":{"date":"2022-05-09","description":"消息有序指的是可以按照消息的发送顺序来消费(FIFO)。RocketMQ可以严格的保证消息有序，可以分为分区有序或者全局有序。 > 电商的订单创建，以订单ID作为Sharding Key，那么同一个订单相关的创建订单消息、订单支付消息、订单...","tags":["RocketMQ"],"title":"RocketMQ顺序消息"},"timeToRead":6,"excerpt":"消息有序指的是可以按照消息的发送顺序来消费(FIFO)。RocketMQ可以严格的保证消息有序，可以分为分区有序或者全局有序。 > 电商的订单创建，以订单ID作为Sharding Key，那么同一个订单相关的创建订单消息、订单支付消息、订单..."},{"field":{"slug":"/posts/RocketMQ/RocketMQ持久化原理"},"frontmatter":{"date":"2022-05-07","description":"消息的持久化是RocketMQ中最为复杂和重要的一部分，由于持久化机制的存在才能够实现RocketMQ的高可靠性。 图1展示了RocketMQ的整体的工作逻辑 Productor按照顺序写入CommitLog Consumer顺序读取Con...","tags":["RocketMQ"],"title":"RocketMQ持久化原理"},"timeToRead":8,"excerpt":"消息的持久化是RocketMQ中最为复杂和重要的一部分，由于持久化机制的存在才能够实现RocketMQ的高可靠性。 图1展示了RocketMQ的整体的工作逻辑 Productor按照顺序写入CommitLog Consumer顺序读取Con..."},{"field":{"slug":"/posts/RocketMQ/RocketMQ延迟消息原理"},"frontmatter":{"date":"2022-05-06","description":"RocketMQ提供了延迟消息的功能，消息在发送到RocketMQ服务端之后不会马上投递，而是根据消息中的属性延迟固定时间之后才会投递到消费者那。 使用场景 电商里，提交了一个订单就可以发送一个延时消息，1h后去检查这个订单的状态，如果还是...","tags":["RocketMQ"],"title":"RocketMQ延迟消息原理"},"timeToRead":7,"excerpt":"RocketMQ提供了延迟消息的功能，消息在发送到RocketMQ服务端之后不会马上投递，而是根据消息中的属性延迟固定时间之后才会投递到消费者那。 使用场景 电商里，提交了一个订单就可以发送一个延时消息，1h后去检查这个订单的状态，如果还是..."},{"field":{"slug":"/posts/RocketMQ/RocketMQ事务消息实现原理"},"frontmatter":{"date":"2022-05-05","description":"RocketMQ提供了事务消息的功能，采用了2PC+事务回查来实现事务，最终能通过RocketMQ提供的事务消息，能够简单方便的实现分布式事务。 概念介绍 事务消息 RocketMQ提供类似XA或Open XA的分布式事务功能，通过Rock...","tags":["RocketMQ"],"title":"RocketMQ事务消息实现原理"},"timeToRead":17,"excerpt":"RocketMQ提供了事务消息的功能，采用了2PC+事务回查来实现事务，最终能通过RocketMQ提供的事务消息，能够简单方便的实现分布式事务。 概念介绍 事务消息 RocketMQ提供类似XA或Open XA的分布式事务功能，通过Rock..."}]}},"pageContext":{"tag":"RocketMQ"}},"staticQueryHashes":["1284643331","2841359383"]}