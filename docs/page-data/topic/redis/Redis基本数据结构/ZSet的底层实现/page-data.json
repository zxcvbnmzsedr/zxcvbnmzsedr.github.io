{
    "componentChunkName": "component---src-templates-topic-page-template-tsx",
    "path": "/topic/redis/Redis基本数据结构/ZSet的底层实现",
    "result": {"pageContext":{"id":"/topic/redis/Redis基本数据结构/ZSet的底层实现","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"ZSet的底层实现"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当有序集合中包含的元素数量超过服务器属性"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"zset_max_ziplist_entries 的值（默认值为 128 ），"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"或者 有序集合中新添加元素的 member 的长度大于服务器属性"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"zset_max_ziplist_value 的值（默认值为 64 ）时，"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"redis会使用 跳跃表 作为有序集合的底层实现。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"否则会使用ziplist作为有序集合的底层实现"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"跳表是什么?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"跳表 = 链表 + 多级索引."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"skiplist是一种以空间换取时间的结构。 时间复杂度O(logN),空间复杂度O(n);"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"由于链表，无法进行二分查找，因此借鉴数据库索引的思想，提取出链表中关键节点（索引），先在关键节点上查找，再进入下层链表查找。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"提取多层关键节点，就形成了跳跃表."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"优缺点"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"只有在 数据量较大的情况下 才能体现出来优势。\n而且应该是 读多写少的情况下 才能使用，所以它的适用范围应该还是比较有限的"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"维护成本相对要高, 新增或者删除时需要把所有索引都更新一遍；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"最后在新增和删除的过程中的更新，时间复杂度也是O(log n)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"../img/redis_jump.jpg","alt":"跳表"},"children":[]}]}],"data":{"quirksMode":false}},"headings":[{"depth":1,"value":"ZSet的底层实现","slug":"zset的底层实现"},{"depth":1,"value":"跳表是什么?","slug":"跳表是什么"},{"depth":2,"value":"优缺点","slug":"优缺点"}]}},
    "staticQueryHashes": ["928362550"]}