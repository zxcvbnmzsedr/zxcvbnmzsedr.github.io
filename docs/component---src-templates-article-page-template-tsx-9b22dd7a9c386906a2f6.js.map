{"version":3,"file":"component---src-templates-article-page-template-tsx-9b22dd7a9c386906a2f6.js","mappings":"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","sources":["webpack://ztianzeng.com/./src/components/Article/TagGroup/ArticleTag.tsx","webpack://ztianzeng.com/./src/components/Article/ArticleFrontmatter.tsx","webpack://ztianzeng.com/./src/components/Article/ArticlePageBanner.tsx","webpack://ztianzeng.com/./src/templates/ArticlePageTemplate.tsx"],"sourcesContent":["import \"./article-tag.scss\";\n\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport { useStore } from \"simstate\";\nimport styled from \"styled-components\";\n\nimport { LanguageId, useI18n } from \"@/i18n\";\nimport MetadataStore from \"@/stores/MetadataStore\";\n\nconst Tag = styled(Link)`\n  margin-right: 4px;\n`;\n\ninterface Props {\n  tag: string;\n}\n\nconst ArticleTag: React.FC<Props> = ({ tag }) => {\n  const metadataStore = useStore(MetadataStore);\n  const i18n = useI18n();\n\n  const tagOfLang = metadataStore.getTagOfLang(tag, i18n.currentLanguage.id as LanguageId)\n   || tag;\n\n  const title = i18n.translate(\n    \"articleFrontmatter.tagLinkTitle\", [` ${tagOfLang} `]) as string;\n  const toLink = `/posts/search?query=${tagOfLang}`;\n\n  return (\n    <Tag className=\"badge badge-info article-tag\" to={toLink} title={title}>\n      {tagOfLang}\n    </Tag>\n  );\n};\n\nexport default ArticleTag;\n","import { Link } from \"gatsby\";\nimport { DateTime } from \"luxon\";\nimport React from \"react\";\nimport {\n  FaCalendar,\n  FaCalendarPlus, FaFileWord, FaTags,   FaUserClock } from \"react-icons/fa\";\nimport styled from \"styled-components\";\n\nimport ArticleTag from \"@/components/Article/TagGroup/ArticleTag\";\nimport { Localized, prefix, useI18n } from \"@/i18n\";\nimport { breakpoints } from \"@/styles/variables\";\nimport useConstant from \"@/utils/useConstant\";\n\ninterface Props {\n  articleId: string;\n  date: DateTime;\n  lastUpdated?: DateTime;\n  timeToRead: number;\n  wordCount: number;\n  tags?: string[] | null;\n  currentArticleLanguage: string;\n  setItemProp: boolean;\n}\n\nconst p = prefix(\"articleFrontmatter.\");\n\nconst Span = styled.span`\n  margin-right: 8px;\n  padding-right: 8px;\n  margin-bottom: 4px;\n  /* border-left: 1px solid black; */\n  display: inline-block;\n\n`;\n\nconst Tags = styled(Span)`\n\n  /* @media (max-width: ${breakpoints.md}px) {\n    display: block;\n    margin-bottom: 4px;\n  } */\n`;\n\nconst ContainerRow = styled.div`\n  font-size: 0.9em;\n  margin: 8px 0;\n\n  vertical-align: center;\n`;\n\nconst DATE_FORMAT = \"yyyy-MM-dd\";\n\nconst ArticleFrontmatter: React.FC<Props> = (props) => {\n  const {\n    date, timeToRead, tags,\n    lastUpdated, setItemProp, wordCount,\n  } = props;\n\n  const { translate } = useI18n();\n\n  const dateString = useConstant(() => date.toFormat(DATE_FORMAT));\n  const lastUpdatedString = useConstant(() => lastUpdated?.toFormat(DATE_FORMAT));\n\n  const createTimeTitle = translate(p(\"date\")) as string;\n  const lastUpdatedTimeTitle = translate(p(\"lastUpdated\")) as string;\n  return (\n    <ContainerRow>\n      {tags && (\n        <Tags>\n          <FaTags />\n          {tags.map((tag) => <ArticleTag tag={tag} key={tag} />)}\n        </Tags>\n      )}\n      <Span title={createTimeTitle} >\n        <FaCalendar />\n        { setItemProp\n          ? <time itemProp=\"datePublished\" dateTime={date.toISO()}>{dateString}</time>\n          : dateString\n        }\n      </Span>\n      {\n        lastUpdatedString\n          ? (\n            <Span title={lastUpdatedTimeTitle}>\n              <FaCalendarPlus />\n              { setItemProp\n                ? (\n                  <time itemProp=\"dateModified\" dateTime={lastUpdated!.toISO()}>\n                    {lastUpdatedString}\n                  </time>\n                ) : lastUpdatedString\n              }\n            </Span>\n          ) : undefined\n      }\n      <Span>\n        <FaFileWord />\n        <Localized id={p(\"wordCount\")} args={[wordCount]} />\n      </Span>\n      <Span>\n        <FaUserClock />\n        <Localized id={p(\"timeToRead\")} args={[timeToRead]} />\n      </Span>\n    </ContainerRow>\n  );\n};\n\nexport default ArticleFrontmatter;\nstyled(Link)`\n\n  margin-right: 8px;\n`;\n","import {DateTime} from \"luxon\";\nimport React from \"react\";\n\nimport {BannerLayoutTitle} from \"@/layouts/BannerLayout\";\n\nimport ArticleFrontmatter from \"./ArticleFrontmatter\";\n\ninterface Props {\n  title: string;\n  id: string;\n  tags?: string[] | null;\n  date: DateTime;\n  lastUpdated?: DateTime;\n  timeToRead: number;\n  wordCount: number;\n  currentArticleLanguage: string;\n}\n\nconst ArticlePageBanner: React.FC<Props> = ({\n                                              title, id, tags, date, lastUpdated,\n                                              timeToRead, currentArticleLanguage, wordCount,\n                                            }) => {\n  return (\n    <>\n      <BannerLayoutTitle>{title}</BannerLayoutTitle>\n      <ArticleFrontmatter\n        currentArticleLanguage={currentArticleLanguage}\n        articleId={id}\n        tags={tags}\n        date={date}\n        lastUpdated={lastUpdated}\n        timeToRead={timeToRead}\n        wordCount={wordCount}\n        setItemProp={true}\n      />\n    </>\n  );\n};\n\nexport default ArticlePageBanner;\n","import {DateTime} from \"luxon\";\nimport React, {useEffect} from \"react\";\nimport {Col, Row} from \"reactstrap\";\nimport {useStore} from \"simstate\";\nimport styled, {keyframes} from \"styled-components\";\n\nimport ArticlePageBanner from \"@/components/Article/ArticlePageBanner\";\nimport CommentPanel from \"@/components/Article/CommentPanel\";\nimport ArticleContentDisplay from \"@/components/Article/ContentDisplay\";\nimport TocPanel from \"@/components/Article/TocPanel\";\nimport {PageMetadata} from \"@/components/PageMetadata\";\nimport {languageInfo, useI18n} from \"@/i18n\";\nimport BannerLayout from \"@/layouts/BannerLayout\";\nimport Page from \"@/layouts/Page\";\nimport {ArticleNode, Heading} from \"@/models/ArticleNode\";\nimport {HtmlAst} from \"@/models/HtmlAst\";\nimport ArticleStore from \"@/stores/ArticleStore\";\nimport {heights} from \"@/styles/variables\";\nimport {fromArticleTime} from \"@/utils/datetime\";\nimport useConstant from \"@/utils/useConstant\";\n\ninterface Props {\n  pageContext: {\n    id: string;\n    lang: string;\n    htmlAst: HtmlAst;\n    headings: Heading[];\n    articleNode: ArticleNode;\n  };\n  location: Location;\n}\n\n\nconst enterAnimation = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst PageWithHeader = styled(Page)`\n   animation: ${enterAnimation} 0.2s ease-in-out;\n`;\n\nconst PageComponent: React.FC<{ hasHeader: boolean; children: React.ReactNode }> =\n({ hasHeader, children }) => {\n  return (\n    hasHeader\n      ? <PageWithHeader>{children}</PageWithHeader>\n      : <Page>{children}</Page>\n  );\n};\n\ninterface RootLayoutProps {\n  article: ArticleNode;\n  lang: string;\n  date: DateTime;\n  lastUpdated?: DateTime;\n}\n\nconst RootLayout: React.FC<RootLayoutProps> = ({\n  article, children,\n  lang, date, lastUpdated,\n}) => {\n\n  const {\n    frontmatter: { id, title, tags },\n    timeToRead, wordCountChinese,\n  } = article;\n\n  return (\n    <BannerLayout transparentHeader={false} banner={\n      <ArticlePageBanner\n        title={title}\n        id={id}\n        tags={tags}\n        date={date}\n        lastUpdated={lastUpdated}\n        timeToRead={timeToRead}\n        currentArticleLanguage={lang}\n        wordCount={wordCountChinese}\n      />\n    }\n    >\n      {children}\n    </BannerLayout>\n  );\n};\n\nconst ArticlePageTemplate: React.FC<Props> = (props) => {\n\n  const i18n = useI18n();\n  const articleStore = useStore(ArticleStore);\n\n  const { id, lang, htmlAst, headings,articleNode } = props.pageContext;\n\n\n  useEffect(() => {\n    articleStore.setArticle(articleNode);\n    return () => {\n      articleStore.setArticle(null);\n    };\n  }, [articleNode]);\n\n  const {\n    path, excerpt,\n    frontmatter: { title, date, tags },\n  } = articleNode;\n\n\n  const publishedTime = useConstant(() => fromArticleTime(date));\n  const lastUpdatedTime = useConstant(() => undefined);\n\n  return (\n    <RootLayout\n      article={articleNode} lang={lang}\n      date={publishedTime} lastUpdated={lastUpdatedTime}\n    >\n      <div>\n        <PageMetadata\n          title={title}\n          description={excerpt}\n          url={path}\n          locale={languageInfo['cn'].detailedId}\n          meta={[\n            { name: \"og:type\", content: \"article\" },\n            { name: \"og:article:published_time\", content: publishedTime.toISO() },\n            ...(tags || []).map((x) => ({\n              name: \"og:article:tag\",\n              content: x,\n            })),\n          ]}\n        />\n        <PageComponent hasHeader={true}>\n          <Row>\n            <Col md={9} sm={12}>\n              <ArticleContentDisplay\n                htmlAst={htmlAst}\n                headings={headings}\n              />\n            </Col>\n            <Col md={3} className=\"d-none d-md-block\">\n              <StickySidePanel>\n                <TocPanel headings={headings} />\n              </StickySidePanel>\n            </Col>\n          </Row>\n          <hr />\n          <CommentPanel\n            language={languageInfo[i18n.currentLanguage.id].gitalkLangId}\n            articleId={id}\n            articleTitle={title}\n          />\n        </PageComponent>\n      </div>\n    </RootLayout>\n  );\n};\n\nexport default ArticlePageTemplate;\n\nconst StickySidePanel = styled.div`\n  position: sticky;\n  top: ${heights.header + 32}px;\n`;\n"],"names":["Tag","styled","Link","withConfig","tag","metadataStore","useStore","MetadataStore","i18n","useI18n","tagOfLang","getTagOfLang","currentLanguage","id","title","translate","toLink","React","className","to","p","prefix","Span","Tags","ContainerRow","DATE_FORMAT","props","date","timeToRead","tags","lastUpdated","setItemProp","wordCount","dateString","useConstant","toFormat","lastUpdatedString","createTimeTitle","lastUpdatedTimeTitle","FaTags","map","ArticleTag","key","FaCalendar","itemProp","dateTime","toISO","FaCalendarPlus","undefined","FaFileWord","Localized","args","FaUserClock","currentArticleLanguage","BannerLayoutTitle","ArticleFrontmatter","articleId","enterAnimation","keyframes","PageWithHeader","Page","PageComponent","hasHeader","children","RootLayout","article","lang","frontmatter","wordCountChinese","BannerLayout","transparentHeader","banner","ArticlePageBanner","articleStore","ArticleStore","pageContext","htmlAst","headings","articleNode","useEffect","setArticle","path","excerpt","publishedTime","fromArticleTime","lastUpdatedTime","PageMetadata","description","url","locale","languageInfo","meta","name","content","x","Row","Col","md","sm","ArticleContentDisplay","StickySidePanel","TocPanel","CommentPanel","language","gitalkLangId","articleTitle","heights"],"sourceRoot":""}