{"version":3,"file":"component---src-templates-topic-page-template-tsx-4c5f04ecb7fc3ab72ffd.js","mappings":"2TA+BMA,GAAiBC,EAAAA,EAAAA,WAAH,oCAUdC,GAAiBC,EAAAA,EAAAA,SAAOC,EAAAA,GAAVC,WAAA,4EAAGF,CAAH,oCACLH,GAGTM,EACJ,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SACX,OACED,EACIE,EAAAA,cAACP,EAAD,KAAiBM,GACjBC,EAAAA,cAACL,EAAAA,EAAD,KAAOI,IAWXE,EAAwC,SAAC,GAAgB,IAAfF,EAAc,EAAdA,SAE9C,OACEC,EAAAA,cAACE,EAAAA,GAAD,CAAcC,mBAAmB,GAC9BJ,IAqJP,UAhJ6C,SAACK,GAE5C,IAAMC,GAAOC,EAAAA,EAAAA,MACPC,GAAgBC,EAAAA,EAAAA,IAASC,EAAAA,GACzBC,GAAeF,EAAAA,EAAAA,IAASG,EAAAA,GAE9B,EAAsCP,EAAMQ,YAArCC,EAAP,EAAOA,GAAIC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,SAEpBC,EAAcV,EAAcW,iBAAiBL,EAAIC,IAEvDK,EAAAA,EAAAA,YAAU,WAER,OADAT,EAAaU,WAAWH,GACjB,WACLP,EAAaU,WAAW,SAEzB,CAACH,IAEJ,IACEI,EAEEJ,EAFFI,KAAMC,EAEJL,EAFIK,QADR,EAGIL,EADFM,YAAcC,EAFhB,EAEgBA,MAAOC,EAFvB,EAEuBA,KAAMC,EAF7B,EAE6BA,KAGvBC,EAAcpB,EAAcqB,eAAexB,EAAMQ,YAAYC,IAE7DgB,GAAgBC,EAAAA,EAAAA,IAAY,kBAAMC,EAAAA,EAAAA,GAAgBN,MAClDO,GAAkBF,EAAAA,EAAAA,IAAY,eAE9BG,EAAc,SAAdA,EAAeC,GAEnB,OADAA,EAAOA,EAAKC,QAAO,SAAAC,GAAC,MAAe,MAAXA,EAAEC,SACdC,KAAI,SAAAF,GACd,OAAO,OAAP,UACKA,EADL,CAEErC,SAAUkC,EAAYG,EAAErC,gBAIxBwC,EAAW,SAAXA,EAAYC,GAChB,OACExC,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACyC,EAAAA,KAAD,CAAMC,GAAIF,EAAKG,MAAOH,EAAKhB,QAE5BgB,EAAKzC,SAASuC,KAAI,SAACM,GAClB,OACEL,EAASK,QA4CnB,OACE5C,EAAAA,cAACC,EAAD,CACE4C,QAAS5B,EAAaH,KAAMA,EAC5BW,KAAMI,EAAeiB,YAAad,GAElChC,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAC+C,EAAAA,EAAD,CACEvB,MAAOA,EACPwB,YAAa1B,EACb2B,IAAK5B,EACL6B,OAAQC,EAAAA,GAAAA,GAAAA,WACRC,KAAI,CACF,CAACC,KAAM,UAAWC,QAAS,WAC3B,CAACD,KAAM,4BAA6BC,QAASzB,EAAc0B,UAFzD,gBAGE7B,GAAQ,IAAIY,KAAI,SAACkB,GAAD,MAAQ,CAC1BH,KAAM,iBACNC,QAASE,QALT,OAOCC,OAAOC,KAAK/B,GACZQ,QAAO,SAACqB,GAAD,OAAOA,IAAM1C,KACpBwB,KAAI,SAACkB,GAAD,MAAQ,CACXH,KAAM,sBACNC,QAASH,EAAAA,GAAaK,GAAGG,mBAKjC3D,EAAAA,cAACH,EAAD,CAAeC,WAAW,GACxBE,EAAAA,cAAC4D,EAAD,CAASC,UAAU,qBAlEZ,WAIb,IAAIzB,EAHJ,GAAKV,IAOHU,EAHGV,EAAK,GAGJA,EAAK,GAFLF,GAIN,CAGA,GAAKjB,EAAcuD,UAAU3B,QAAO,SAAA4B,GAAC,OAAIA,EAAEvC,QAAUY,KAAG,GAAxD,CAIA,IAAI4B,EAAQzD,EAAcuD,UAAU3B,QAAO,SAAA4B,GAAC,OAAIA,EAAEvC,QAAUY,KAAG,GAAGF,KAAKnC,SAGvE,OADAiE,EAAQ/B,EAAY+B,IACVC,OAAS,EAEfjE,EAAAA,cAAAA,MAAAA,KAEIgE,EAAM1B,KAAI,SAAAE,GACR,OACExC,EAAAA,cAAAA,KAAAA,CAAIkE,IAAK1B,EAAK3B,IACX0B,EAASC,aAPxB,EANE2B,QAAQC,IAAIhC,EAAEZ,EAAME,IAqDb2C,IAEHrE,EAAAA,cAACsE,EAAAA,EAAD,KACEtE,EAAAA,cAACuE,EAAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,IACdzE,EAAAA,cAAC0E,EAAAA,EAAD,CACE3D,QAASA,EACTC,SAAUA,KAGdhB,EAAAA,cAACuE,EAAAA,EAAD,CAAKC,GAAI,EAAGX,UAAU,qBACpB7D,EAAAA,cAAC2E,EAAD,KACE3E,EAAAA,cAAC4E,EAAAA,EAAD,CAAU5D,SAAUA,OAI1BhB,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAC6E,EAAAA,EAAD,CACEC,SAAU3B,EAAAA,GAAa9C,EAAK0E,gBAAgBlE,IAAImE,aAChDC,UAAWpE,EACXqE,aAAc1D,QAU1B,IAAMmD,EAAkBjF,EAAAA,QAAAA,IAAAA,WAAH,6EAAGA,CAAH,+BAEZyF,EAAAA,GAAAA,OAAiB,IAIpBvB,EAAUlE,EAAAA,QAAAA,MAAAA,WAAH,qEAAGA,CAAH","sources":["webpack://ztianzeng.com/./src/templates/TopicPageTemplate.tsx"],"sourcesContent":["import {DateTime} from \"luxon\";\nimport React, {useEffect} from \"react\";\nimport {Col, Row} from \"reactstrap\";\nimport {useStore} from \"simstate\";\nimport styled, {keyframes} from \"styled-components\";\nimport CommentPanel from \"@/components/Article/CommentPanel\";\nimport ArticleContentDisplay from \"@/components/Article/ContentDisplay\";\nimport TocPanel from \"@/components/Article/TocPanel\";\nimport {PageMetadata} from \"@/components/PageMetadata\";\nimport {languageInfo, useI18n} from \"@/i18n\";\nimport BannerLayout from \"@/layouts/BannerLayout\";\nimport Page from \"@/layouts/Page\";\nimport {ArticleNode, Heading, TopicNodeTree} from \"@/models/ArticleNode\";\nimport {HtmlAst} from \"@/models/HtmlAst\";\nimport ArticleStore from \"@/stores/ArticleStore\";\nimport MetadataStore from \"@/stores/MetadataStore\";\nimport {heights} from \"@/styles/variables\";\nimport {fromArticleTime} from \"@/utils/datetime\";\nimport useConstant from \"@/utils/useConstant\";\nimport {Link} from \"gatsby\";\n\ninterface Props {\n  pageContext: {\n    id: string;\n    lang: string;\n    htmlAst: HtmlAst;\n    headings: Heading[];\n  };\n}\n\n\nconst enterAnimation = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst PageWithHeader = styled(Page)`\n  animation: ${enterAnimation} 0.2s ease-in-out;\n`;\n\nconst PageComponent: React.FC<{ hasHeader: boolean; children: React.ReactNode }> =\n  ({hasHeader, children}) => {\n    return (\n      hasHeader\n        ? <PageWithHeader>{children}</PageWithHeader>\n        : <Page>{children}</Page>\n    );\n  };\n\ninterface RootLayoutProps {\n  article: ArticleNode;\n  lang: string;\n  date: DateTime;\n  lastUpdated?: DateTime;\n}\n\nconst RootLayout: React.FC<RootLayoutProps> = ({children}) => {\n\n  return (\n    <BannerLayout transparentHeader={false}>\n      {children}\n    </BannerLayout>\n  );\n};\n\nconst ArticlePageTemplate: React.FC<Props> = (props) => {\n\n  const i18n = useI18n();\n  const metadataStore = useStore(MetadataStore);\n  const articleStore = useStore(ArticleStore);\n\n  const {id, lang, htmlAst, headings} = props.pageContext;\n\n  const articleNode = metadataStore.getArticleOfLang(id, lang);\n\n  useEffect(() => {\n    articleStore.setArticle(articleNode);\n    return () => {\n      articleStore.setArticle(null);\n    };\n  }, [articleNode]);\n\n  const {\n    path, excerpt,\n    frontmatter: {title, date, tags},\n  } = articleNode;\n\n  const langPathMap = metadataStore.getLangPathMap(props.pageContext.id);\n\n  const publishedTime = useConstant(() => fromArticleTime(date));\n  const lastUpdatedTime = useConstant(() => undefined);\n\n  const deleteOther = (tree) => {\n    tree = tree.filter(t => t.type === 'd');\n    return tree.map(t => {\n      return {\n        ...t,\n        children: deleteOther(t.children),\n      }\n    })\n  }\n  const buildNav = (item) => {\n    return (\n      <li>\n        <li>\n          <Link to={item.href}>{item.title}</Link>\n        </li>\n        {item.children.map((subNav) => {\n          return (\n            buildNav(subNav)\n          )\n        })}\n      </li>\n    )\n  }\n  const getDIr = () => {\n    if (!tags) {\n      return\n    }\n    let t\n    if (!tags[0]){\n      t = title\n    }else {\n      t = tags[0]\n    }\n    if (!t){\n      return\n    }\n    if (!metadataStore.topicList.filter(e => e.title === t)[0]){\n      console.log(t,title,tags)\n      return\n    }\n    let items = metadataStore.topicList.filter(e => e.title === t)[0].tree.children as TopicNodeTree[];\n\n    items = deleteOther(items)\n    if (items.length > 0) {\n      return (\n        <nav>\n          {\n            items.map(item => {\n              return (\n                <ul key={item.id}>\n                  {buildNav(item)}\n                </ul>\n              )\n            })\n          }\n        </nav>\n      )\n    }\n  }\n\n\n  return (\n    <RootLayout\n      article={articleNode} lang={lang}\n      date={publishedTime} lastUpdated={lastUpdatedTime}\n    >\n      <div>\n        <PageMetadata\n          title={title}\n          description={excerpt}\n          url={path}\n          locale={languageInfo['cn'].detailedId}\n          meta={[\n            {name: \"og:type\", content: \"article\"},\n            {name: \"og:article:published_time\", content: publishedTime.toISO()},\n            ...(tags || []).map((x) => ({\n              name: \"og:article:tag\",\n              content: x,\n            })),\n            ...Object.keys(langPathMap)\n              .filter((x) => x !== lang)\n              .map((x) => ({\n                name: \"og:locale:alternate\",\n                content: languageInfo[x].detailedId,\n              })),\n          ]}\n        />\n\n        <PageComponent hasHeader={true}>\n          <SideBar className=\"d-none d-xl-block\">\n            {getDIr()}\n          </SideBar>\n          <Row>\n            <Col md={9} sm={12}>\n              <ArticleContentDisplay\n                htmlAst={htmlAst}\n                headings={headings}\n              />\n            </Col>\n            <Col md={3} className=\"d-none d-md-block\">\n              <StickySidePanel>\n                <TocPanel headings={headings}/>\n              </StickySidePanel>\n            </Col>\n          </Row>\n          <hr/>\n          <CommentPanel\n            language={languageInfo[i18n.currentLanguage.id].gitalkLangId}\n            articleId={id}\n            articleTitle={title}\n          />\n        </PageComponent>\n      </div>\n    </RootLayout>\n  );\n};\n\nexport default ArticlePageTemplate;\n\nconst StickySidePanel = styled.div`\n  position: sticky;\n  top: ${heights.header + 32}px;\n`;\n\n\nconst SideBar = styled.aside`\n  background-color: #222;\n  width: 20rem;\n  position: fixed;\n  z-index: 10;\n  margin: 0;\n  top: 3.6rem;\n  left: 0;\n  bottom: 0;\n  box-sizing: border-box;\n  overflow-y: auto;\n\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n\n  li {\n    padding-left: 1rem;\n  }\n\n  a {\n    padding: .35rem 1rem .35rem 1.25rem;\n    color: #cbd2d8;\n  }\n`;\n"],"names":["enterAnimation","keyframes","PageWithHeader","styled","Page","withConfig","PageComponent","hasHeader","children","React","RootLayout","BannerLayout","transparentHeader","props","i18n","useI18n","metadataStore","useStore","MetadataStore","articleStore","ArticleStore","pageContext","id","lang","htmlAst","headings","articleNode","getArticleOfLang","useEffect","setArticle","path","excerpt","frontmatter","title","date","tags","langPathMap","getLangPathMap","publishedTime","useConstant","fromArticleTime","lastUpdatedTime","deleteOther","tree","filter","t","type","map","buildNav","item","Link","to","href","subNav","article","lastUpdated","PageMetadata","description","url","locale","languageInfo","meta","name","content","toISO","x","Object","keys","detailedId","SideBar","className","topicList","e","items","length","key","console","log","getDIr","Row","Col","md","sm","ArticleContentDisplay","StickySidePanel","TocPanel","CommentPanel","language","currentLanguage","gitalkLangId","articleId","articleTitle","heights"],"sourceRoot":""}