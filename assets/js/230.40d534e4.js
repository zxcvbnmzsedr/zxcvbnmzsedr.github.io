(window.webpackJsonp=window.webpackJsonp||[]).push([[230],{491:function(t,_,v){"use strict";v.r(_);var a=v(7),s=Object(a.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"at模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#at模式"}},[t._v("#")]),t._v(" AT模式")]),t._v(" "),_("p",[t._v("Seata AT模式是最早⽀持的模式。AT模式是指Automatic (Branch) Transaction Mode⾃动化分⽀事务。")]),t._v(" "),_("p",[t._v("Seata AT 模式是增强型2pc模式，或者说是增强型的XA模型。")]),t._v(" "),_("p",[t._v("总体来说，AT 模式，是 2pc两阶段提交协议的演变，不同的地⽅，SeataAT 模式不会⼀直锁表。")]),t._v(" "),_("h1",{attrs:{id:"使用前提"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#使用前提"}},[t._v("#")]),t._v(" 使用前提")]),t._v(" "),_("ul",[_("li",[t._v("基于支持本地 ACID 事务的关系型数据库")]),t._v(" "),_("li",[t._v("Java 应用，通过 JDBC 访问数据库")])]),t._v(" "),_("h1",{attrs:{id:"整体机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#整体机制"}},[t._v("#")]),t._v(" 整体机制")]),t._v(" "),_("p",[t._v("Seata AT模型图")]),t._v(" "),_("p",[t._v("两阶段提交协议的演变：")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("⼀阶段：业务数据和回滚⽇志记录在同⼀个本地事务中提交，释放本地锁和连接资源。")])]),t._v(" "),_("li",[_("p",[t._v("⼆阶段：")]),t._v(" "),_("ul",[_("li",[t._v("提交异步化，⾮常快速地完成")]),t._v(" "),_("li",[t._v("或回滚通过⼀阶段的回滚⽇志进⾏反向补偿")])])])]),t._v(" "),_("p",[t._v("完整的AT在Seata所制定的事务模式下的模型图：")]),t._v(" "),_("p",[_("img",{attrs:{src:"http://image.ztianzeng.com/uPic/20201009172509465.png",alt:"20201009172509465"}})]),t._v(" "),_("h1",{attrs:{id:"数据隔离性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据隔离性"}},[t._v("#")]),t._v(" 数据隔离性")]),t._v(" "),_("h2",{attrs:{id:"写隔离"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#写隔离"}},[t._v("#")]),t._v(" 写隔离")]),t._v(" "),_("ul",[_("li",[t._v("一阶段本地事务提交前，需要确保先拿到 "),_("strong",[t._v("全局锁")]),t._v(" 。")]),t._v(" "),_("li",[t._v("拿不到 "),_("strong",[t._v("全局锁")]),t._v(" ，不能提交本地事务。")]),t._v(" "),_("li",[t._v("拿 "),_("strong",[t._v("全局锁")]),t._v(" 的尝试被限制在一定范围内，超出范围将放弃，并回滚本地事务，释放本地锁。")])]),t._v(" "),_("p",[t._v("以一个示例来说明：")]),t._v(" "),_("p",[t._v("两个全局事务 tx1 和 tx2，分别对 a 表的 m 字段进行更新操作，m 的初始值 1000。")]),t._v(" "),_("p",[t._v("tx1 先开始，开启本地事务，拿到本地锁，更新操作 m = 1000 - 100 = 900。本地事务提交前，先拿到该记录的 "),_("strong",[t._v("全局锁")]),t._v(" ，本地提交释放本地锁。 tx2 后开始，开启本地事务，拿到本地锁，更新操作 m = 900 - 100 = 800。本地事务提交前，尝试拿该记录的 "),_("strong",[t._v("全局锁")]),t._v(" ，tx1 全局提交前，该记录的全局锁被 tx1 持有，tx2 需要重试等待 "),_("strong",[t._v("全局锁")]),t._v(" 。")]),t._v(" "),_("p",[t._v("‍")]),t._v(" "),_("p",[_("img",{attrs:{src:"http://image.ztianzeng.com/uPic/seata_at-1.png",alt:"seata_at-1"}})]),t._v(" "),_("p",[t._v("tx1 二阶段全局提交，释放 "),_("strong",[t._v("全局锁")]),t._v(" 。tx2 拿到 "),_("strong",[t._v("全局锁")]),t._v(" 提交本地事务。")]),t._v(" "),_("p",[_("img",{attrs:{src:"http://image.ztianzeng.com/uPic/52J1Ew.jpg",alt:"52J1Ew"}})]),t._v(" "),_("p",[t._v("如果 tx1 的二阶段全局回滚，则 tx1 需要重新获取该数据的本地锁，进行反向补偿的更新操作，实现分支的回滚。")]),t._v(" "),_("p",[t._v("此时，如果 tx2 仍在等待该数据的  "),_("strong",[t._v("全局锁")]),t._v(" ，同时持有本地锁，则 tx1 的分支回滚会失败。分支的回滚会一直重试，直到 tx2 的 "),_("strong",[t._v("全局锁")]),t._v(" 等锁超时，放弃 "),_("strong",[t._v("全局锁")]),t._v(" 并回滚本地事务释放本地锁，tx1 的分支回滚最终成功。")]),t._v(" "),_("p",[t._v("因为整个过程 "),_("strong",[t._v("全局锁")]),t._v(" 在 tx1 结束前一直是被 tx1 持有的，所以不会发生 "),_("strong",[t._v("脏写")]),t._v(" 的问题。")]),t._v(" "),_("h2",{attrs:{id:"读隔离"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#读隔离"}},[t._v("#")]),t._v(" 读隔离")]),t._v(" "),_("p",[t._v("在数据库本地事务隔离级别 "),_("strong",[t._v("读已提交（Read Committed）")]),t._v(" 或以上的基础上，Seata（AT 模式）的默认全局隔离级别是 "),_("strong",[t._v("读未提交（Read Uncommitted）")]),t._v(" 。")]),t._v(" "),_("p",[t._v("如果应用在特定场景下，必需要求全局的 "),_("strong",[t._v("读已提交")]),t._v(" ，目前 Seata 的方式是通过 SELECT FOR UPDATE 语句的代理。")]),t._v(" "),_("p",[_("img",{attrs:{src:"http://image.ztianzeng.com/uPic/EmlTOi.jpg",alt:"EmlTOi"}})]),t._v(" "),_("p",[t._v("SELECT FOR UPDATE 语句的执行会申请 "),_("strong",[t._v("全局锁")]),t._v(" ，如果 "),_("strong",[t._v("全局锁")]),t._v(" 被其他事务持有，则释放本地锁（回滚 SELECT FOR UPDATE 语句的本地执行）并重试。这个过程中，查询是被 block 住的，直到 "),_("strong",[t._v("全局锁")]),t._v(" 拿到，即读取的相关数据是 "),_("strong",[t._v("已提交")]),t._v(" 的，才返回。")]),t._v(" "),_("p",[t._v("出于总体性能上的考虑，Seata 目前的方案并没有对所有 SELECT 语句都进行代理，仅针对 FOR UPDATE 的 SELECT 语句。")]),t._v(" "),_("p",[t._v("‍")])])}),[],!1,null,null,null);_.default=s.exports}}]);