{
    "componentChunkName": "component---src-templates-topic-page-template-tsx",
    "path": "/topic/redis/Redis分布式缓存/缓存穿透",
    "result": {"pageContext":{"id":"/topic/redis/Redis分布式缓存/缓存穿透","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"缓存穿透"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"是值查询一个缓存和数据库中都没有的数据，由于大部分的缓存策略是被动加载的，并且处于容错考虑，如果从存储层查不到数据则不写入缓存。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这个不存在的数据每次都会到存储层去查询，失去缓存的意义，用户不断发起请求，量大甚至可以导致缓存雪崩。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"接口校验"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"不要相信前端传来的东西，所以数据一定要在后端进行校验。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们可以在接口层添加校验，不合法的直接返回即可，没必要做后续的操作。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"空对象缓存或者缺省值"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"一般情况下OK。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"但是"}]},{"type":"text","value":"黑客会对你的系统进行攻击，拿一个不存在的id 去查询数据，会产生大量的请求到数据库去查询。可能会导致你的数据库由于压力过大而宕掉。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"id相同:"}]},{"type":"text","value":" 第一次打到DB，空对象缓存后第二次就返回null了，避免DB被攻击，不用再到数据库中去走一圈了"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"id不同:"}]},{"type":"text","value":" 由于存在空对象缓存和缓存回写，redis中的无关紧要的key也会越写越多"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"布隆过滤器"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://www.shiyitopo.tech/uPic/image-20210918170608143.png","alt":"image-20210918170608143"},"children":[]}]}],"data":{"quirksMode":false}},"headings":[{"depth":1,"value":"缓存穿透","slug":"缓存穿透"},{"depth":1,"value":"接口校验","slug":"接口校验"},{"depth":1,"value":"空对象缓存或者缺省值","slug":"空对象缓存或者缺省值"},{"depth":1,"value":"布隆过滤器","slug":"布隆过滤器"}]}},
    "staticQueryHashes": ["928362550"]}