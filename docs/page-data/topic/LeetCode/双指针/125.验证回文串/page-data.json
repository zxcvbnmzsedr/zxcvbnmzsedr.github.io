{
    "componentChunkName": "component---src-templates-topic-page-template-tsx",
    "path": "/topic/LeetCode/双指针/125.验证回文串",
    "result": {"pageContext":{"id":"/topic/LeetCode/双指针/125.验证回文串","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"125.验证回文串"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"LeetCode: "},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.cn/problems/valid-palindrome/"},"children":[{"type":"text","value":"https://leetcode.cn/problems/valid-palindrome/"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"题目描述: 验证只考虑字母和数字字符的回文串"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"输入: \"A man, a plan, a canal: Panama\""},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n输出: true"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n解释：\"amanaplanacanalpanama\" 是回文串"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"声明左右指针"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"将左右指针移动到有效的符号位置"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"开始比较"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"public boolean isPalindrome(String s) {\n    char[] chars = s.toLowerCase().toCharArray();\n    int left = 0;\n    int right = chars.length - 1;\n    while (left < right){\n        while (left < right && !Character.isLetterOrDigit(chars[left])) {\n            left++;\n        }\n        while (left < right  && !Character.isLetterOrDigit(chars[right])) {\n            right--;\n        }\n        if (chars[left] == chars[right]){\n            left++;\n            right--;\n        }else {\n            return false;\n        }\n    }\n    return true;\n}\n"}]}]}],"data":{"quirksMode":false}},"headings":[{"depth":1,"value":"125.验证回文串","slug":"125验证回文串"}]}},
    "staticQueryHashes": ["928362550"]}