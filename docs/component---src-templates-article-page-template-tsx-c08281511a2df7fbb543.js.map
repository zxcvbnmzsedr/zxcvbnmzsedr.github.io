{"version":3,"file":"component---src-templates-article-page-template-tsx-c08281511a2df7fbb543.js","mappings":"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","sources":["webpack://ztianzeng.com/./src/components/Article/TagGroup/ArticleTag.tsx","webpack://ztianzeng.com/./src/components/Article/ArticleFrontmatter.tsx","webpack://ztianzeng.com/./src/components/Article/ArticlePageBanner.tsx","webpack://ztianzeng.com/./src/templates/ArticlePageTemplate.tsx"],"sourcesContent":["import \"./article-tag.scss\";\n\nimport { Link } from \"gatsby\";\nimport React from \"react\";\nimport { useStore } from \"simstate\";\nimport styled from \"styled-components\";\n\nimport { LanguageId, useI18n } from \"@/i18n\";\nimport MetadataStore from \"@/stores/MetadataStore\";\n\nconst Tag = styled(Link)`\n  margin-right: 4px;\n`;\n\ninterface Props {\n  tag: string;\n}\n\nconst ArticleTag: React.FC<Props> = ({ tag }) => {\n  const metadataStore = useStore(MetadataStore);\n  const i18n = useI18n();\n\n  const tagOfLang = metadataStore.getTagOfLang(tag, i18n.currentLanguage.id as LanguageId)\n   || tag;\n\n  const title = i18n.translate(\n    \"articleFrontmatter.tagLinkTitle\", [` ${tagOfLang} `]) as string;\n  const toLink = `/posts/search?query=${tagOfLang}`;\n\n  return (\n    <Tag className=\"badge badge-info article-tag\" to={toLink} title={title}>\n      {tagOfLang}\n    </Tag>\n  );\n};\n\nexport default ArticleTag;\n","import { Link } from \"gatsby\";\nimport { DateTime } from \"luxon\";\nimport React from \"react\";\nimport {\n  FaCalendar,\n  FaCalendarPlus, FaFileWord, FaTags,   FaUserClock } from \"react-icons/fa\";\nimport styled from \"styled-components\";\n\nimport ArticleTag from \"@/components/Article/TagGroup/ArticleTag\";\nimport { Localized, prefix, useI18n } from \"@/i18n\";\nimport { breakpoints } from \"@/styles/variables\";\nimport useConstant from \"@/utils/useConstant\";\n\ninterface Props {\n  articleId: string;\n  date: DateTime;\n  lastUpdated?: DateTime;\n  timeToRead: number;\n  wordCount: number;\n  tags?: string[] | null;\n  currentArticleLanguage: string;\n  setItemProp: boolean;\n}\n\nconst p = prefix(\"articleFrontmatter.\");\n\nconst Span = styled.span`\n  margin-right: 8px;\n  padding-right: 8px;\n  margin-bottom: 4px;\n  /* border-left: 1px solid black; */\n  display: inline-block;\n\n`;\n\nconst Tags = styled(Span)`\n\n  /* @media (max-width: ${breakpoints.md}px) {\n    display: block;\n    margin-bottom: 4px;\n  } */\n`;\n\nconst ContainerRow = styled.div`\n  font-size: 0.9em;\n  margin: 8px 0;\n\n  vertical-align: center;\n`;\n\nconst DATE_FORMAT = \"yyyy-MM-dd\";\n\nconst ArticleFrontmatter: React.FC<Props> = (props) => {\n  const {\n    date, timeToRead, tags,\n    lastUpdated, setItemProp, wordCount,\n  } = props;\n\n  const { translate } = useI18n();\n\n  const dateString = useConstant(() => date.toFormat(DATE_FORMAT));\n  const lastUpdatedString = useConstant(() => lastUpdated?.toFormat(DATE_FORMAT));\n\n  const createTimeTitle = translate(p(\"date\")) as string;\n  const lastUpdatedTimeTitle = translate(p(\"lastUpdated\")) as string;\n  return (\n    <ContainerRow>\n      {tags && (\n        <Tags>\n          <FaTags />\n          {tags.map((tag) => <ArticleTag tag={tag} key={tag} />)}\n        </Tags>\n      )}\n      <Span title={createTimeTitle} >\n        <FaCalendar />\n        { setItemProp\n          ? <time itemProp=\"datePublished\" dateTime={date.toISO()}>{dateString}</time>\n          : dateString\n        }\n      </Span>\n      {\n        lastUpdatedString\n          ? (\n            <Span title={lastUpdatedTimeTitle}>\n              <FaCalendarPlus />\n              { setItemProp\n                ? (\n                  <time itemProp=\"dateModified\" dateTime={lastUpdated!.toISO()}>\n                    {lastUpdatedString}\n                  </time>\n                ) : lastUpdatedString\n              }\n            </Span>\n          ) : undefined\n      }\n      <Span>\n        <FaFileWord />\n        <Localized id={p(\"wordCount\")} args={[wordCount]} />\n      </Span>\n      <Span>\n        <FaUserClock />\n        <Localized id={p(\"timeToRead\")} args={[timeToRead]} />\n      </Span>\n    </ContainerRow>\n  );\n};\n\nexport default ArticleFrontmatter;\nstyled(Link)`\n\n  margin-right: 8px;\n`;\n","import {DateTime} from \"luxon\";\nimport React from \"react\";\n\nimport {BannerLayoutTitle} from \"@/layouts/BannerLayout\";\n\nimport ArticleFrontmatter from \"./ArticleFrontmatter\";\n\ninterface Props {\n  title: string;\n  id: string;\n  tags?: string[] | null;\n  date: DateTime;\n  lastUpdated?: DateTime;\n  timeToRead: number;\n  wordCount: number;\n  currentArticleLanguage: string;\n}\n\nconst ArticlePageBanner: React.FC<Props> = ({\n                                              title, id, tags, date, lastUpdated,\n                                              timeToRead, currentArticleLanguage, wordCount,\n                                            }) => {\n  return (\n    <>\n      <BannerLayoutTitle>{title}</BannerLayoutTitle>\n      <ArticleFrontmatter\n        currentArticleLanguage={currentArticleLanguage}\n        articleId={id}\n        tags={tags}\n        date={date}\n        lastUpdated={lastUpdated}\n        timeToRead={timeToRead}\n        wordCount={wordCount}\n        setItemProp={true}\n      />\n    </>\n  );\n};\n\nexport default ArticlePageBanner;\n","import { DateTime } from \"luxon\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Col,Row } from \"reactstrap\";\r\nimport { useStore } from \"simstate\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nimport ArticlePageBanner from \"@/components/Article/ArticlePageBanner\";\r\nimport CommentPanel from \"@/components/Article/CommentPanel\";\r\nimport ArticleContentDisplay from \"@/components/Article/ContentDisplay\";\r\nimport TocPanel from \"@/components/Article/TocPanel\";\r\nimport { PageMetadata } from \"@/components/PageMetadata\";\r\nimport { languageInfo, useI18n } from \"@/i18n\";\r\nimport BannerLayout from \"@/layouts/BannerLayout\";\r\nimport Page from \"@/layouts/Page\";\r\nimport { ArticleNode, Heading } from \"@/models/ArticleNode\";\r\nimport { HtmlAst } from \"@/models/HtmlAst\";\r\nimport ArticleStore from \"@/stores/ArticleStore\";\r\nimport MetadataStore from \"@/stores/MetadataStore\";\r\nimport { heights } from \"@/styles/variables\";\r\nimport { fromArticleTime } from \"@/utils/datetime\";\r\nimport useConstant from \"@/utils/useConstant\";\r\n\r\ninterface Props {\r\n  pageContext: {\r\n    id: string;\r\n    lang: string;\r\n    htmlAst: HtmlAst;\r\n    headings: Heading[];\r\n  };\r\n  location: Location;\r\n}\r\n\r\n\r\nconst enterAnimation = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst PageWithHeader = styled(Page)`\r\n   animation: ${enterAnimation} 0.2s ease-in-out;\r\n`;\r\n\r\nconst PageComponent: React.FC<{ hasHeader: boolean; children: React.ReactNode }> =\r\n({ hasHeader, children }) => {\r\n  return (\r\n    hasHeader\r\n      ? <PageWithHeader>{children}</PageWithHeader>\r\n      : <Page>{children}</Page>\r\n  );\r\n};\r\n\r\ninterface RootLayoutProps {\r\n  article: ArticleNode;\r\n  lang: string;\r\n  date: DateTime;\r\n  lastUpdated?: DateTime;\r\n}\r\n\r\nconst RootLayout: React.FC<RootLayoutProps> = ({\r\n  article, children,\r\n  lang, date, lastUpdated,\r\n}) => {\r\n\r\n  const {\r\n    frontmatter: { id, title, tags },\r\n    timeToRead, wordCountChinese,\r\n  } = article;\r\n\r\n  return (\r\n    <BannerLayout transparentHeader={false} banner={\r\n      <ArticlePageBanner\r\n        title={title}\r\n        id={id}\r\n        tags={tags}\r\n        date={date}\r\n        lastUpdated={lastUpdated}\r\n        timeToRead={timeToRead}\r\n        currentArticleLanguage={lang}\r\n        wordCount={wordCountChinese}\r\n      />\r\n    }\r\n    >\r\n      {children}\r\n    </BannerLayout>\r\n  );\r\n};\r\n\r\nconst ArticlePageTemplate: React.FC<Props> = (props) => {\r\n\r\n  const i18n = useI18n();\r\n  const metadataStore = useStore(MetadataStore);\r\n  const articleStore = useStore(ArticleStore);\r\n\r\n  const { id, lang, htmlAst, headings } = props.pageContext;\r\n\r\n  const articleNode = metadataStore.getArticleOfLang(id, lang);\r\n\r\n  useEffect(() => {\r\n    articleStore.setArticle(articleNode);\r\n    return () => {\r\n      articleStore.setArticle(null);\r\n    };\r\n  }, [articleNode]);\r\n\r\n  const {\r\n    path, excerpt,\r\n    frontmatter: { title, date, tags },\r\n  } = articleNode;\r\n\r\n  const langPathMap = metadataStore.getLangPathMap(props.pageContext.id);\r\n\r\n  const publishedTime = useConstant(() => fromArticleTime(date));\r\n  const lastUpdatedTime = useConstant(() => undefined);\r\n\r\n  return (\r\n    <RootLayout\r\n      article={articleNode} lang={lang}\r\n      date={publishedTime} lastUpdated={lastUpdatedTime}\r\n    >\r\n      <div>\r\n        <PageMetadata\r\n          title={title}\r\n          description={excerpt}\r\n          url={path}\r\n          locale={languageInfo['cn'].detailedId}\r\n          meta={[\r\n            { name: \"og:type\", content: \"article\" },\r\n            { name: \"og:article:published_time\", content: publishedTime.toISO() },\r\n            ...(tags || []).map((x) => ({\r\n              name: \"og:article:tag\",\r\n              content: x,\r\n            })),\r\n            ...Object.keys(langPathMap)\r\n              .filter((x) => x !== lang)\r\n              .map((x) => ({\r\n                name: \"og:locale:alternate\",\r\n                content: languageInfo[x].detailedId,\r\n              })),\r\n          ]}\r\n        />\r\n        <PageComponent hasHeader={true}>\r\n          <Row>\r\n            <Col md={9} sm={12}>\r\n              <ArticleContentDisplay\r\n                htmlAst={htmlAst}\r\n                headings={headings}\r\n              />\r\n            </Col>\r\n            <Col md={3} className=\"d-none d-md-block\">\r\n              <StickySidePanel>\r\n                <TocPanel headings={headings} />\r\n              </StickySidePanel>\r\n            </Col>\r\n          </Row>\r\n          <hr />\r\n          <CommentPanel\r\n            language={languageInfo[i18n.currentLanguage.id].gitalkLangId}\r\n            articleId={id}\r\n            articleTitle={title}\r\n          />\r\n        </PageComponent>\r\n      </div>\r\n    </RootLayout>\r\n  );\r\n};\r\n\r\nexport default ArticlePageTemplate;\r\n\r\nconst StickySidePanel = styled.div`\r\n  position: sticky;\r\n  top: ${heights.header + 32}px;\r\n`;\r\n"],"names":["Tag","styled","Link","withConfig","tag","metadataStore","useStore","MetadataStore","i18n","useI18n","tagOfLang","getTagOfLang","currentLanguage","id","title","translate","toLink","React","className","to","p","prefix","Span","Tags","ContainerRow","DATE_FORMAT","props","date","timeToRead","tags","lastUpdated","setItemProp","wordCount","dateString","useConstant","toFormat","lastUpdatedString","createTimeTitle","lastUpdatedTimeTitle","FaTags","map","ArticleTag","key","FaCalendar","itemProp","dateTime","toISO","FaCalendarPlus","undefined","FaFileWord","Localized","args","FaUserClock","currentArticleLanguage","BannerLayoutTitle","ArticleFrontmatter","articleId","enterAnimation","keyframes","PageWithHeader","Page","PageComponent","hasHeader","children","RootLayout","article","lang","frontmatter","wordCountChinese","BannerLayout","transparentHeader","banner","ArticlePageBanner","articleStore","ArticleStore","pageContext","htmlAst","headings","articleNode","getArticleOfLang","useEffect","setArticle","path","excerpt","langPathMap","getLangPathMap","publishedTime","fromArticleTime","lastUpdatedTime","PageMetadata","description","url","locale","languageInfo","meta","name","content","x","Object","keys","filter","detailedId","Row","Col","md","sm","ArticleContentDisplay","StickySidePanel","TocPanel","CommentPanel","language","gitalkLangId","articleTitle","heights"],"sourceRoot":""}