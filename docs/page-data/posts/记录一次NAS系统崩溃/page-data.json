{
    "componentChunkName": "component---src-templates-article-page-template-tsx",
    "path": "/posts/记录一次NAS系统崩溃",
    "result": {"pageContext":{"id":"/posts/记录一次NAS系统崩溃","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"记录一次NAS系统崩溃"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"由于之前没有考虑到nas的强大，在不断的装docker之后，磁盘竟然满了，后面扩容就一不小心将扩展分区给删除了，虽然成功的扩容了磁盘，但只成功运行了几天，后面一次断点重启，就直接导致无法开机（grub的问题），因为里面就一些电影文件，所以索性心一横直接重装了系统。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我重新审视了一下我自己的需求，无非是影音文件的共享，顺带装个逼，又考虑到J3160这颗垃圾U着实撑不起场面，所以就抛弃了之前用OMV5装docker这种庞大臃肿的方案，能原生的就原生去装。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"OMV5的插件比OMV4少了太多，原生插件堪称基类，基本上都是docker的方案来解决，既然如此，那么用OMV6其实并没有太大的区别，反正都没啥插件，还能体验新系统，所以就折腾起OMV6了。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"再次记录一下装OMV6的过程。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"使用ISO傻瓜式安装过程就不在此叙述了~~~~"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"安装完之后的问题"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"中文乱码"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"安装完，第一件要解决的就是中文乱码问题。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"装完之后使用"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"local"}]},{"type":"text","value":"e命令输出的编码是"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"zh_CN.UTF-8"}]},{"type":"text","value":" 不知道为啥会导致ls 查看中文目录的时候乱码。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"解决方案: 使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"dpkg-reconfigure locales"}]},{"type":"text","value":" 重新配置编码方式 为 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"en_US.UTF-8"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"smb协议兼容问题"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我用小米电视连接smb的时候，始终无法连接上，网上查询得知小米电视采用的是"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SMB1.0"}]},{"type":"text","value":"的协议 ,然后OMV6的需要手动修改一下SMB支持的最低版本"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在图形化界面的SMB设置那里设置 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"server min protocol = CORE"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://image.ztianzeng.com/uPic/image-20220108225924680.png","alt":"image-20220108225924680"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"需要安装的软件"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这些软件原本我是采用docker进行安装，现在都改为原生安装"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"为了这颗破U，能省则省"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"airconnect"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"目的为了能将苹果的音频投放到我的小爱音箱"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"从 https://github.com/philippe44/AirConnect 下载对应架构的 airupnp"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我的是 airupnp-x86-64,"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"wget https://github.com/philippe44/AirConnect/raw/master/bin/airupnp-x86-64\nmv airupnp-x86-64 /usr/bin/air\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置服务"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"vim /usr/lib/systemd/system/air.service\t\n## 写入\n[Unit]\nDescription=air server\nAfter=network.target\n\n[Service]\nType=simple\nUser=root\nExecStart=/usr/bin/air  -Z\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n\n## 执行\nsystemctl daemon-reload\nsystemctl start air\nsystemctl enable air\nsystemctl status air\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"webdav"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"将smb转为更加通用的webdav协议"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"用的是"},{"type":"element","tagName":"a","properties":{"href":"https://github.com/hacdias/webdav"},"children":[{"type":"text","value":"https://github.com/hacdias/webdav"}]},{"type":"text","value":"，发现这个用go写的，最为轻量才几M"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下载对应架构的webdav执行文件，放到/usr/bin目录下面"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"配置文件说明:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"# 监听任意网卡，多网卡可指定对应ip\naddress: 0.0.0.0\nport: 8081\nauth: true\nprefix: /\n\nmodify: true\nrules: []\n\n# 跨域设置\ncors:\n  enabled: true\n  credentials: true\n  allowed_headers:\n    - Depth\n  allowed_hosts:\n    - http://localhost:8081\n  allowed_methods:\n    - GET\n  exposed_headers:\n    - Content-Length\n    - Content-Range\n\n# 用户信息，如果 auth 为 true 生效\nusers:\n  - username: admin\n    password: admin\n    # 配置自己的硬盘路径\n    scope: /srv/dev-disk-by-uuid-c78a92c0-7c20-4480-b997-1f88c9d0cd4d/\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"更多的就去找官网吧，我将这个文件保存为 /home/webdav/webdav.config.yml （个人习惯保存在home目录下）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"将webdav 配置成服务"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"[Unit]\nDescription=WebDAV server\nAfter=network.target\n\n[Service]\nType=simple\nUser=root\nExecStart=/usr/bin/webdav --config /home/webdav/webdav.config.yml\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"systemctl daemon-reload\nsystemctl start webdav\nsystemctl enable webdav\nsystemctl status webdav\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"远程挂载webdav"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"因为有大佬将阿里云盘封装成webdav协议，所以我们可以通过挂载webdav的方式将阿里云盘作为我们的本地盘."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"原本的挂载阿里云盘的服务使用docker部署的，着实太重，后面我就给迁移到了openwrt上面去了，就不在nas上进行挂载了，nas上只需要挂载阿里云盘的webdav服务即可，挂载教程 https://github.com/messense/aliyundrive-webdav"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"~~nas上挂载webdav的方法是采用davfs2~~"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"## 安装davfs2\n apt-get install davfs2 -y\n ## 挂载，自行修改webdav的ip 和 挂载路径\n mount  -t davfs -o noexec http://192.168.31.3:8080 /srv/dev-disk-by-uuid-c78a92c0-7c20-4480-b997-1f88c9d0cd4d/aliyun/\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"~~如果想要开机自动挂载 WebDAV，并且自动输入用户名和密码，需要将"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/etc/davfs2/davfs2.conf"}]},{"type":"text","value":" 中的 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"use_lock"}]},{"type":"text","value":" 解除注释，并将值修改为 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"，接下来在 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":" /etc/davfs2/secrets"}]},{"type":"text","value":" 末尾添加 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"WebDAV地址 用户名 密码"}]},{"type":"text","value":"，最后在 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/etc/fstab"}]},{"type":"text","value":" 末尾添加 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"WebDAV地址 /mnt/webdav davfs rw,user,_netdev 0 0"}]},{"type":"text","value":"。~~"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"使用过程中发现，davfs2挂载的时候会出现无法播放以及网络资源占用的莫名情况，故改为rclone挂载。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"安装rclone:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"curl https://rclone.org/install.sh | sudo bash\nrclone\n## 根据命令行给出的提示进行配置操作\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"修改"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/etc/fuse.conf"}]},{"type":"text","value":",加上"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"user_allow_other"}]},{"type":"text","value":" 表示允许非root用户可以登录"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"挂载文件的命令:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"rclone mount ali:/ /srv/dev-disk-by-uuid-c78a92c0-7c20-4480-b997-1f88c9d0cd4d/aliyun --cache-dir /tmp --allow-other --vfs-cache-mode full --allow-non-empty  \n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注册成服务"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"command=\"mount ali:/ /srv/dev-disk-by-uuid-c78a92c0-7c20-4480-b997-1f88c9d0cd4d/aliyun --cache-dir /tmp --allow-other --vfs-cache-mode full --allow-non-empty\"\ncat > /etc/systemd/system/rclone.service <<EOF\n[Unit]\nDescription=Rclone\nAfter=network-online.target\n\n[Service]\nType=simple\nExecStart=$(command -v rclone) ${command}\nRestart=on-abort\nUser=root\n\n[Install]\nWantedBy=default.target\nEOF\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"内网穿透"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我发现国内某头部厂商基于"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ngork"}]},{"type":"text","value":"提供了一个不限速的内网穿透工具，为了它能存活的久一点，我就不透露它的名字了。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"因为是基于"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ngork"}]},{"type":"text","value":"，使用"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nohup"}]},{"type":"text","value":"无法使其在后台运行，使用"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"screen"}]},{"type":"text","value":"能够后台运行但是无法开机启动，因此我们需要安装"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"supervisord"}]},{"type":"text","value":"来控制进程的启动"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"安装: supervisor"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"apt-cache show supervisor\napt install supervisor\nsupervisord -v\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置启动服务"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"vi /etc/supervisor/conf.d/ngrok.conf\n\n# 项目名称，对应前面supervisorctl命令里的服务名称\n[program:ngrok] \n# 目录\ndirectory = /usr/local/bin/\n# 执行的命令\ncommand = /usr/local/bin/ngrok http -log stdout --authtoken yourtoken 192.168.0.200:4000\n# 在 supervisord 启动的时候也自动启动\nautostart = true\n# 启动 5 秒后没有异常退出，就当作已经正常启动了\nstartsecs = 5\n# 程序异常退出后自动重启\nautorestart = true\n# 启动失败自动重试次数，默认是 3\nstartretries = 3\n# 执行命令的用户\nuser = root\n# 把 stderr 重定向到 stdout，默认 false\nredirect_stderr = true\n# stdout 日志文件大小，默认 50MB\nstdout_logfile_maxbytes = 50MB\n# stdout 日志文件备份数\nstdout_logfile_backups = 20\n# stdout 日志文件\nstdout_logfile = /var/log/supervisor/ngrok.log\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"运行:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"# 加载 ngrok 服务\nsupervisorctl start ngrok\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"zidr 管理文件"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这也是一个神器"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"nginx配置，直接使用omv的php 的socket进行通讯:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-nginx"]},"children":[{"type":"text","value":"server {\n      listen 80;\n      server_name zidr;\n      index zdir/index.php index.html index.htm index.php;\n      root /data/wwwroot/default;\n      access_log /var/log/zdir.log combined;\n      #rewrite\n      rewrite ^/static/(.+) /zdir/static/$1 break;\n     \n      #error_page 404 /404.html;\n      #error_page 502 /502.html;\n\n      location ~ [^/]\\.php(/|$) {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        fastcgi_pass unix:/run/php/php7.4-fpm-openmediavault-webgui.sock;\n        fastcgi_index index.php;\n        fastcgi_read_timeout 60s;\n        include fastcgi.conf;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n      }\n\n      location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ {\n        expires 30d;\n        access_log off;\n      }\n      location ~ .*\\.(js|css)?$ {\n        expires 7d;\n        access_log off;\n      }\n      location ~ /\\.ht {\n        deny all;\n      }\n    }\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"创建路径:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"mkdir -p  /data/wwwroot/default && cd /data/wwwroot/default\ngit clone https://github.com/helloxz/zdir.git\n## 将目录软连接到这里\nln -s /srv/dev dev\n"}]}]}],"data":{"quirksMode":false}},"articleNode":{"field":{"contentType":"posts","topic":null},"frontmatter":{"id":"/posts/记录一次NAS系统崩溃","title":"记录一次NAS系统崩溃","date":"2022-04-21 15:48","absolute_path":"/posts/记录一次NAS系统崩溃"},"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"记录一次NAS系统崩溃"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"由于之前没有考虑到nas的强大，在不断的装docker之后，磁盘竟然满了，后面扩容就一不小心将扩展分区给删除了，虽然成功的扩容了磁盘，但只成功运行了几天，后面一次断点重启，就直接导致无法开机（grub的问题），因为里面就一些电影文件，所以索性心一横直接重装了系统。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我重新审视了一下我自己的需求，无非是影音文件的共享，顺带装个逼，又考虑到J3160这颗垃圾U着实撑不起场面，所以就抛弃了之前用OMV5装docker这种庞大臃肿的方案，能原生的就原生去装。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"OMV5的插件比OMV4少了太多，原生插件堪称基类，基本上都是docker的方案来解决，既然如此，那么用OMV6其实并没有太大的区别，反正都没啥插件，还能体验新系统，所以就折腾起OMV6了。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"再次记录一下装OMV6的过程。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"使用ISO傻瓜式安装过程就不在此叙述了~~~~"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"安装完之后的问题"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"中文乱码"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"安装完，第一件要解决的就是中文乱码问题。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"装完之后使用"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"local"}]},{"type":"text","value":"e命令输出的编码是"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"zh_CN.UTF-8"}]},{"type":"text","value":" 不知道为啥会导致ls 查看中文目录的时候乱码。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"解决方案: 使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"dpkg-reconfigure locales"}]},{"type":"text","value":" 重新配置编码方式 为 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"en_US.UTF-8"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"smb协议兼容问题"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我用小米电视连接smb的时候，始终无法连接上，网上查询得知小米电视采用的是"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"SMB1.0"}]},{"type":"text","value":"的协议 ,然后OMV6的需要手动修改一下SMB支持的最低版本"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在图形化界面的SMB设置那里设置 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"server min protocol = CORE"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://image.ztianzeng.com/uPic/image-20220108225924680.png","alt":"image-20220108225924680"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"需要安装的软件"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这些软件原本我是采用docker进行安装，现在都改为原生安装"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"为了这颗破U，能省则省"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"airconnect"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"目的为了能将苹果的音频投放到我的小爱音箱"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"从 https://github.com/philippe44/AirConnect 下载对应架构的 airupnp"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我的是 airupnp-x86-64,"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"wget https://github.com/philippe44/AirConnect/raw/master/bin/airupnp-x86-64\nmv airupnp-x86-64 /usr/bin/air\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置服务"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"vim /usr/lib/systemd/system/air.service\t\n## 写入\n[Unit]\nDescription=air server\nAfter=network.target\n\n[Service]\nType=simple\nUser=root\nExecStart=/usr/bin/air  -Z\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n\n## 执行\nsystemctl daemon-reload\nsystemctl start air\nsystemctl enable air\nsystemctl status air\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"webdav"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"将smb转为更加通用的webdav协议"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"用的是"},{"type":"element","tagName":"a","properties":{"href":"https://github.com/hacdias/webdav"},"children":[{"type":"text","value":"https://github.com/hacdias/webdav"}]},{"type":"text","value":"，发现这个用go写的，最为轻量才几M"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下载对应架构的webdav执行文件，放到/usr/bin目录下面"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"配置文件说明:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"# 监听任意网卡，多网卡可指定对应ip\naddress: 0.0.0.0\nport: 8081\nauth: true\nprefix: /\n\nmodify: true\nrules: []\n\n# 跨域设置\ncors:\n  enabled: true\n  credentials: true\n  allowed_headers:\n    - Depth\n  allowed_hosts:\n    - http://localhost:8081\n  allowed_methods:\n    - GET\n  exposed_headers:\n    - Content-Length\n    - Content-Range\n\n# 用户信息，如果 auth 为 true 生效\nusers:\n  - username: admin\n    password: admin\n    # 配置自己的硬盘路径\n    scope: /srv/dev-disk-by-uuid-c78a92c0-7c20-4480-b997-1f88c9d0cd4d/\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"更多的就去找官网吧，我将这个文件保存为 /home/webdav/webdav.config.yml （个人习惯保存在home目录下）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"将webdav 配置成服务"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"[Unit]\nDescription=WebDAV server\nAfter=network.target\n\n[Service]\nType=simple\nUser=root\nExecStart=/usr/bin/webdav --config /home/webdav/webdav.config.yml\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"systemctl daemon-reload\nsystemctl start webdav\nsystemctl enable webdav\nsystemctl status webdav\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"远程挂载webdav"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"因为有大佬将阿里云盘封装成webdav协议，所以我们可以通过挂载webdav的方式将阿里云盘作为我们的本地盘."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"原本的挂载阿里云盘的服务使用docker部署的，着实太重，后面我就给迁移到了openwrt上面去了，就不在nas上进行挂载了，nas上只需要挂载阿里云盘的webdav服务即可，挂载教程 https://github.com/messense/aliyundrive-webdav"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"~~nas上挂载webdav的方法是采用davfs2~~"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"## 安装davfs2\n apt-get install davfs2 -y\n ## 挂载，自行修改webdav的ip 和 挂载路径\n mount  -t davfs -o noexec http://192.168.31.3:8080 /srv/dev-disk-by-uuid-c78a92c0-7c20-4480-b997-1f88c9d0cd4d/aliyun/\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"~~如果想要开机自动挂载 WebDAV，并且自动输入用户名和密码，需要将"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/etc/davfs2/davfs2.conf"}]},{"type":"text","value":" 中的 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"use_lock"}]},{"type":"text","value":" 解除注释，并将值修改为 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"，接下来在 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":" /etc/davfs2/secrets"}]},{"type":"text","value":" 末尾添加 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"WebDAV地址 用户名 密码"}]},{"type":"text","value":"，最后在 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/etc/fstab"}]},{"type":"text","value":" 末尾添加 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"WebDAV地址 /mnt/webdav davfs rw,user,_netdev 0 0"}]},{"type":"text","value":"。~~"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"使用过程中发现，davfs2挂载的时候会出现无法播放以及网络资源占用的莫名情况，故改为rclone挂载。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"安装rclone:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"curl https://rclone.org/install.sh | sudo bash\nrclone\n## 根据命令行给出的提示进行配置操作\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"修改"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/etc/fuse.conf"}]},{"type":"text","value":",加上"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"user_allow_other"}]},{"type":"text","value":" 表示允许非root用户可以登录"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"挂载文件的命令:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"rclone mount ali:/ /srv/dev-disk-by-uuid-c78a92c0-7c20-4480-b997-1f88c9d0cd4d/aliyun --cache-dir /tmp --allow-other --vfs-cache-mode full --allow-non-empty  \n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注册成服务"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"command=\"mount ali:/ /srv/dev-disk-by-uuid-c78a92c0-7c20-4480-b997-1f88c9d0cd4d/aliyun --cache-dir /tmp --allow-other --vfs-cache-mode full --allow-non-empty\"\ncat > /etc/systemd/system/rclone.service <<EOF\n[Unit]\nDescription=Rclone\nAfter=network-online.target\n\n[Service]\nType=simple\nExecStart=$(command -v rclone) ${command}\nRestart=on-abort\nUser=root\n\n[Install]\nWantedBy=default.target\nEOF\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"内网穿透"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我发现国内某头部厂商基于"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ngork"}]},{"type":"text","value":"提供了一个不限速的内网穿透工具，为了它能存活的久一点，我就不透露它的名字了。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"因为是基于"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ngork"}]},{"type":"text","value":"，使用"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"nohup"}]},{"type":"text","value":"无法使其在后台运行，使用"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"screen"}]},{"type":"text","value":"能够后台运行但是无法开机启动，因此我们需要安装"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"supervisord"}]},{"type":"text","value":"来控制进程的启动"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"安装: supervisor"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"apt-cache show supervisor\napt install supervisor\nsupervisord -v\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"设置启动服务"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"vi /etc/supervisor/conf.d/ngrok.conf\n\n# 项目名称，对应前面supervisorctl命令里的服务名称\n[program:ngrok] \n# 目录\ndirectory = /usr/local/bin/\n# 执行的命令\ncommand = /usr/local/bin/ngrok http -log stdout --authtoken yourtoken 192.168.0.200:4000\n# 在 supervisord 启动的时候也自动启动\nautostart = true\n# 启动 5 秒后没有异常退出，就当作已经正常启动了\nstartsecs = 5\n# 程序异常退出后自动重启\nautorestart = true\n# 启动失败自动重试次数，默认是 3\nstartretries = 3\n# 执行命令的用户\nuser = root\n# 把 stderr 重定向到 stdout，默认 false\nredirect_stderr = true\n# stdout 日志文件大小，默认 50MB\nstdout_logfile_maxbytes = 50MB\n# stdout 日志文件备份数\nstdout_logfile_backups = 20\n# stdout 日志文件\nstdout_logfile = /var/log/supervisor/ngrok.log\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"运行:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"# 加载 ngrok 服务\nsupervisorctl start ngrok\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"zidr 管理文件"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这也是一个神器"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"nginx配置，直接使用omv的php 的socket进行通讯:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-nginx"]},"children":[{"type":"text","value":"server {\n      listen 80;\n      server_name zidr;\n      index zdir/index.php index.html index.htm index.php;\n      root /data/wwwroot/default;\n      access_log /var/log/zdir.log combined;\n      #rewrite\n      rewrite ^/static/(.+) /zdir/static/$1 break;\n     \n      #error_page 404 /404.html;\n      #error_page 502 /502.html;\n\n      location ~ [^/]\\.php(/|$) {\n        fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n        fastcgi_pass unix:/run/php/php7.4-fpm-openmediavault-webgui.sock;\n        fastcgi_index index.php;\n        fastcgi_read_timeout 60s;\n        include fastcgi.conf;\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n      }\n\n      location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ {\n        expires 30d;\n        access_log off;\n      }\n      location ~ .*\\.(js|css)?$ {\n        expires 7d;\n        access_log off;\n      }\n      location ~ /\\.ht {\n        deny all;\n      }\n    }\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"创建路径:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-shell"]},"children":[{"type":"text","value":"mkdir -p  /data/wwwroot/default && cd /data/wwwroot/default\ngit clone https://github.com/helloxz/zdir.git\n## 将目录软连接到这里\nln -s /srv/dev dev\n"}]}]}],"data":{"quirksMode":false}},"headings":[{"depth":1,"value":"记录一次NAS系统崩溃"},{"depth":2,"value":"安装完之后的问题"},{"depth":3,"value":"中文乱码"},{"depth":3,"value":"smb协议兼容问题"},{"depth":2,"value":"需要安装的软件"},{"depth":3,"value":"airconnect"},{"depth":3,"value":"webdav"},{"depth":3,"value":"远程挂载webdav"},{"depth":3,"value":"内网穿透"},{"depth":3,"value":"zidr 管理文件"}],"path":"/posts/记录一次NAS系统崩溃"},"headings":[{"depth":1,"value":"记录一次NAS系统崩溃","slug":"记录一次nas系统崩溃"},{"depth":2,"value":"安装完之后的问题","slug":"安装完之后的问题"},{"depth":3,"value":"中文乱码","slug":"中文乱码"},{"depth":3,"value":"smb协议兼容问题","slug":"smb协议兼容问题"},{"depth":2,"value":"需要安装的软件","slug":"需要安装的软件"},{"depth":3,"value":"airconnect","slug":"airconnect"},{"depth":3,"value":"webdav","slug":"webdav"},{"depth":3,"value":"远程挂载webdav","slug":"远程挂载webdav"},{"depth":3,"value":"内网穿透","slug":"内网穿透"},{"depth":3,"value":"zidr 管理文件","slug":"zidr-管理文件"}]}},
    "staticQueryHashes": ["630634786","928362550"]}