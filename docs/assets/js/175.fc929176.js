(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{478:function(t,v,_){"use strict";_.r(v);var a=_(6),s=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[v("img",{attrs:{src:"https://image.ztianzeng.com//uPic/image-20220420200307251.png",alt:"image-20220420200307251"}})]),t._v(" "),v("p",[t._v("上面所示，列出了目前所有的分布式解决方案")]),t._v(" "),v("p",[t._v("分布式事务实现⽅案从类型上去分刚性事务、柔型事务：")]),t._v(" "),v("ul",[v("li",[t._v("刚性事务满⾜CAP的CP理论")]),t._v(" "),v("li",[t._v("柔性事务满⾜BASE理论")])]),t._v(" "),v("h2",{attrs:{id:"刚性事务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#刚性事务"}},[t._v("#")]),t._v(" 刚性事务")]),t._v(" "),v("p",[t._v("通常⽆业务改造，强⼀致性，原⽣⽀持回滚/隔离性，低并发，适合短事务。要使分布式事务，达到像本地式事务⼀样，具备数据强⼀致性，从CAP来看，就是说，要达到CP状态。")]),t._v(" "),v("h2",{attrs:{id:"柔性事务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#柔性事务"}},[t._v("#")]),t._v(" 柔性事务")]),t._v(" "),v("p",[t._v("柔性事务指的是，不要求强⼀致性，⽽是要求最终⼀致性，允许有中间状态，也就是Base理论，换句话说，就是AP状态。")]),t._v(" "),v("p",[t._v("与刚性事务相⽐，柔性事务的特点为：有业务改造，最终⼀致性，实现补偿接⼝，实现资源锁定接⼝，⾼并发，适合⻓事务。")]),t._v(" "),v("p",[t._v("柔性事务分三大类为：")]),t._v(" "),v("ul",[v("li",[t._v("补偿型")]),t._v(" "),v("li",[t._v("异步确保型")]),t._v(" "),v("li",[t._v("最⼤努⼒通知型。")])])])}),[],!1,null,null,null);v.default=s.exports}}]);