{"version":3,"file":"component---src-templates-topic-page-template-tsx-6e5fda03d0bdba023049.js","mappings":"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","sources":["webpack://ztianzeng.com/./src/templates/TopicPageTemplate.tsx"],"sourcesContent":["import {DateTime} from \"luxon\";\nimport React from \"react\";\nimport {Col, Row} from \"reactstrap\";\nimport styled, {keyframes} from \"styled-components\";\nimport CommentPanel from \"@/components/Article/CommentPanel\";\nimport ArticleContentDisplay from \"@/components/Article/ContentDisplay\";\nimport TocPanel from \"@/components/Article/TocPanel\";\nimport {PageMetadata} from \"@/components/PageMetadata\";\nimport {languageInfo, useI18n} from \"@/i18n\";\nimport BannerLayout from \"@/layouts/BannerLayout\";\nimport Page from \"@/layouts/Page\";\nimport {ArticleNode, Heading, TopicNodeTree} from \"@/models/ArticleNode\";\nimport {HtmlAst} from \"@/models/HtmlAst\";\nimport {heights} from \"@/styles/variables\";\nimport {fromArticleTime} from \"@/utils/datetime\";\nimport useConstant from \"@/utils/useConstant\";\nimport {Link} from \"gatsby\";\n\ninterface Props {\n  pageContext: {\n    id: string;\n    lang: string;\n    htmlAst: HtmlAst;\n    headings: Heading[];\n    tree: TopicNodeTree;\n    articleNode: ArticleNode;\n  };\n}\n\n\nconst enterAnimation = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nconst PageWithHeader = styled(Page)`\n  animation: ${enterAnimation} 0.2s ease-in-out;\n`;\n\nconst PageComponent: React.FC<{ hasHeader: boolean; children: React.ReactNode }> =\n  ({hasHeader, children}) => {\n    return (\n      hasHeader\n        ? <PageWithHeader>{children}</PageWithHeader>\n        : <Page>{children}</Page>\n    );\n  };\n\ninterface RootLayoutProps {\n  article: ArticleNode;\n  lang: string;\n  date: DateTime;\n  lastUpdated?: DateTime;\n}\n\nconst RootLayout: React.FC<RootLayoutProps> = ({children}) => {\n\n  return (\n    <BannerLayout transparentHeader={false}>\n      {children}\n    </BannerLayout>\n  );\n};\n\nconst ArticlePageTemplate: React.FC<Props> = (props) => {\n\n  const i18n = useI18n();\n\n  const {id, lang, htmlAst, headings, tree, articleNode} = props.pageContext;\n\n  const {\n    path, excerpt,\n    frontmatter: {title, date, tags},\n  } = articleNode;\n\n\n  const publishedTime = useConstant(() => fromArticleTime(date));\n  const lastUpdatedTime = useConstant(() => undefined);\n\n  const deleteOther = (tree) => {\n    tree = tree.filter(t => t.type === 'd');\n    return tree.map(t => {\n      return {\n        ...t,\n        children: deleteOther(t.children),\n      }\n    })\n  }\n  const buildNav = (item) => {\n    return (\n      <li>\n        <li>\n          <Link to={item.href}>{item.title}</Link>\n        </li>\n        {item.children.map((subNav) => {\n          return (\n            buildNav(subNav)\n          )\n        })}\n      </li>\n    )\n  }\n  const getDIr = (tree) => {\n    let items = tree.children as TopicNodeTree[];\n\n    items = deleteOther(items)\n    if (items.length > 0) {\n      return (\n        <nav>\n          {\n            items.map(item => {\n              return (\n                <ul key={item.id}>\n                  {buildNav(item)}\n                </ul>\n              )\n            })\n          }\n        </nav>\n      )\n    }\n  }\n\n\n  return (\n    <RootLayout\n      article={articleNode} lang={lang}\n      date={publishedTime} lastUpdated={lastUpdatedTime}\n    >\n      <div>\n        <PageMetadata\n          title={title}\n          description={excerpt}\n          url={path}\n          locale={languageInfo['cn'].detailedId}\n          meta={[\n            {name: \"og:type\", content: \"article\"},\n            {name: \"og:article:published_time\", content: publishedTime.toISO()},\n            ...(tags || []).map((x) => ({\n              name: \"og:article:tag\",\n              content: x,\n            })),\n          ]}\n        />\n\n        <PageComponent hasHeader={true}>\n          <SideBar className=\"d-none d-xl-block\">\n            {getDIr(tree)}\n          </SideBar>\n          <Row>\n            <Col md={1}>\n\n            </Col>\n            <Col md={8} sm={12}>\n              <ArticleContentDisplay\n                htmlAst={htmlAst}\n                headings={headings}\n              />\n            </Col>\n            <Col md={3} className=\"d-none d-md-block\">\n              <StickySidePanel>\n                <TocPanel headings={headings}/>\n              </StickySidePanel>\n            </Col>\n          </Row>\n          <hr/>\n          <CommentPanel\n            language={languageInfo[i18n.currentLanguage.id].gitalkLangId}\n            articleId={id}\n            articleTitle={title}\n          />\n        </PageComponent>\n      </div>\n    </RootLayout>\n  );\n};\n\nexport default ArticlePageTemplate;\n\nconst StickySidePanel = styled.div`\n  position: sticky;\n  top: ${heights.header + 32}px;\n`;\n\n\nconst SideBar = styled.aside`\n  background-color: #222;\n  width: 20rem;\n  position: fixed;\n  z-index: 10;\n  margin: 0;\n  top: 3.6rem;\n  left: 0;\n  bottom: 0;\n  box-sizing: border-box;\n  overflow-y: auto;\n\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n\n  li {\n    padding-left: 1rem;\n  }\n\n  a {\n    padding: .35rem 1rem .35rem 1.25rem;\n    color: #cbd2d8;\n  }\n`;\n"],"names":["enterAnimation","keyframes","PageWithHeader","styled","Page","withConfig","PageComponent","hasHeader","children","React","RootLayout","BannerLayout","transparentHeader","props","i18n","useI18n","pageContext","id","lang","htmlAst","headings","tree","articleNode","path","excerpt","frontmatter","title","date","tags","publishedTime","useConstant","fromArticleTime","lastUpdatedTime","deleteOther","filter","t","type","map","buildNav","item","Link","to","href","subNav","article","lastUpdated","PageMetadata","description","url","locale","languageInfo","meta","name","content","toISO","x","SideBar","className","items","length","key","getDIr","Row","Col","md","sm","ArticleContentDisplay","StickySidePanel","TocPanel","CommentPanel","language","currentLanguage","gitalkLangId","articleId","articleTitle","heights"],"sourceRoot":""}