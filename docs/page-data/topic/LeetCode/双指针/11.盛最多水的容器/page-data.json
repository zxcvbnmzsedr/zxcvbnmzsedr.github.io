{
    "componentChunkName": "component---src-templates-topic-page-template-tsx",
    "path": "/topic/LeetCode/双指针/11.盛最多水的容器",
    "result": {"pageContext":{"id":"/topic/LeetCode/双指针/11.盛最多水的容器","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"11.盛最多水的容器"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"LeetCode: "},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.cn/problems/container-with-most-water/"},"children":[{"type":"text","value":"https://leetcode.cn/problems/container-with-most-water/"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"题目描述:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"给定一个长度为 n 的整数数组 height 。有 n 条垂线，第 i 条线的两个端点是 (i, 0) 和 (i, height[i]) 。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"返回容器可以储存的最大水量。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"输入：[1,8,6,2,5,4,8,3,7]"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n输出：49"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n解释：图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"决定一个容器容纳的水的大小，是由最短的那根木板决定。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"所以，这道题目本质上寻找一个，底部长度和高度都相对较长的。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"声明左右指针，作为桶的左右边界"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"按照双指针的思路向内部迭代"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果左边的高度比右边小，则左边向右移；反之，右边向左移"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"若向内 移动短板 ，水槽的短板 min(h[i], h[j])min(h[i],h[j]) 可能变大，因此下个水槽的面积 可能增大"},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":"\n若向内 移动长板 ，水槽的短板 min(h[i], h[j])min(h[i],h[j]) 不变或变小，因此下个水槽的面积一定变小"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在迭代过程中，计算最大值，即可"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-java"]},"children":[{"type":"text","value":"public int maxArea(int[] height) {\n    int left = 0;\n    int right = height.length - 1;\n    int max = -1;\n    while (left < right){\n        int leftHeight = height[left];\n        int rightHeight = height[right];\n        int cur = Math.min(leftHeight,rightHeight) * (right - left);\n        max = Math.max(cur,max);\n        if (leftHeight < rightHeight){\n            left++;\n        }else {\n            right--;\n        }\n\n    }\n    return max;\n}\n"}]}]}],"data":{"quirksMode":false}},"headings":[{"depth":1,"value":"11.盛最多水的容器","slug":"11盛最多水的容器"}]}},
    "staticQueryHashes": ["928362550"]}