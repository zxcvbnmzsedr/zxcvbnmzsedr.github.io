{
    "componentChunkName": "component---src-templates-topic-page-template-tsx",
    "path": "/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现",
    "result": {"pageContext":{"id":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"刚性事务的是通过XA模型来进行实现的，XA模型是X/Open组织提出来的分布式事务的实现标准。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"X/OPEN是⼀个组织.X/Open国际联盟有限公司是⼀个欧洲基⾦会，它的建⽴是为了向UNIX环境提供标准。它主要的⽬标是促进对UNIX语⾔、接⼝、⽹络和应⽤的开放式系统协议的制定。它还促进在不同的UNIX环境之间的应⽤程序的互操作性，以及⽀持对电⽓电⼦⼯程师协会（IEEE）对UNIX的可移植操作系统接⼝（POSIX）规范。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　XA模型主要使⽤了两段提交(2PC - Two-Phase-Commit)来保证分布式事务的完整性。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　在XA模型中，定义了三个角色，AP、TM、RM。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 AP: Application，应⽤程序。也就是业务层。哪些操作属于⼀个事务，就是AP定义的。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 TM: Transaction Manager，事务管理器。接收AP的事务请求，对全局事务进⾏管理，管理事务分⽀状态，协调RM的处理，通知RM哪些操作属于哪些全局事务以及事务分⽀等等。这个也是整个事务调度模型的核⼼部分。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 RM：Resource Manager，资源管理器。⼀般是数据库，也可以是其他的资源管理器，如消息队列(如JMS数据源)，⽂件系统等。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"img","properties":{"src":"https://www.shiyitopo.tech/uPic/adfns079.gif","alt":"Developing Applications with Oracle XA"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　XA则规范了TM与RM之间的通信接⼝，在TM与多个RM之间形成⼀个双向通信桥梁，从⽽在多个数据库资源下保证ACID四个特性。⽬前知名的数据库，如Oracle, DB2,mysql等，都是实现了XA接⼝的，都可以作为RM。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　XA是数据库的分布式事务，强⼀致性，在整个过程中，数据⼀张锁住状态，即从prepare到commit、rollback的整个过程中，TM⼀直把持折数据库的锁，如果有其他⼈要修改数据库的该条数据，就必须等待锁的释放，存在⻓事务⻛险。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　XA事务处理流程示意图如下："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"img","properties":{"src":"https://www.shiyitopo.tech/uPic/XA%E4%BA%8B%E5%8A%A1.png","alt":"XA事务"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"2PC(标准XA模型)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　2PC 将数据分为两个阶段进行处理:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　阶段⼀：提交事务请求"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　阶段⼆：执⾏事务提交;"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　如果阶段⼀超时或者出现异常，2PC的阶段⼆：中断事务"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"阶段⼀：提交事务请求"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"事务询问。协调者向所有参与者发送事务内容，询问是否可以执⾏提交操作，并开始等待各参与者进⾏响应"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"执⾏事务。各参与者节点，执⾏事务操作，并将Undo和Redo操作计⼊本机事务⽇志"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"各参与者向协调者反馈事务问询的响应。成功执⾏返回Yes，否则返回No"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"阶段⼆：执⾏事务提交"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　协调者在阶段⼆决定是否最终执⾏事务提交操作。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　这⼀阶段包含两种情形："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"事务提交"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　执⾏事务提交所有参与者Reply Yes，那么执⾏事务提交"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"发送提交请求。协调者向所有参与者发送Commit请求"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"事务提交。参与者收到Commit请求后，会正式执⾏事务提交操作，并在完成提交操作之后，释放在整个事务执⾏期间占⽤的资源"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"反馈事务提交结果。参与者在完成事务提交后，写协调者发送Ack消息确认"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"完成事务。协调者在收到所有参与者的Ack后，完成事务。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"img","properties":{"src":"https://image.ztianzeng.com/uPic/5wRmVD.jpg","alt":"5wRmVD"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"事务中断"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　当存在某⼀参与者向协调者发送No响应，或者等待超时。协调者只要⽆法收到所有参与者的Yes响应，就会中断事务。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"发送回滚请求。协调者向所有参与者发送Rollback请求"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"回滚。参与者收到请求后，利⽤本机Undo信息，执⾏Rollback操作。并在回滚结束后释放该事务所占⽤的系统资源"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"反馈回滚结果。参与者在完成回滚操作后，向协调者发送Ack消息"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"中断事务。协调者收到所有参与者的回滚Ack消息后，完成事务中断"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"img","properties":{"src":"https://image.ztianzeng.com/uPic/37WkXj.jpg","alt":"37WkXj"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"二阶段的优缺点"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　优点主要体现在实现原理简单；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　缺点⽐较多："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"性能问题"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"从流程上我们可以看得出，其最⼤缺点就在于它的执⾏过程中间，节点都处于阻塞状态。各个操作数据库的节点此时都占⽤着数据库资源，只有当"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"所有节点准备完毕，事务协调者才会通知进⾏全局提交，参与者进⾏本地事务提交后才会释放资源。这样的过程会⽐较漫⻓，对性能影响⽐较⼤。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"协调者单点故障问题"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"事务协调者是整个XA模型的核⼼，⼀旦事务协调者节点挂掉，会导致参与者收不到提交或回滚的通知，从⽽导致参与者节点始终处于事务⽆法完成"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"的中间状态。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"丢失消息导致的数据不⼀致问题"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在第⼆个阶段，如果发⽣局部⽹络问题，⼀部分事务参与者收到了提交消息，另⼀部分事务参与者没收到提交消息，那么就会导致节点间数据的不⼀致问题。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"3PC"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　针对2PC的缺点，研究者提出了3PC，即Three-Phase Commit。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　作为2PC的改进版，3PC将原有的两阶段过程，重新划分为CanCommit、PreCommit和do Commit三个阶段。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"img","properties":{"src":"https://image.ztianzeng.com/uPic/fxQv2n.jpg","alt":"fxQv2n"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"阶段⼀：CanCommit"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"事务询问。协调者向所有参与者发送包含事务内容的canCommit的请求，询问是否可以执⾏事务提交，并等待应答；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"各参与者反馈事务询问。正常情况下，如果参与者认为可以顺利执⾏事务，则返回Yes，否则返回No。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"阶段⼆：PreCommit"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　在本阶段，协调者会根据上⼀阶段的反馈情况来决定是否可以执⾏事务的PreCommit操作"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　有以下两种可能：执⾏事务预提交"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"发送预提交请求。协调者向所有节点发出PreCommit请求，并进⼊prepared阶段；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"事务预提交。参与者收到PreCommit请求后，会执⾏事务操作，并将Undo和Redo⽇志写⼊本机事务⽇志；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"各参与者成功执⾏事务操作，同时将反馈以Ack响应形式发送给协调者，同事等待最终的Commit或Abort指令。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"中断事务"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　加⼊任意⼀个参与者向协调者发送No响应，或者等待超时，协调者在没有得到所有参与者响应时，即可以中断事务:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"发送中断请求。 协调者向所有参与者发送Abort请求；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"中断事务。⽆论是收到协调者的Abort请求，还是等待协调者请求过程中出现超时，参与者都会中断事务；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"阶段三：doCommit"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　在这个阶段，会真正的进⾏事务提交，同样存在两种可能。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"执⾏提交"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"发送提交请求。假如协调者收到了所有参与者的Ack响应，那么将从预提交转换到提交状态，并向所有参与者，发送doCommit请求；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"事务提交。参与者收到doCommit请求后，会正式执⾏事务提交操作，并在完成提交操作后释放占⽤资源；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"反馈事务提交结果。参与者将在完成事务提交后，向协调者发送Ack消息；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"完成事务。协调者接收到所有参与者的Ack消息后，完成事务。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"中断事务"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　在该阶段，假设正常状态的协调者接收到任⼀个参与者发送的No响应，或在超时时间内，仍旧没收到反馈消息，就会中断事务："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"发送中断请求。协调者向所有的参与者发送abort请求；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"事务回滚。参与者收到abort请求后，会利⽤阶段⼆中的Undo消息执⾏事务回滚，并在完成回滚后释放占⽤资源；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"反馈事务回滚结果。参与者在完成回滚后向协调者发送Ack消息；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"中端事务。协调者接收到所有参与者反馈的Ack消息后，完成事务中断。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"2PC和3PC的区别"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　3PC有效降低了2PC带来的参与者阻塞范围，并且能够在出现单点故障后继续达成⼀致；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　但3PC带来了新的问题，在参与者收到preCommit消息后，如果⽹络出现分区，协调者和参与者⽆法进⾏后续的通信，这种情况下，参与者在等待超时后，依旧会执⾏事务提交，这样会导致数据的不⼀致。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　三阶段提交协议在协调者和参与者中都引⼊ 超时机制，并且把两阶段提交协议的第⼀个阶段拆分成了两步：询问，然后再锁资源，最后真正提交。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"img","properties":{"src":"https://image.ztianzeng.com/uPic/image-20220421204125-ux86w8m.png","alt":"image-20220421204125-ux86w8m"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"style","properties":{"className":["grvsc-styles"]},"children":[{"type":"text","value":"\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n"}]}],"data":{"quirksMode":false}},"html":"<p updated=\"20220805101449\">　　刚性事务的是通过XA模型来进行实现的，XA模型是X/Open组织提出来的分布式事务的实现标准。</p>\n<blockquote updated=\"20220805101449\">\n<p updated=\"20220805101449\">X/OPEN是⼀个组织.X/Open国际联盟有限公司是⼀个欧洲基⾦会，它的建⽴是为了向UNIX环境提供标准。它主要的⽬标是促进对UNIX语⾔、接⼝、⽹络和应⽤的开放式系统协议的制定。它还促进在不同的UNIX环境之间的应⽤程序的互操作性，以及⽀持对电⽓电⼦⼯程师协会（IEEE）对UNIX的可移植操作系统接⼝（POSIX）规范。</p>\n</blockquote>\n<p updated=\"20220805101449\">　　XA模型主要使⽤了两段提交(2PC - Two-Phase-Commit)来保证分布式事务的完整性。</p>\n<p updated=\"20220805101449\">　　在XA模型中，定义了三个角色，AP、TM、RM。</p>\n<p updated=\"20220805101449\">　　 AP: Application，应⽤程序。也就是业务层。哪些操作属于⼀个事务，就是AP定义的。</p>\n<p updated=\"20220805101449\">　　 TM: Transaction Manager，事务管理器。接收AP的事务请求，对全局事务进⾏管理，管理事务分⽀状态，协调RM的处理，通知RM哪些操作属于哪些全局事务以及事务分⽀等等。这个也是整个事务调度模型的核⼼部分。</p>\n<p updated=\"20220805101449\">　　 RM：Resource Manager，资源管理器。⼀般是数据库，也可以是其他的资源管理器，如消息队列(如JMS数据源)，⽂件系统等。</p>\n<p updated=\"20220805101449\">　　<span class=\"img\"><img src=\"https://www.shiyitopo.tech/uPic/adfns079.gif\" alt=\"Developing Applications with Oracle XA\" /></span></p>\n<p updated=\"20220805101449\">　　XA则规范了TM与RM之间的通信接⼝，在TM与多个RM之间形成⼀个双向通信桥梁，从⽽在多个数据库资源下保证ACID四个特性。⽬前知名的数据库，如Oracle, DB2,mysql等，都是实现了XA接⼝的，都可以作为RM。</p>\n<p updated=\"20220805101449\">　　XA是数据库的分布式事务，强⼀致性，在整个过程中，数据⼀张锁住状态，即从prepare到commit、rollback的整个过程中，TM⼀直把持折数据库的锁，如果有其他⼈要修改数据库的该条数据，就必须等待锁的释放，存在⻓事务⻛险。</p>\n<p updated=\"20220805101449\">　　XA事务处理流程示意图如下：</p>\n<p updated=\"20220805101449\">　　<span class=\"img\"><img src=\"https://www.shiyitopo.tech/uPic/XA%E4%BA%8B%E5%8A%A1.png\" alt=\"XA事务\" /></span></p>\n<h2 id=\"2PC-标准XA模型-\">2PC(标准XA模型)</h2>\n<p updated=\"20220805101449\">　　2PC 将数据分为两个阶段进行处理:</p>\n<p updated=\"20220805101449\">　　阶段⼀：提交事务请求</p>\n<p updated=\"20220805101449\">　　阶段⼆：执⾏事务提交;</p>\n<p updated=\"20220805101449\">　　如果阶段⼀超时或者出现异常，2PC的阶段⼆：中断事务</p>\n<h3 id=\"阶段--提交事务请求\">阶段⼀：提交事务请求</h3>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-xmlmrbq\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">事务询问。协调者向所有参与者发送事务内容，询问是否可以执⾏提交操作，并开始等待各参与者进⾏响应</p>\n</li>\n<li id=\"20220805101449-qnv5uo8\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">执⾏事务。各参与者节点，执⾏事务操作，并将Undo和Redo操作计⼊本机事务⽇志</p>\n</li>\n<li id=\"20220805101449-qn8qwkn\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">各参与者向协调者反馈事务问询的响应。成功执⾏返回Yes，否则返回No</p>\n</li>\n</ol>\n<h3 id=\"阶段--执-事务提交\">阶段⼆：执⾏事务提交</h3>\n<p updated=\"20220805101449\">　　协调者在阶段⼆决定是否最终执⾏事务提交操作。</p>\n<p updated=\"20220805101449\">　　这⼀阶段包含两种情形：</p>\n<p updated=\"20220805101449\">　　<strong>事务提交</strong></p>\n<p updated=\"20220805101449\">　　执⾏事务提交所有参与者Reply Yes，那么执⾏事务提交</p>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-i88ylbl\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">发送提交请求。协调者向所有参与者发送Commit请求</p>\n</li>\n<li id=\"20220805101449-ps5wemv\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">事务提交。参与者收到Commit请求后，会正式执⾏事务提交操作，并在完成提交操作之后，释放在整个事务执⾏期间占⽤的资源</p>\n</li>\n<li id=\"20220805101449-qqdbjf9\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">反馈事务提交结果。参与者在完成事务提交后，写协调者发送Ack消息确认</p>\n</li>\n<li id=\"20220805101449-566vn19\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">完成事务。协调者在收到所有参与者的Ack后，完成事务。</p>\n</li>\n</ol>\n<p updated=\"20220805101449\">　　<span class=\"img\"><img src=\"https://image.ztianzeng.com/uPic/5wRmVD.jpg\" alt=\"5wRmVD\" /></span></p>\n<p updated=\"20220805101449\">　　<strong>事务中断</strong></p>\n<p updated=\"20220805101449\">　　当存在某⼀参与者向协调者发送No响应，或者等待超时。协调者只要⽆法收到所有参与者的Yes响应，就会中断事务。</p>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-qf3f548\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">发送回滚请求。协调者向所有参与者发送Rollback请求</p>\n</li>\n<li id=\"20220805101449-71x7o3s\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">回滚。参与者收到请求后，利⽤本机Undo信息，执⾏Rollback操作。并在回滚结束后释放该事务所占⽤的系统资源</p>\n</li>\n<li id=\"20220805101449-bd7mgbf\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">反馈回滚结果。参与者在完成回滚操作后，向协调者发送Ack消息</p>\n</li>\n<li id=\"20220805101449-m81z45g\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">中断事务。协调者收到所有参与者的回滚Ack消息后，完成事务中断</p>\n</li>\n</ol>\n<p updated=\"20220805101449\">　　<span class=\"img\"><img src=\"https://image.ztianzeng.com/uPic/37WkXj.jpg\" alt=\"37WkXj\" /></span></p>\n<h3 id=\"二阶段的优缺点\">二阶段的优缺点</h3>\n<p updated=\"20220805101449\">　　优点主要体现在实现原理简单；</p>\n<p updated=\"20220805101449\">　　缺点⽐较多：</p>\n<ul updated=\"20220805101449\">\n<li id=\"20220805101449-3ilgg1m\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">性能问题</p>\n<p updated=\"20220805101449\">从流程上我们可以看得出，其最⼤缺点就在于它的执⾏过程中间，节点都处于阻塞状态。各个操作数据库的节点此时都占⽤着数据库资源，只有当</p>\n<p updated=\"20220805101449\">所有节点准备完毕，事务协调者才会通知进⾏全局提交，参与者进⾏本地事务提交后才会释放资源。这样的过程会⽐较漫⻓，对性能影响⽐较⼤。</p>\n</li>\n<li id=\"20220805101449-5jq43yg\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">协调者单点故障问题</p>\n<p updated=\"20220805101449\">事务协调者是整个XA模型的核⼼，⼀旦事务协调者节点挂掉，会导致参与者收不到提交或回滚的通知，从⽽导致参与者节点始终处于事务⽆法完成</p>\n<p updated=\"20220805101449\">的中间状态。</p>\n</li>\n<li id=\"20220805101449-y7cqohr\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">丢失消息导致的数据不⼀致问题</p>\n<p updated=\"20220805101449\">在第⼆个阶段，如果发⽣局部⽹络问题，⼀部分事务参与者收到了提交消息，另⼀部分事务参与者没收到提交消息，那么就会导致节点间数据的不⼀致问题。</p>\n</li>\n</ul>\n<h2 id=\"3PC\">3PC</h2>\n<p updated=\"20220805101449\">　　针对2PC的缺点，研究者提出了3PC，即Three-Phase Commit。</p>\n<p updated=\"20220805101449\">　　作为2PC的改进版，3PC将原有的两阶段过程，重新划分为CanCommit、PreCommit和do Commit三个阶段。</p>\n<p updated=\"20220805101449\">　　<span class=\"img\"><img src=\"https://image.ztianzeng.com/uPic/fxQv2n.jpg\" alt=\"fxQv2n\" /></span></p>\n<h3 id=\"阶段--CanCommit\">阶段⼀：CanCommit</h3>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-q5r7g0e\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">事务询问。协调者向所有参与者发送包含事务内容的canCommit的请求，询问是否可以执⾏事务提交，并等待应答；</p>\n</li>\n<li id=\"20220805101449-ppbgw55\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">各参与者反馈事务询问。正常情况下，如果参与者认为可以顺利执⾏事务，则返回Yes，否则返回No。</p>\n</li>\n</ol>\n<h3 id=\"阶段--PreCommit\">阶段⼆：PreCommit</h3>\n<p updated=\"20220805101449\">　　在本阶段，协调者会根据上⼀阶段的反馈情况来决定是否可以执⾏事务的PreCommit操作</p>\n<p updated=\"20220805101449\">　　有以下两种可能：执⾏事务预提交</p>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-xfsyexi\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">发送预提交请求。协调者向所有节点发出PreCommit请求，并进⼊prepared阶段；</p>\n</li>\n<li id=\"20220805101449-meoewhk\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">事务预提交。参与者收到PreCommit请求后，会执⾏事务操作，并将Undo和Redo⽇志写⼊本机事务⽇志；</p>\n</li>\n<li id=\"20220805101449-qxa4i0u\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">各参与者成功执⾏事务操作，同时将反馈以Ack响应形式发送给协调者，同事等待最终的Commit或Abort指令。</p>\n</li>\n</ol>\n<p updated=\"20220805101449\">　　<strong>中断事务</strong></p>\n<p updated=\"20220805101449\">　　加⼊任意⼀个参与者向协调者发送No响应，或者等待超时，协调者在没有得到所有参与者响应时，即可以中断事务:</p>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-v9xf5v6\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">发送中断请求。 协调者向所有参与者发送Abort请求；</p>\n</li>\n<li id=\"20220805101449-zswbx83\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">中断事务。⽆论是收到协调者的Abort请求，还是等待协调者请求过程中出现超时，参与者都会中断事务；</p>\n</li>\n</ol>\n<h3 id=\"阶段三-doCommit\">阶段三：doCommit</h3>\n<p updated=\"20220805101449\">　　在这个阶段，会真正的进⾏事务提交，同样存在两种可能。</p>\n<p updated=\"20220805101449\">　　<strong>执⾏提交</strong></p>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-hw88qkx\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">发送提交请求。假如协调者收到了所有参与者的Ack响应，那么将从预提交转换到提交状态，并向所有参与者，发送doCommit请求；</p>\n</li>\n<li id=\"20220805101449-f6jotkx\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">事务提交。参与者收到doCommit请求后，会正式执⾏事务提交操作，并在完成提交操作后释放占⽤资源；</p>\n</li>\n<li id=\"20220805101449-i4xbjm8\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">反馈事务提交结果。参与者将在完成事务提交后，向协调者发送Ack消息；</p>\n</li>\n<li id=\"20220805101449-2t3d5qm\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">完成事务。协调者接收到所有参与者的Ack消息后，完成事务。</p>\n</li>\n</ol>\n<p updated=\"20220805101449\">　　<strong>中断事务</strong></p>\n<p updated=\"20220805101449\">　　在该阶段，假设正常状态的协调者接收到任⼀个参与者发送的No响应，或在超时时间内，仍旧没收到反馈消息，就会中断事务：</p>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-2elvi6k\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">发送中断请求。协调者向所有的参与者发送abort请求；</p>\n</li>\n<li id=\"20220805101449-uy94asy\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">事务回滚。参与者收到abort请求后，会利⽤阶段⼆中的Undo消息执⾏事务回滚，并在完成回滚后释放占⽤资源；</p>\n</li>\n<li id=\"20220805101449-rie7ahy\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">反馈事务回滚结果。参与者在完成回滚后向协调者发送Ack消息；</p>\n</li>\n<li id=\"20220805101449-5nbz19p\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">中端事务。协调者接收到所有参与者反馈的Ack消息后，完成事务中断。</p>\n</li>\n</ol>\n<h2 id=\"2PC和3PC的区别\">2PC和3PC的区别</h2>\n<p updated=\"20220805101449\">　　3PC有效降低了2PC带来的参与者阻塞范围，并且能够在出现单点故障后继续达成⼀致；</p>\n<p updated=\"20220805101449\">　　但3PC带来了新的问题，在参与者收到preCommit消息后，如果⽹络出现分区，协调者和参与者⽆法进⾏后续的通信，这种情况下，参与者在等待超时后，依旧会执⾏事务提交，这样会导致数据的不⼀致。</p>\n<p updated=\"20220805101449\">　　三阶段提交协议在协调者和参与者中都引⼊ 超时机制，并且把两阶段提交协议的第⼀个阶段拆分成了两步：询问，然后再锁资源，最后真正提交。</p>\n<p updated=\"20220805101449\">　　<span class=\"img\"><img src=\"https://image.ztianzeng.com/uPic/image-20220421204125-ux86w8m.png\" alt=\"image-20220421204125-ux86w8m\" /></span></p>\n","articleNode":{"field":{"contentType":"topic","topic":"分布式解决方案"},"frontmatter":{"id":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现","title":"刚性事务的实现","date":"2022-04-23 18:09","absolute_path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现"},"htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"刚性事务的是通过XA模型来进行实现的，XA模型是X/Open组织提出来的分布式事务的实现标准。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"X/OPEN是⼀个组织.X/Open国际联盟有限公司是⼀个欧洲基⾦会，它的建⽴是为了向UNIX环境提供标准。它主要的⽬标是促进对UNIX语⾔、接⼝、⽹络和应⽤的开放式系统协议的制定。它还促进在不同的UNIX环境之间的应⽤程序的互操作性，以及⽀持对电⽓电⼦⼯程师协会（IEEE）对UNIX的可移植操作系统接⼝（POSIX）规范。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　XA模型主要使⽤了两段提交(2PC - Two-Phase-Commit)来保证分布式事务的完整性。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　在XA模型中，定义了三个角色，AP、TM、RM。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 AP: Application，应⽤程序。也就是业务层。哪些操作属于⼀个事务，就是AP定义的。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 TM: Transaction Manager，事务管理器。接收AP的事务请求，对全局事务进⾏管理，管理事务分⽀状态，协调RM的处理，通知RM哪些操作属于哪些全局事务以及事务分⽀等等。这个也是整个事务调度模型的核⼼部分。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 RM：Resource Manager，资源管理器。⼀般是数据库，也可以是其他的资源管理器，如消息队列(如JMS数据源)，⽂件系统等。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"img","properties":{"src":"https://www.shiyitopo.tech/uPic/adfns079.gif","alt":"Developing Applications with Oracle XA"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　XA则规范了TM与RM之间的通信接⼝，在TM与多个RM之间形成⼀个双向通信桥梁，从⽽在多个数据库资源下保证ACID四个特性。⽬前知名的数据库，如Oracle, DB2,mysql等，都是实现了XA接⼝的，都可以作为RM。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　XA是数据库的分布式事务，强⼀致性，在整个过程中，数据⼀张锁住状态，即从prepare到commit、rollback的整个过程中，TM⼀直把持折数据库的锁，如果有其他⼈要修改数据库的该条数据，就必须等待锁的释放，存在⻓事务⻛险。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　XA事务处理流程示意图如下："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"img","properties":{"src":"https://www.shiyitopo.tech/uPic/XA%E4%BA%8B%E5%8A%A1.png","alt":"XA事务"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"2PC(标准XA模型)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　2PC 将数据分为两个阶段进行处理:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　阶段⼀：提交事务请求"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　阶段⼆：执⾏事务提交;"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　如果阶段⼀超时或者出现异常，2PC的阶段⼆：中断事务"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"阶段⼀：提交事务请求"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"事务询问。协调者向所有参与者发送事务内容，询问是否可以执⾏提交操作，并开始等待各参与者进⾏响应"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"执⾏事务。各参与者节点，执⾏事务操作，并将Undo和Redo操作计⼊本机事务⽇志"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"各参与者向协调者反馈事务问询的响应。成功执⾏返回Yes，否则返回No"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"阶段⼆：执⾏事务提交"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　协调者在阶段⼆决定是否最终执⾏事务提交操作。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　这⼀阶段包含两种情形："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"事务提交"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　执⾏事务提交所有参与者Reply Yes，那么执⾏事务提交"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"发送提交请求。协调者向所有参与者发送Commit请求"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"事务提交。参与者收到Commit请求后，会正式执⾏事务提交操作，并在完成提交操作之后，释放在整个事务执⾏期间占⽤的资源"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"反馈事务提交结果。参与者在完成事务提交后，写协调者发送Ack消息确认"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"完成事务。协调者在收到所有参与者的Ack后，完成事务。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"img","properties":{"src":"https://image.ztianzeng.com/uPic/5wRmVD.jpg","alt":"5wRmVD"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"事务中断"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　当存在某⼀参与者向协调者发送No响应，或者等待超时。协调者只要⽆法收到所有参与者的Yes响应，就会中断事务。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"发送回滚请求。协调者向所有参与者发送Rollback请求"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"回滚。参与者收到请求后，利⽤本机Undo信息，执⾏Rollback操作。并在回滚结束后释放该事务所占⽤的系统资源"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"反馈回滚结果。参与者在完成回滚操作后，向协调者发送Ack消息"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"中断事务。协调者收到所有参与者的回滚Ack消息后，完成事务中断"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"img","properties":{"src":"https://image.ztianzeng.com/uPic/37WkXj.jpg","alt":"37WkXj"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"二阶段的优缺点"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　优点主要体现在实现原理简单；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　缺点⽐较多："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"性能问题"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"从流程上我们可以看得出，其最⼤缺点就在于它的执⾏过程中间，节点都处于阻塞状态。各个操作数据库的节点此时都占⽤着数据库资源，只有当"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"所有节点准备完毕，事务协调者才会通知进⾏全局提交，参与者进⾏本地事务提交后才会释放资源。这样的过程会⽐较漫⻓，对性能影响⽐较⼤。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"协调者单点故障问题"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"事务协调者是整个XA模型的核⼼，⼀旦事务协调者节点挂掉，会导致参与者收不到提交或回滚的通知，从⽽导致参与者节点始终处于事务⽆法完成"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"的中间状态。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"丢失消息导致的数据不⼀致问题"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在第⼆个阶段，如果发⽣局部⽹络问题，⼀部分事务参与者收到了提交消息，另⼀部分事务参与者没收到提交消息，那么就会导致节点间数据的不⼀致问题。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"3PC"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　针对2PC的缺点，研究者提出了3PC，即Three-Phase Commit。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　作为2PC的改进版，3PC将原有的两阶段过程，重新划分为CanCommit、PreCommit和do Commit三个阶段。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"img","properties":{"src":"https://image.ztianzeng.com/uPic/fxQv2n.jpg","alt":"fxQv2n"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"阶段⼀：CanCommit"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"事务询问。协调者向所有参与者发送包含事务内容的canCommit的请求，询问是否可以执⾏事务提交，并等待应答；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"各参与者反馈事务询问。正常情况下，如果参与者认为可以顺利执⾏事务，则返回Yes，否则返回No。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"阶段⼆：PreCommit"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　在本阶段，协调者会根据上⼀阶段的反馈情况来决定是否可以执⾏事务的PreCommit操作"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　有以下两种可能：执⾏事务预提交"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"发送预提交请求。协调者向所有节点发出PreCommit请求，并进⼊prepared阶段；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"事务预提交。参与者收到PreCommit请求后，会执⾏事务操作，并将Undo和Redo⽇志写⼊本机事务⽇志；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"各参与者成功执⾏事务操作，同时将反馈以Ack响应形式发送给协调者，同事等待最终的Commit或Abort指令。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"中断事务"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　加⼊任意⼀个参与者向协调者发送No响应，或者等待超时，协调者在没有得到所有参与者响应时，即可以中断事务:"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"发送中断请求。 协调者向所有参与者发送Abort请求；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"中断事务。⽆论是收到协调者的Abort请求，还是等待协调者请求过程中出现超时，参与者都会中断事务；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"阶段三：doCommit"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　在这个阶段，会真正的进⾏事务提交，同样存在两种可能。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"执⾏提交"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"发送提交请求。假如协调者收到了所有参与者的Ack响应，那么将从预提交转换到提交状态，并向所有参与者，发送doCommit请求；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"事务提交。参与者收到doCommit请求后，会正式执⾏事务提交操作，并在完成提交操作后释放占⽤资源；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"反馈事务提交结果。参与者将在完成事务提交后，向协调者发送Ack消息；"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"完成事务。协调者接收到所有参与者的Ack消息后，完成事务。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"中断事务"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　在该阶段，假设正常状态的协调者接收到任⼀个参与者发送的No响应，或在超时时间内，仍旧没收到反馈消息，就会中断事务："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"发送中断请求。协调者向所有的参与者发送abort请求；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"事务回滚。参与者收到abort请求后，会利⽤阶段⼆中的Undo消息执⾏事务回滚，并在完成回滚后释放占⽤资源；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"反馈事务回滚结果。参与者在完成回滚后向协调者发送Ack消息；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"中端事务。协调者接收到所有参与者反馈的Ack消息后，完成事务中断。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"2PC和3PC的区别"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　3PC有效降低了2PC带来的参与者阻塞范围，并且能够在出现单点故障后继续达成⼀致；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　但3PC带来了新的问题，在参与者收到preCommit消息后，如果⽹络出现分区，协调者和参与者⽆法进⾏后续的通信，这种情况下，参与者在等待超时后，依旧会执⾏事务提交，这样会导致数据的不⼀致。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　三阶段提交协议在协调者和参与者中都引⼊ 超时机制，并且把两阶段提交协议的第⼀个阶段拆分成了两步：询问，然后再锁资源，最后真正提交。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"},{"type":"element","tagName":"img","properties":{"src":"https://image.ztianzeng.com/uPic/image-20220421204125-ux86w8m.png","alt":"image-20220421204125-ux86w8m"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"style","properties":{"className":["grvsc-styles"]},"children":[{"type":"text","value":"\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n"}]}],"data":{"quirksMode":false}},"html":"<p updated=\"20220805101449\">　　刚性事务的是通过XA模型来进行实现的，XA模型是X/Open组织提出来的分布式事务的实现标准。</p>\n<blockquote updated=\"20220805101449\">\n<p updated=\"20220805101449\">X/OPEN是⼀个组织.X/Open国际联盟有限公司是⼀个欧洲基⾦会，它的建⽴是为了向UNIX环境提供标准。它主要的⽬标是促进对UNIX语⾔、接⼝、⽹络和应⽤的开放式系统协议的制定。它还促进在不同的UNIX环境之间的应⽤程序的互操作性，以及⽀持对电⽓电⼦⼯程师协会（IEEE）对UNIX的可移植操作系统接⼝（POSIX）规范。</p>\n</blockquote>\n<p updated=\"20220805101449\">　　XA模型主要使⽤了两段提交(2PC - Two-Phase-Commit)来保证分布式事务的完整性。</p>\n<p updated=\"20220805101449\">　　在XA模型中，定义了三个角色，AP、TM、RM。</p>\n<p updated=\"20220805101449\">　　 AP: Application，应⽤程序。也就是业务层。哪些操作属于⼀个事务，就是AP定义的。</p>\n<p updated=\"20220805101449\">　　 TM: Transaction Manager，事务管理器。接收AP的事务请求，对全局事务进⾏管理，管理事务分⽀状态，协调RM的处理，通知RM哪些操作属于哪些全局事务以及事务分⽀等等。这个也是整个事务调度模型的核⼼部分。</p>\n<p updated=\"20220805101449\">　　 RM：Resource Manager，资源管理器。⼀般是数据库，也可以是其他的资源管理器，如消息队列(如JMS数据源)，⽂件系统等。</p>\n<p updated=\"20220805101449\">　　<span class=\"img\"><img src=\"https://www.shiyitopo.tech/uPic/adfns079.gif\" alt=\"Developing Applications with Oracle XA\" /></span></p>\n<p updated=\"20220805101449\">　　XA则规范了TM与RM之间的通信接⼝，在TM与多个RM之间形成⼀个双向通信桥梁，从⽽在多个数据库资源下保证ACID四个特性。⽬前知名的数据库，如Oracle, DB2,mysql等，都是实现了XA接⼝的，都可以作为RM。</p>\n<p updated=\"20220805101449\">　　XA是数据库的分布式事务，强⼀致性，在整个过程中，数据⼀张锁住状态，即从prepare到commit、rollback的整个过程中，TM⼀直把持折数据库的锁，如果有其他⼈要修改数据库的该条数据，就必须等待锁的释放，存在⻓事务⻛险。</p>\n<p updated=\"20220805101449\">　　XA事务处理流程示意图如下：</p>\n<p updated=\"20220805101449\">　　<span class=\"img\"><img src=\"https://www.shiyitopo.tech/uPic/XA%E4%BA%8B%E5%8A%A1.png\" alt=\"XA事务\" /></span></p>\n<h2 id=\"2PC-标准XA模型-\">2PC(标准XA模型)</h2>\n<p updated=\"20220805101449\">　　2PC 将数据分为两个阶段进行处理:</p>\n<p updated=\"20220805101449\">　　阶段⼀：提交事务请求</p>\n<p updated=\"20220805101449\">　　阶段⼆：执⾏事务提交;</p>\n<p updated=\"20220805101449\">　　如果阶段⼀超时或者出现异常，2PC的阶段⼆：中断事务</p>\n<h3 id=\"阶段--提交事务请求\">阶段⼀：提交事务请求</h3>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-xmlmrbq\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">事务询问。协调者向所有参与者发送事务内容，询问是否可以执⾏提交操作，并开始等待各参与者进⾏响应</p>\n</li>\n<li id=\"20220805101449-qnv5uo8\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">执⾏事务。各参与者节点，执⾏事务操作，并将Undo和Redo操作计⼊本机事务⽇志</p>\n</li>\n<li id=\"20220805101449-qn8qwkn\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">各参与者向协调者反馈事务问询的响应。成功执⾏返回Yes，否则返回No</p>\n</li>\n</ol>\n<h3 id=\"阶段--执-事务提交\">阶段⼆：执⾏事务提交</h3>\n<p updated=\"20220805101449\">　　协调者在阶段⼆决定是否最终执⾏事务提交操作。</p>\n<p updated=\"20220805101449\">　　这⼀阶段包含两种情形：</p>\n<p updated=\"20220805101449\">　　<strong>事务提交</strong></p>\n<p updated=\"20220805101449\">　　执⾏事务提交所有参与者Reply Yes，那么执⾏事务提交</p>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-i88ylbl\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">发送提交请求。协调者向所有参与者发送Commit请求</p>\n</li>\n<li id=\"20220805101449-ps5wemv\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">事务提交。参与者收到Commit请求后，会正式执⾏事务提交操作，并在完成提交操作之后，释放在整个事务执⾏期间占⽤的资源</p>\n</li>\n<li id=\"20220805101449-qqdbjf9\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">反馈事务提交结果。参与者在完成事务提交后，写协调者发送Ack消息确认</p>\n</li>\n<li id=\"20220805101449-566vn19\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">完成事务。协调者在收到所有参与者的Ack后，完成事务。</p>\n</li>\n</ol>\n<p updated=\"20220805101449\">　　<span class=\"img\"><img src=\"https://image.ztianzeng.com/uPic/5wRmVD.jpg\" alt=\"5wRmVD\" /></span></p>\n<p updated=\"20220805101449\">　　<strong>事务中断</strong></p>\n<p updated=\"20220805101449\">　　当存在某⼀参与者向协调者发送No响应，或者等待超时。协调者只要⽆法收到所有参与者的Yes响应，就会中断事务。</p>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-qf3f548\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">发送回滚请求。协调者向所有参与者发送Rollback请求</p>\n</li>\n<li id=\"20220805101449-71x7o3s\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">回滚。参与者收到请求后，利⽤本机Undo信息，执⾏Rollback操作。并在回滚结束后释放该事务所占⽤的系统资源</p>\n</li>\n<li id=\"20220805101449-bd7mgbf\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">反馈回滚结果。参与者在完成回滚操作后，向协调者发送Ack消息</p>\n</li>\n<li id=\"20220805101449-m81z45g\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">中断事务。协调者收到所有参与者的回滚Ack消息后，完成事务中断</p>\n</li>\n</ol>\n<p updated=\"20220805101449\">　　<span class=\"img\"><img src=\"https://image.ztianzeng.com/uPic/37WkXj.jpg\" alt=\"37WkXj\" /></span></p>\n<h3 id=\"二阶段的优缺点\">二阶段的优缺点</h3>\n<p updated=\"20220805101449\">　　优点主要体现在实现原理简单；</p>\n<p updated=\"20220805101449\">　　缺点⽐较多：</p>\n<ul updated=\"20220805101449\">\n<li id=\"20220805101449-3ilgg1m\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">性能问题</p>\n<p updated=\"20220805101449\">从流程上我们可以看得出，其最⼤缺点就在于它的执⾏过程中间，节点都处于阻塞状态。各个操作数据库的节点此时都占⽤着数据库资源，只有当</p>\n<p updated=\"20220805101449\">所有节点准备完毕，事务协调者才会通知进⾏全局提交，参与者进⾏本地事务提交后才会释放资源。这样的过程会⽐较漫⻓，对性能影响⽐较⼤。</p>\n</li>\n<li id=\"20220805101449-5jq43yg\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">协调者单点故障问题</p>\n<p updated=\"20220805101449\">事务协调者是整个XA模型的核⼼，⼀旦事务协调者节点挂掉，会导致参与者收不到提交或回滚的通知，从⽽导致参与者节点始终处于事务⽆法完成</p>\n<p updated=\"20220805101449\">的中间状态。</p>\n</li>\n<li id=\"20220805101449-y7cqohr\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">丢失消息导致的数据不⼀致问题</p>\n<p updated=\"20220805101449\">在第⼆个阶段，如果发⽣局部⽹络问题，⼀部分事务参与者收到了提交消息，另⼀部分事务参与者没收到提交消息，那么就会导致节点间数据的不⼀致问题。</p>\n</li>\n</ul>\n<h2 id=\"3PC\">3PC</h2>\n<p updated=\"20220805101449\">　　针对2PC的缺点，研究者提出了3PC，即Three-Phase Commit。</p>\n<p updated=\"20220805101449\">　　作为2PC的改进版，3PC将原有的两阶段过程，重新划分为CanCommit、PreCommit和do Commit三个阶段。</p>\n<p updated=\"20220805101449\">　　<span class=\"img\"><img src=\"https://image.ztianzeng.com/uPic/fxQv2n.jpg\" alt=\"fxQv2n\" /></span></p>\n<h3 id=\"阶段--CanCommit\">阶段⼀：CanCommit</h3>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-q5r7g0e\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">事务询问。协调者向所有参与者发送包含事务内容的canCommit的请求，询问是否可以执⾏事务提交，并等待应答；</p>\n</li>\n<li id=\"20220805101449-ppbgw55\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">各参与者反馈事务询问。正常情况下，如果参与者认为可以顺利执⾏事务，则返回Yes，否则返回No。</p>\n</li>\n</ol>\n<h3 id=\"阶段--PreCommit\">阶段⼆：PreCommit</h3>\n<p updated=\"20220805101449\">　　在本阶段，协调者会根据上⼀阶段的反馈情况来决定是否可以执⾏事务的PreCommit操作</p>\n<p updated=\"20220805101449\">　　有以下两种可能：执⾏事务预提交</p>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-xfsyexi\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">发送预提交请求。协调者向所有节点发出PreCommit请求，并进⼊prepared阶段；</p>\n</li>\n<li id=\"20220805101449-meoewhk\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">事务预提交。参与者收到PreCommit请求后，会执⾏事务操作，并将Undo和Redo⽇志写⼊本机事务⽇志；</p>\n</li>\n<li id=\"20220805101449-qxa4i0u\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">各参与者成功执⾏事务操作，同时将反馈以Ack响应形式发送给协调者，同事等待最终的Commit或Abort指令。</p>\n</li>\n</ol>\n<p updated=\"20220805101449\">　　<strong>中断事务</strong></p>\n<p updated=\"20220805101449\">　　加⼊任意⼀个参与者向协调者发送No响应，或者等待超时，协调者在没有得到所有参与者响应时，即可以中断事务:</p>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-v9xf5v6\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">发送中断请求。 协调者向所有参与者发送Abort请求；</p>\n</li>\n<li id=\"20220805101449-zswbx83\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">中断事务。⽆论是收到协调者的Abort请求，还是等待协调者请求过程中出现超时，参与者都会中断事务；</p>\n</li>\n</ol>\n<h3 id=\"阶段三-doCommit\">阶段三：doCommit</h3>\n<p updated=\"20220805101449\">　　在这个阶段，会真正的进⾏事务提交，同样存在两种可能。</p>\n<p updated=\"20220805101449\">　　<strong>执⾏提交</strong></p>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-hw88qkx\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">发送提交请求。假如协调者收到了所有参与者的Ack响应，那么将从预提交转换到提交状态，并向所有参与者，发送doCommit请求；</p>\n</li>\n<li id=\"20220805101449-f6jotkx\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">事务提交。参与者收到doCommit请求后，会正式执⾏事务提交操作，并在完成提交操作后释放占⽤资源；</p>\n</li>\n<li id=\"20220805101449-i4xbjm8\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">反馈事务提交结果。参与者将在完成事务提交后，向协调者发送Ack消息；</p>\n</li>\n<li id=\"20220805101449-2t3d5qm\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">完成事务。协调者接收到所有参与者的Ack消息后，完成事务。</p>\n</li>\n</ol>\n<p updated=\"20220805101449\">　　<strong>中断事务</strong></p>\n<p updated=\"20220805101449\">　　在该阶段，假设正常状态的协调者接收到任⼀个参与者发送的No响应，或在超时时间内，仍旧没收到反馈消息，就会中断事务：</p>\n<ol updated=\"20220805101449\">\n<li id=\"20220805101449-2elvi6k\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">发送中断请求。协调者向所有的参与者发送abort请求；</p>\n</li>\n<li id=\"20220805101449-uy94asy\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">事务回滚。参与者收到abort请求后，会利⽤阶段⼆中的Undo消息执⾏事务回滚，并在完成回滚后释放占⽤资源；</p>\n</li>\n<li id=\"20220805101449-rie7ahy\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">反馈事务回滚结果。参与者在完成回滚后向协调者发送Ack消息；</p>\n</li>\n<li id=\"20220805101449-5nbz19p\" updated=\"20220805101449\">\n<p updated=\"20220805101449\">中端事务。协调者接收到所有参与者反馈的Ack消息后，完成事务中断。</p>\n</li>\n</ol>\n<h2 id=\"2PC和3PC的区别\">2PC和3PC的区别</h2>\n<p updated=\"20220805101449\">　　3PC有效降低了2PC带来的参与者阻塞范围，并且能够在出现单点故障后继续达成⼀致；</p>\n<p updated=\"20220805101449\">　　但3PC带来了新的问题，在参与者收到preCommit消息后，如果⽹络出现分区，协调者和参与者⽆法进⾏后续的通信，这种情况下，参与者在等待超时后，依旧会执⾏事务提交，这样会导致数据的不⼀致。</p>\n<p updated=\"20220805101449\">　　三阶段提交协议在协调者和参与者中都引⼊ 超时机制，并且把两阶段提交协议的第⼀个阶段拆分成了两步：询问，然后再锁资源，最后真正提交。</p>\n<p updated=\"20220805101449\">　　<span class=\"img\"><img src=\"https://image.ztianzeng.com/uPic/image-20220421204125-ux86w8m.png\" alt=\"image-20220421204125-ux86w8m\" /></span></p>\n","headings":[{"depth":2,"value":"2PC(标准XA模型)"},{"depth":3,"value":"阶段⼀：提交事务请求"},{"depth":3,"value":"阶段⼆：执⾏事务提交"},{"depth":3,"value":"二阶段的优缺点"},{"depth":2,"value":"3PC"},{"depth":3,"value":"阶段⼀：CanCommit"},{"depth":3,"value":"阶段⼆：PreCommit"},{"depth":3,"value":"阶段三：doCommit"},{"depth":2,"value":"2PC和3PC的区别"}],"path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现"},"tree":{"title":"分布式解决方案","id":"20220421194022-kfiadau","parentId":"","href":"/topic/分布式解决方案","path":"/topic/分布式解决方案","children":[{"title":"分布式理论","id":"20220429135957-770gm7n","type":"d","href":"/topic/分布式解决方案/分布式理论","parentId":"","path":"/topic/分布式解决方案/分布式理论","parentPath":"/topic/分布式解决方案","sort":1,"children":[{"title":"分布式特性","id":"20220429140350-6b6azr1","type":"h","href":"/topic/分布式解决方案/分布式理论#分布式特性","parentId":"20220429135957-770gm7n","path":"/topic/分布式解决方案/分布式理论","parentPath":"/topic/分布式解决方案","children":[],"level":2},{"title":"分布式分类","id":"20220429140406-78xx1c9","type":"h","href":"/topic/分布式解决方案/分布式理论#分布式分类","parentId":"20220429135957-770gm7n","path":"/topic/分布式解决方案/分布式理论","parentPath":"/topic/分布式解决方案","children":[],"level":2},{"title":"分布式面临的问题","id":"20220429140249-e8i2v67","type":"h","href":"/topic/分布式解决方案/分布式理论#分布式面临的问题","parentId":"20220429135957-770gm7n","path":"/topic/分布式解决方案/分布式理论","parentPath":"/topic/分布式解决方案","children":[],"level":2},{"title":"三驾马车","id":"20220504221043-ndzz22d","type":"d","href":"/topic/分布式解决方案/分布式理论/三驾马车","parentId":"","path":"/topic/分布式解决方案/分布式理论/三驾马车","parentPath":"/topic/分布式解决方案/分布式理论","sort":0,"children":[{"title":"The Google File System","id":"20220505103842-h8stgqv","type":"d","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentId":"","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","sort":1,"children":[{"title":"摘要","id":"20220505152643-eyjn600","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#摘要","parentId":"20220505103842-h8stgqv","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"1. 引言","id":"20220505152904-rl9r12t","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#1. 引言","parentId":"20220505103842-h8stgqv","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"2. 设计概述","id":"20220505153057-6we6q9e","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#2. 设计概述","parentId":"20220505103842-h8stgqv","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"2.1 假设","id":"20220505153214-w97a5eq","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#2.1 假设","parentId":"20220505153057-6we6q9e","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"2.2 接口","id":"20220505153342-qrfyhd0","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#2.2 接口","parentId":"20220505153057-6we6q9e","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"2.3 架构","id":"20220505153427-yczpia1","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#2.3 架构","parentId":"20220505153057-6we6q9e","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"2.4 单master","id":"20220505153634-wr9cy7v","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#2.4 单master","parentId":"20220505153057-6we6q9e","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"2.5 chunk大小","id":"20220505153645-9j42aj9","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#2.5 chunk大小","parentId":"20220505153057-6we6q9e","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"2.6 元数据","id":"20220505153729-j7mr5sy","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#2.6 元数据","parentId":"20220505153057-6we6q9e","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"2.6.1 内存数据结构","id":"20220505153748-93wb5sv","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#2.6.1 内存数据结构","parentId":"20220505153729-j7mr5sy","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"2.6.2 chunk位置","id":"20220505153811-hrhktlx","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#2.6.2 chunk位置","parentId":"20220505153729-j7mr5sy","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"2.6.3 操作日志","id":"20220505161734-xlmd7en","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#2.6.3 操作日志","parentId":"20220505153729-j7mr5sy","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6}],"level":5},{"title":"2.7 一致性模型","id":"20220505161748-vaevsko","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#2.7 一致性模型","parentId":"20220505153057-6we6q9e","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"2.7.1 GFS提供的保证","id":"20220505161839-noqow5b","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#2.7.1 GFS提供的保证","parentId":"20220505161748-vaevsko","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"2.7.2 对应用程序的影响","id":"20220505162841-92zpdr4","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#2.7.2 对应用程序的影响","parentId":"20220505161748-vaevsko","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6}],"level":5},{"title":"3. 系统交互","id":"20220505163026-ti0u1cw","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#3. 系统交互","parentId":"20220505153057-6we6q9e","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"3.1 租约和变更顺序","id":"20220505163040-8lpawj0","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#3.1 租约和变更顺序","parentId":"20220505163026-ti0u1cw","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6}],"level":5},{"title":"3.2 数据流","id":"20220505163142-diazjgy","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#3.2 数据流","parentId":"20220505153057-6we6q9e","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"3.3 原子性record append","id":"20220505163435-8p1rdvc","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#3.3 原子性record append","parentId":"20220505153057-6we6q9e","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"3.4 快照","id":"20220505163529-7ewyign","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#3.4 快照","parentId":"20220505153057-6we6q9e","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5}],"level":4},{"title":"4. master操作","id":"20220505163645-gowcg06","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#4. master操作","parentId":"20220505103842-h8stgqv","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"4.1 命名空间管理与锁","id":"20220505163711-92uz3lb","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#4.1 命名空间管理与锁","parentId":"20220505163645-gowcg06","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"4.2 副本分配","id":"20220505164434-f0me82e","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#4.2 副本分配","parentId":"20220505163645-gowcg06","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"4.3 chunk创建、重做副本、重均衡","id":"20220505164453-s8eah39","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#4.3 chunk创建、重做副本、重均衡","parentId":"20220505163645-gowcg06","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"4.4 垃圾回收","id":"20220505164538-dlh214d","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#4.4 垃圾回收","parentId":"20220505163645-gowcg06","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"4.4.1 垃圾回收机制","id":"20220505164549-s9k32j3","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#4.4.1 垃圾回收机制","parentId":"20220505164538-dlh214d","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"4.4.2 关于垃圾回收的讨论","id":"20220505164604-fp0gkjf","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#4.4.2 关于垃圾回收的讨论","parentId":"20220505164538-dlh214d","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6}],"level":5},{"title":"4.5 陈旧副本检测","id":"20220505164624-4408wed","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#4.5 陈旧副本检测","parentId":"20220505163645-gowcg06","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5}],"level":4},{"title":"5. 错误容忍与诊断","id":"20220505164640-h5ye4s1","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#5. 错误容忍与诊断","parentId":"20220505103842-h8stgqv","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"5.1 高可用","id":"20220505164708-jcnd7d4","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#5.1 高可用","parentId":"20220505164640-h5ye4s1","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"5.1.1 快速恢复","id":"20220505164724-ouwncwl","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#5.1.1 快速恢复","parentId":"20220505164708-jcnd7d4","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"5.1.2 chunk副本","id":"20220505164753-mjqssd7","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#5.1.2 chunk副本","parentId":"20220505164708-jcnd7d4","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"5.1.3 master副本","id":"20220505164839-qlp5rqu","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#5.1.3 master副本","parentId":"20220505164708-jcnd7d4","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6}],"level":5},{"title":"5.2 数据完整性","id":"20220505164854-3knwav7","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#5.2 数据完整性","parentId":"20220505164640-h5ye4s1","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"5.3 诊断工具","id":"20220505164921-ev1pe72","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#5.3 诊断工具","parentId":"20220505164640-h5ye4s1","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5}],"level":4},{"title":"6. 性能测试","id":"20220505165140-trykuy8","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6. 性能测试","parentId":"20220505103842-h8stgqv","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"6.1 小批量benchmark","id":"20220505165202-gik63pp","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.1 小批量benchmark","parentId":"20220505165140-trykuy8","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"6.1.1 read操作","id":"20220505165851-77tf82y","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.1.1 read操作","parentId":"20220505165202-gik63pp","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"6.1.2 write操作","id":"20220505165929-ffk2ljm","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.1.2 write操作","parentId":"20220505165202-gik63pp","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"6.1.3 record append操作","id":"20220505170023-obbtkp5","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.1.3 record append操作","parentId":"20220505165202-gik63pp","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6}],"level":5},{"title":"6.2 现实中的集群","id":"20220505170044-clials5","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.2 现实中的集群","parentId":"20220505165140-trykuy8","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"6.2.1 存储","id":"20220505170057-d7b2dlb","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.2.1 存储","parentId":"20220505170044-clials5","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"6.2.2 元数据","id":"20220505170719-44kebtz","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.2.2 元数据","parentId":"20220505170044-clials5","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"6.2.3 读写速率","id":"20220505170734-2akl3y5","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.2.3 读写速率","parentId":"20220505170044-clials5","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"6.2.4 master的负载","id":"20220505171006-n84v4np","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.2.4 master的负载","parentId":"20220505170044-clials5","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"6.2.5 恢复时间","id":"20220505171023-dg0klta","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.2.5 恢复时间","parentId":"20220505170044-clials5","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6}],"level":5},{"title":"6.3 负载分解","id":"20220505171050-basmhn2","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.3 负载分解","parentId":"20220505165140-trykuy8","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"6.3.1 方法和注意事项","id":"20220505171105-6nknprd","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.3.1 方法和注意事项","parentId":"20220505171050-basmhn2","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"6.3.2 chunkserver的负载","id":"20220505171126-1zjmvl7","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.3.2 chunkserver的负载","parentId":"20220505171050-basmhn2","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"6.3.3 append vs write","id":"20220505171730-8fgjqne","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.3.3 append vs write","parentId":"20220505171050-basmhn2","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"6.3.4 master的负载","id":"20220505172435-d8y3uer","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#6.3.4 master的负载","parentId":"20220505171050-basmhn2","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6}],"level":5}],"level":4},{"title":"7. 开发经历","id":"20220505172855-ihmv36c","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#7. 开发经历","parentId":"20220505103842-h8stgqv","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"8. 相关工作","id":"20220505173054-kl64sam","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#8. 相关工作","parentId":"20220505103842-h8stgqv","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"9. 结论","id":"20220505173109-2jh06vo","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#9. 结论","parentId":"20220505103842-h8stgqv","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"致谢","id":"20220505173109-hcnaqtk","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#致谢","parentId":"20220505103842-h8stgqv","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"参考文献","id":"20220505173132-jfdphbx","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System#参考文献","parentId":"20220505103842-h8stgqv","path":"/topic/分布式解决方案/分布式理论/三驾马车/The Google File System","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4}],"level":3},{"title":"BigTable中文翻译","id":"20220516160557-fxzscu9","type":"d","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentId":"","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","sort":2,"children":[{"title":"1 摘要","id":"20220516160557-umz7qne","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#1 摘要","parentId":"20220516160557-fxzscu9","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"2 介绍","id":"20220516163425-yd815aj","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#2 介绍","parentId":"20220516160557-fxzscu9","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"3 数据模型","id":"20220516164133-iriclv2","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#3 数据模型","parentId":"20220516160557-fxzscu9","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"3.1 行","id":"20220516165146-4hgxip8","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#3.1 行","parentId":"20220516164133-iriclv2","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"3.2 列族","id":"20220516170835-vl6rjd2","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#3.2 列族","parentId":"20220516164133-iriclv2","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"3.3 时间戳","id":"20220516170930-mx82b65","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#3.3 时间戳","parentId":"20220516164133-iriclv2","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5}],"level":4},{"title":"4 API","id":"20220516171003-9ekohjf","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#4 API","parentId":"20220516160557-fxzscu9","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"5 BigTable 构件","id":"20220516171243-p6llvpp","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#5 BigTable 构件","parentId":"20220516160557-fxzscu9","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"6 介绍","id":"20220516171430-ie9o4og","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#6 介绍","parentId":"20220516160557-fxzscu9","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"6.1 Tablet 的位置","id":"20220516171900-ykrafld","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#6.1 Tablet 的位置","parentId":"20220516171430-ie9o4og","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"6.2 Tablet 分配","id":"20220516174913-32fi063","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#6.2 Tablet 分配","parentId":"20220516171430-ie9o4og","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"6.3 Tablet服务","id":"20220516190925-hqcobsg","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#6.3 Tablet服务","parentId":"20220516171430-ie9o4og","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"6.4 空间收缩","id":"20220516191452-8mjvmm3","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#6.4 空间收缩","parentId":"20220516171430-ie9o4og","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5}],"level":4},{"title":"7 优化","id":"20220516191623-d3wj1oi","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#7 优化","parentId":"20220516160557-fxzscu9","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"7.1 局部性群组","id":"20220516191656-pk7dxu1","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#7.1 局部性群组","parentId":"20220516191623-d3wj1oi","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"7.2 压缩","id":"20220516191901-lhpmx4v","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#7.2 压缩","parentId":"20220516191623-d3wj1oi","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"7.3 通过缓存提高读操作的性能","id":"20220516192034-f3othrg","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#7.3 通过缓存提高读操作的性能","parentId":"20220516191623-d3wj1oi","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"7.3.1 Bloom 过滤器","id":"20220516192205-3iumls8","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#7.3.1 Bloom 过滤器","parentId":"20220516192034-f3othrg","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"7.3.2 Commit 日志的实现","id":"20220516192429-ey2mdt4","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#7.3.2 Commit 日志的实现","parentId":"20220516192034-f3othrg","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"7.3.3 Tablet 恢复提速","id":"20220516192728-nf77i1p","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#7.3.3 Tablet 恢复提速","parentId":"20220516192034-f3othrg","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"7.3.4 利用不变性","id":"20220516192754-4vievj9","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#7.3.4 利用不变性","parentId":"20220516192034-f3othrg","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6}],"level":5}],"level":4},{"title":"8 性能评估","id":"20220516192913-3gxq79q","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#8 性能评估","parentId":"20220516160557-fxzscu9","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"8.1 单个 Tablet 服务器的性能","id":"20220516193231-nhnixh9","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#8.1 单个 Tablet 服务器的性能","parentId":"20220516192913-3gxq79q","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"8.2 性能提升","id":"20220516193308-x93x1b9","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#8.2 性能提升","parentId":"20220516192913-3gxq79q","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5}],"level":4},{"title":"9 实际应用","id":"20220516193444-d1w8t29","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#9 实际应用","parentId":"20220516160557-fxzscu9","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"9.1 Google Analytics","id":"20220516193603-m38lvlw","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#9.1 Google Analytics","parentId":"20220516193444-d1w8t29","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"9.2 Google Earth","id":"20220516193726-mtgboqj","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#9.2 Google Earth","parentId":"20220516193444-d1w8t29","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"9.3 个性化查询","id":"20220516193837-b111cn5","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#9.3 个性化查询","parentId":"20220516193444-d1w8t29","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5}],"level":4},{"title":"10 经验教训","id":"20220516193901-qaxm1vk","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#10 经验教训","parentId":"20220516160557-fxzscu9","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"11 相关工作","id":"20220516194041-hpvjwcj","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#11 相关工作","parentId":"20220516160557-fxzscu9","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"12 结论","id":"20220516194122-qq6envs","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译#12 结论","parentId":"20220516160557-fxzscu9","path":"/topic/分布式解决方案/分布式理论/三驾马车/BigTable中文翻译","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4}],"level":3},{"title":"MapReduce","id":"20220504221049-bsx93ro","type":"d","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentId":"","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","sort":3,"children":[{"title":"摘要","id":"20220505103937-lcjd3e9","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#摘要","parentId":"20220504221049-bsx93ro","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"引言","id":"20220505105240-h98eljj","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#引言","parentId":"20220504221049-bsx93ro","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"编程模型","id":"20220505105313-qdf9dwb","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#编程模型","parentId":"20220504221049-bsx93ro","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"示例","id":"20220505105345-xb9fho4","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#示例","parentId":"20220505105313-qdf9dwb","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"类型","id":"20220505105409-cotrg62","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#类型","parentId":"20220505105313-qdf9dwb","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"更多示例","id":"20220505105510-rrmkrqj","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#更多示例","parentId":"20220505105313-qdf9dwb","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5}],"level":4},{"title":"实现","id":"20220505105527-grlt532","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#实现","parentId":"20220504221049-bsx93ro","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"执行概览","id":"20220505105617-4qkjy1k","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#执行概览","parentId":"20220505105527-grlt532","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"master数据结构","id":"20220505105655-2hwm0mm","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#master数据结构","parentId":"20220505105527-grlt532","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"容错","id":"20220505105705-9rdwqcc","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#容错","parentId":"20220505105527-grlt532","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"worker故障","id":"20220505105719-3zo4wh1","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#worker故障","parentId":"20220505105705-9rdwqcc","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"master故障","id":"20220505105744-cbyzz77","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#master故障","parentId":"20220505105705-9rdwqcc","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6},{"title":"故障出现时的语义","id":"20220505105808-fuywl8f","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#故障出现时的语义","parentId":"20220505105705-9rdwqcc","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":6}],"level":5},{"title":"位置分配","id":"20220505130944-of8p0mr","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#位置分配","parentId":"20220505105527-grlt532","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"任务粒度","id":"20220505130958-lr3jevt","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#任务粒度","parentId":"20220505105527-grlt532","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"任务副本","id":"20220505131009-br4h0pt","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#任务副本","parentId":"20220505105527-grlt532","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5}],"level":4},{"title":"改进","id":"20220505131032-odfu8ql","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#改进","parentId":"20220504221049-bsx93ro","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"分区函数","id":"20220505131041-2qvplqj","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#分区函数","parentId":"20220505131032-odfu8ql","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"有序性保证","id":"20220505131049-tiorqxo","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#有序性保证","parentId":"20220505131032-odfu8ql","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"合并函数","id":"20220505131059-wsjue5k","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#合并函数","parentId":"20220505131032-odfu8ql","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"输入输出类型","id":"20220505131107-pxvub0b","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#输入输出类型","parentId":"20220505131032-odfu8ql","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"附属输出","id":"20220505131114-3yduwfi","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#附属输出","parentId":"20220505131032-odfu8ql","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"跳过损坏的记录","id":"20220505131125-zonvz4w","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#跳过损坏的记录","parentId":"20220505131032-odfu8ql","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"本地执行","id":"20220505131135-42q9tl4","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#本地执行","parentId":"20220505131032-odfu8ql","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"状态信息","id":"20220505131142-vpljqdj","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#状态信息","parentId":"20220505131032-odfu8ql","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"计数器","id":"20220505131209-f81652i","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#计数器","parentId":"20220505131032-odfu8ql","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5}],"level":4},{"title":"性能","id":"20220505131220-bm5qhxg","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#性能","parentId":"20220504221049-bsx93ro","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"集群配置","id":"20220505131228-j20o361","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#集群配置","parentId":"20220505131220-bm5qhxg","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"grep","id":"20220505131240-lt3z5n1","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#grep","parentId":"20220505131220-bm5qhxg","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"sort","id":"20220505131405-ooockqn","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#sort","parentId":"20220505131220-bm5qhxg","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"任务副本的影响","id":"20220505131601-vd5n8aj","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#任务副本的影响","parentId":"20220505131220-bm5qhxg","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5},{"title":"机器故障","id":"20220505131621-npqjp4d","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#机器故障","parentId":"20220505131220-bm5qhxg","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5}],"level":4},{"title":"研发经历","id":"20220505131629-tx69y5r","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#研发经历","parentId":"20220504221049-bsx93ro","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[{"title":"大规模索引","id":"20220505131730-fgwb5p0","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#大规模索引","parentId":"20220505131629-tx69y5r","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":5}],"level":4},{"title":"相关工作","id":"20220505131750-fua8vue","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#相关工作","parentId":"20220504221049-bsx93ro","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"结论","id":"20220505131810-mv3x4nv","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#结论","parentId":"20220504221049-bsx93ro","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4},{"title":"致谢","id":"20220505131810-zu3sj0f","type":"h","href":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce#致谢","parentId":"20220504221049-bsx93ro","path":"/topic/分布式解决方案/分布式理论/三驾马车/MapReduce","parentPath":"/topic/分布式解决方案/分布式理论/三驾马车","children":[],"level":4}],"level":3}],"level":2},{"title":"理论基础","id":"20220421202816-shcixtm","type":"d","href":"/topic/分布式解决方案/分布式理论/理论基础","parentId":"","path":"/topic/分布式解决方案/分布式理论/理论基础","parentPath":"/topic/分布式解决方案/分布式理论","sort":1,"children":[{"title":"CAP定理","id":"20220421194022-lgdnhqq","type":"h","href":"/topic/分布式解决方案/分布式理论/理论基础#CAP定理","parentId":"20220421202816-shcixtm","path":"/topic/分布式解决方案/分布式理论/理论基础","parentPath":"/topic/分布式解决方案/分布式理论","children":[{"title":"一致性","id":"20220421194022-us5g6gf","type":"h","href":"/topic/分布式解决方案/分布式理论/理论基础#一致性","parentId":"20220421194022-lgdnhqq","path":"/topic/分布式解决方案/分布式理论/理论基础","parentPath":"/topic/分布式解决方案/分布式理论","children":[],"level":4},{"title":"可用性","id":"20220421194022-kv51un6","type":"h","href":"/topic/分布式解决方案/分布式理论/理论基础#可用性","parentId":"20220421194022-lgdnhqq","path":"/topic/分布式解决方案/分布式理论/理论基础","parentPath":"/topic/分布式解决方案/分布式理论","children":[],"level":4},{"title":"分区容错性","id":"20220421194022-0fbmm72","type":"h","href":"/topic/分布式解决方案/分布式理论/理论基础#分区容错性","parentId":"20220421194022-lgdnhqq","path":"/topic/分布式解决方案/分布式理论/理论基础","parentPath":"/topic/分布式解决方案/分布式理论","children":[],"level":4}],"level":3},{"title":"CAP权衡","id":"20220421194022-s2yw4om","type":"h","href":"/topic/分布式解决方案/分布式理论/理论基础#CAP权衡","parentId":"20220421202816-shcixtm","path":"/topic/分布式解决方案/分布式理论/理论基础","parentPath":"/topic/分布式解决方案/分布式理论","children":[],"level":3},{"title":"BASE定理","id":"20220421194022-ugtbzuw","type":"h","href":"/topic/分布式解决方案/分布式理论/理论基础#BASE定理","parentId":"20220421202816-shcixtm","path":"/topic/分布式解决方案/分布式理论/理论基础","parentPath":"/topic/分布式解决方案/分布式理论","children":[{"title":"Basically Available（基本可⽤）","id":"20220421194022-hx4rr6j","type":"h","href":"/topic/分布式解决方案/分布式理论/理论基础#Basically Available（基本可⽤）","parentId":"20220421194022-ugtbzuw","path":"/topic/分布式解决方案/分布式理论/理论基础","parentPath":"/topic/分布式解决方案/分布式理论","children":[],"level":4},{"title":"Soft state（软状态）","id":"20220421194022-rficqdw","type":"h","href":"/topic/分布式解决方案/分布式理论/理论基础#Soft state（软状态）","parentId":"20220421194022-ugtbzuw","path":"/topic/分布式解决方案/分布式理论/理论基础","parentPath":"/topic/分布式解决方案/分布式理论","children":[],"level":4},{"title":"Eventually consistent（最终⼀致性）","id":"20220421194022-ywkpga3","type":"h","href":"/topic/分布式解决方案/分布式理论/理论基础#Eventually consistent（最终⼀致性）","parentId":"20220421194022-ugtbzuw","path":"/topic/分布式解决方案/分布式理论/理论基础","parentPath":"/topic/分布式解决方案/分布式理论","children":[],"level":4}],"level":3},{"title":"BASE理论的特点","id":"20220421194022-4710eie","type":"h","href":"/topic/分布式解决方案/分布式理论/理论基础#BASE理论的特点","parentId":"20220421202816-shcixtm","path":"/topic/分布式解决方案/分布式理论/理论基础","parentPath":"/topic/分布式解决方案/分布式理论","children":[],"level":3},{"title":"ACID 和 BASE 的区别与联系","id":"20220421194022-7ykvvqi","type":"h","href":"/topic/分布式解决方案/分布式理论/理论基础#ACID 和 BASE 的区别与联系","parentId":"20220421202816-shcixtm","path":"/topic/分布式解决方案/分布式理论/理论基础","parentPath":"/topic/分布式解决方案/分布式理论","children":[],"level":3}],"level":2},{"title":"共识算法","id":"20220429140840-qysmevv","type":"d","href":"/topic/分布式解决方案/分布式理论/共识算法","parentId":"","path":"/topic/分布式解决方案/分布式理论/共识算法","parentPath":"/topic/分布式解决方案/分布式理论","sort":2,"children":[{"title":"Raft算法","id":"20220429141001-rpid265","type":"d","href":"/topic/分布式解决方案/分布式理论/共识算法/Raft算法","parentId":"","path":"/topic/分布式解决方案/分布式理论/共识算法/Raft算法","parentPath":"/topic/分布式解决方案/分布式理论/共识算法","children":[],"level":3},{"title":"Paxos算法","id":"20220429141011-92v98k0","type":"d","href":"/topic/分布式解决方案/分布式理论/共识算法/Paxos算法","parentId":"","path":"/topic/分布式解决方案/分布式理论/共识算法/Paxos算法","parentPath":"/topic/分布式解决方案/分布式理论/共识算法","children":[],"level":3}],"level":2},{"title":"通讯协议-Gossip","id":"20220429141408-iesct3f","type":"d","href":"/topic/分布式解决方案/分布式理论/通讯协议-Gossip","parentId":"","path":"/topic/分布式解决方案/分布式理论/通讯协议-Gossip","parentPath":"/topic/分布式解决方案/分布式理论","sort":3,"children":[],"level":2}],"level":1},{"title":"流量调度","id":"20220429141613-wbxi2uw","type":"d","href":"/topic/分布式解决方案/流量调度","parentId":"","path":"/topic/分布式解决方案/流量调度","parentPath":"/topic/分布式解决方案","sort":2,"children":[{"title":"流量控制","id":"20220429141625-6pv8964","type":"d","href":"/topic/分布式解决方案/流量调度/流量控制","parentId":"","path":"/topic/分布式解决方案/流量调度/流量控制","parentPath":"/topic/分布式解决方案/流量调度","sort":1,"children":[],"level":2},{"title":"服务路由","id":"20220429141647-rhppejp","type":"d","href":"/topic/分布式解决方案/流量调度/服务路由","parentId":"","path":"/topic/分布式解决方案/流量调度/服务路由","parentPath":"/topic/分布式解决方案/流量调度","sort":2,"children":[],"level":2},{"title":"负载均衡","id":"20220429141638-us0mqmb","type":"d","href":"/topic/分布式解决方案/流量调度/负载均衡","parentId":"","path":"/topic/分布式解决方案/流量调度/负载均衡","parentPath":"/topic/分布式解决方案/流量调度","sort":3,"children":[],"level":2}],"level":1},{"title":"数据调度","id":"20220429141727-g27lor1","type":"d","href":"/topic/分布式解决方案/数据调度","parentId":"","path":"/topic/分布式解决方案/数据调度","parentPath":"/topic/分布式解决方案","sort":3,"children":[{"title":"分布式缓存","id":"20220429141810-k5iup7v","type":"d","href":"/topic/分布式解决方案/数据调度/分布式缓存","parentId":"","path":"/topic/分布式解决方案/数据调度/分布式缓存","parentPath":"/topic/分布式解决方案/数据调度","sort":1,"children":[],"level":2},{"title":"数据库","id":"20220429141819-ylczf3x","type":"d","href":"/topic/分布式解决方案/数据调度/数据库","parentId":"","path":"/topic/分布式解决方案/数据调度/数据库","parentPath":"/topic/分布式解决方案/数据调度","sort":2,"children":[],"level":2},{"title":"分布式事务","id":"20220421194022-xmjo91m","type":"d","href":"/topic/分布式解决方案/数据调度/分布式事务","parentId":"","path":"/topic/分布式解决方案/数据调度/分布式事务","parentPath":"/topic/分布式解决方案/数据调度","sort":4,"children":[{"title":"事务分类","id":"20220422211743-d9h1h4g","type":"d","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","parentId":"","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","parentPath":"/topic/分布式解决方案/数据调度/分布式事务","sort":2,"children":[{"title":"刚性事务","id":"20220421194022-4srmmfd","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类#刚性事务","parentId":"20220422211743-d9h1h4g","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","parentPath":"/topic/分布式解决方案/数据调度/分布式事务","children":[],"level":4},{"title":"柔性事务","id":"20220421194022-s4gh03z","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类#柔性事务","parentId":"20220422211743-d9h1h4g","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","parentPath":"/topic/分布式解决方案/数据调度/分布式事务","children":[],"level":4},{"title":"刚性事务的实现","id":"20220423180932-i5c8gry","type":"d","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现","parentId":"","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","sort":1,"children":[{"title":"2PC(标准XA模型)","id":"20220423180940-j94vqjc","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现#2PC(标准XA模型)","parentId":"20220423180932-i5c8gry","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[{"title":"阶段⼀：提交事务请求","id":"20220423180940-0w8g7kd","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现#阶段⼀：提交事务请求","parentId":"20220423180940-j94vqjc","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":6},{"title":"阶段⼆：执⾏事务提交","id":"20220423180940-unw5awm","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现#阶段⼆：执⾏事务提交","parentId":"20220423180940-j94vqjc","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":6},{"title":"二阶段的优缺点","id":"20220423180940-p40kvug","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现#二阶段的优缺点","parentId":"20220423180940-j94vqjc","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":6}],"level":5},{"title":"3PC","id":"20220423180940-gs7otw2","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现#3PC","parentId":"20220423180932-i5c8gry","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[{"title":"阶段⼀：CanCommit","id":"20220423180940-qdofyw8","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现#阶段⼀：CanCommit","parentId":"20220423180940-gs7otw2","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":6},{"title":"阶段⼆：PreCommit","id":"20220423180940-rpcq3av","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现#阶段⼆：PreCommit","parentId":"20220423180940-gs7otw2","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":6},{"title":"阶段三：doCommit","id":"20220423180940-nhp5paq","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现#阶段三：doCommit","parentId":"20220423180940-gs7otw2","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":6}],"level":5},{"title":"2PC和3PC的区别","id":"20220423180940-0uvutgg","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现#2PC和3PC的区别","parentId":"20220423180932-i5c8gry","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/刚性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":5}],"level":4},{"title":"柔性事务的实现","id":"20220423215330-3iq8jdi","type":"d","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentId":"","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","sort":2,"children":[{"title":"柔性事务的分类","id":"20220423215701-eorkz50","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#柔性事务的分类","parentId":"20220423215330-3iq8jdi","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[{"title":"通知型事务","id":"20220424140207-63rfn0i","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#通知型事务","parentId":"20220423215701-eorkz50","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[{"title":"异步确保型事务","id":"20220424141734-ssqxhgg","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#异步确保型事务","parentId":"20220424140207-63rfn0i","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[{"title":"MQ事务消息","id":"20220424144320-vvl8bhn","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#MQ事务消息","parentId":"20220424141734-ssqxhgg","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":8},{"title":"本地消息表","id":"20220424150800-s3n6tgw","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#本地消息表","parentId":"20220424141734-ssqxhgg","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":8},{"title":"MQ事务消息 VS 本地消息表","id":"20220424151513-a09myd0","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#MQ事务消息 VS 本地消息表","parentId":"20220424141734-ssqxhgg","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":8}],"level":7}],"level":6},{"title":"通知型事务的问题","id":"20220424152118-6uac32f","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#通知型事务的问题","parentId":"20220423215701-eorkz50","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[{"title":"消息发送⼀致性","id":"20220424152152-cggmsm0","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#消息发送⼀致性","parentId":"20220424152118-6uac32f","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[{"title":"常规MQ消息处理流程和特点","id":"20220424153236-47ri1pl","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#常规MQ消息处理流程和特点","parentId":"20220424152152-cggmsm0","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":8}],"level":7},{"title":"消息重复投递和业务幂等性","id":"20220424152200-0ncnon5","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#消息重复投递和业务幂等性","parentId":"20220424152118-6uac32f","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":7}],"level":6},{"title":"补偿型事务","id":"20220424153327-wt1eal3","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#补偿型事务","parentId":"20220423215701-eorkz50","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[{"title":"TCC 事务模型","id":"20220424195356-vie44sx","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#TCC 事务模型","parentId":"20220424153327-wt1eal3","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[{"title":"工作流程","id":"20220425132329-idymkg7","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#工作流程","parentId":"20220424195356-vie44sx","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":8}],"level":7},{"title":"TCC事务模型 VS DTP事务模型","id":"20220425204746-vxjja04","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#TCC事务模型 VS DTP事务模型","parentId":"20220424153327-wt1eal3","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":7},{"title":"Sega事务模型","id":"20220424195411-f3n90gn","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#Sega事务模型","parentId":"20220424153327-wt1eal3","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[{"title":"相关概念","id":"20220426111130-6ywhypq","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#相关概念","parentId":"20220424195411-f3n90gn","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":8},{"title":"组成部分","id":"20220426111254-5is2lcf","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#组成部分","parentId":"20220424195411-f3n90gn","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":8},{"title":"执⾏顺序","id":"20220426111355-qds8zxl","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#执⾏顺序","parentId":"20220424195411-f3n90gn","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":8},{"title":"恢复策略","id":"20220426111558-uz4vsur","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#恢复策略","parentId":"20220424195411-f3n90gn","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":8},{"title":"使用条件","id":"20220426140712-sp65fo9","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#使用条件","parentId":"20220424195411-f3n90gn","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":8},{"title":"对于ACID的保证","id":"20220426141244-4jza2t0","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#对于ACID的保证","parentId":"20220424195411-f3n90gn","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":8}],"level":7},{"title":"Saga和TCC对⽐","id":"20220426141416-9qybphm","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现#Saga和TCC对⽐","parentId":"20220424153327-wt1eal3","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/柔性事务的实现","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","children":[],"level":7}],"level":6}],"level":5}],"level":4},{"title":"总体的⽅案对⽐","id":"20220426143956-3oea8tm","type":"d","href":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/总体的⽅案对⽐","parentId":"","path":"/topic/分布式解决方案/数据调度/分布式事务/事务分类/总体的⽅案对⽐","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/事务分类","sort":3,"children":[],"level":4}],"level":3},{"title":"Seata框架","id":"20220426145647-ux209fp","type":"d","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架","parentId":"","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架","parentPath":"/topic/分布式解决方案/数据调度/分布式事务","sort":3,"children":[{"title":"Seata模块","id":"20220426152420-ajoches","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架#Seata模块","parentId":"20220426145647-ux209fp","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架","parentPath":"/topic/分布式解决方案/数据调度/分布式事务","children":[],"level":4},{"title":"Seata解决方案","id":"20220426160239-lc5rk4b","type":"d","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","parentId":"","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架","sort":2,"children":[{"title":"AT模式","id":"20220426155550-64bgf4n","type":"d","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/AT模式","parentId":"","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/AT模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","sort":1,"children":[{"title":"使用前提","id":"20220426155558-ub7wm27","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/AT模式#使用前提","parentId":"20220426155550-64bgf4n","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/AT模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":6},{"title":"整体机制","id":"20220426155652-aexc9fh","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/AT模式#整体机制","parentId":"20220426155550-64bgf4n","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/AT模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":6},{"title":"数据隔离性","id":"20220426155838-n38cpfv","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/AT模式#数据隔离性","parentId":"20220426155550-64bgf4n","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/AT模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[{"title":"写隔离","id":"20220426163905-xprvfiu","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/AT模式#写隔离","parentId":"20220426155838-n38cpfv","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/AT模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":7},{"title":"读隔离","id":"20220426163909-u8pc717","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/AT模式#读隔离","parentId":"20220426155838-n38cpfv","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/AT模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":7}],"level":6}],"level":5},{"title":"TCC模式","id":"20220426160034-fjyztju","type":"d","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式","parentId":"","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","sort":2,"children":[{"title":"第⼀阶段 Try","id":"20220427100807-9m7182w","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式#第⼀阶段 Try","parentId":"20220426160034-fjyztju","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":6},{"title":"第⼆阶段 Confirm","id":"20220427100921-tzronqk","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式#第⼆阶段 Confirm","parentId":"20220426160034-fjyztju","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":6},{"title":"第⼆阶段 Cancel","id":"20220427101038-z7iyl90","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式#第⼆阶段 Cancel","parentId":"20220426160034-fjyztju","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":6},{"title":"多个事务并发的情况","id":"20220427100807-4uemyxv","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式#多个事务并发的情况","parentId":"20220426160034-fjyztju","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":6},{"title":"SpringCloud集成TCC","id":"20220427101406-ww6wp56","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式#SpringCloud集成TCC","parentId":"20220426160034-fjyztju","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[{"title":"定义TCC接口","id":"20220427103444-0y0c4r2","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式#定义TCC接口","parentId":"20220427101406-ww6wp56","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":7},{"title":"TCC接口的业务实现","id":"20220427103518-2w7qrfd","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式#TCC接口的业务实现","parentId":"20220427101406-ww6wp56","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/TCC模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":7}],"level":6}],"level":5},{"title":"Sega模式","id":"20220426160053-48dfocz","type":"d","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/Sega模式","parentId":"","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/Sega模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","sort":3,"children":[{"title":"基于状态机引擎的 Saga 实现","id":"20220427110339-mlxwa7j","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/Sega模式#基于状态机引擎的 Saga 实现","parentId":"20220426160053-48dfocz","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/Sega模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":6},{"title":"springCloud seata saga接入指南","id":"20220427111111-cix2tpk","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/Sega模式#springCloud seata saga接入指南","parentId":"20220426160053-48dfocz","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/Sega模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[{"title":"配置状态机","id":"20220427111137-9vwxkss","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/Sega模式#配置状态机","parentId":"20220427111111-cix2tpk","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/Sega模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":7},{"title":"配置状态机引擎","id":"20220427111242-xo5yogv","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/Sega模式#配置状态机引擎","parentId":"20220427111111-cix2tpk","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/Sega模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":7},{"title":"状态机执行","id":"20220427111159-vkcgfzm","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/Sega模式#状态机执行","parentId":"20220427111111-cix2tpk","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/Sega模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":7}],"level":6}],"level":5},{"title":"XA模式","id":"20220426160059-gdxxs9l","type":"d","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式","parentId":"","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","sort":4,"children":[{"title":"前提","id":"20220427111429-pypz051","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式#前提","parentId":"20220426160059-gdxxs9l","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":6},{"title":"整体机制","id":"20220427111429-pc6llsu","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式#整体机制","parentId":"20220426160059-gdxxs9l","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":6},{"title":"工作机制","id":"20220427111429-bafbod5","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式#工作机制","parentId":"20220426160059-gdxxs9l","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[{"title":"1. 整体运行机制","id":"20220427111429-1be3rze","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式#1. 整体运行机制","parentId":"20220427111429-bafbod5","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":7},{"title":"2. 数据源代理","id":"20220427111429-y739ajn","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式#2. 数据源代理","parentId":"20220427111429-bafbod5","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":7},{"title":"3. 分支注册","id":"20220427111429-tbfzu5q","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式#3. 分支注册","parentId":"20220427111429-bafbod5","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":7},{"title":"XA 模式的使用","id":"20220427111429-gskf5fh","type":"h","href":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式#XA 模式的使用","parentId":"20220427111429-bafbod5","path":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案/XA模式","parentPath":"/topic/分布式解决方案/数据调度/分布式事务/Seata框架/Seata解决方案","children":[],"level":7}],"level":6}],"level":5}],"level":4}],"level":3}],"level":2},{"title":"分布式锁","id":"20220429141850-irtgbjl","type":"d","href":"/topic/分布式解决方案/数据调度/分布式锁","parentId":"","path":"/topic/分布式解决方案/数据调度/分布式锁","parentPath":"/topic/分布式解决方案/数据调度","children":[],"level":2},{"title":"分布式ID","id":"20220429141909-i2lgsn3","type":"d","href":"/topic/分布式解决方案/数据调度/分布式ID","parentId":"","path":"/topic/分布式解决方案/数据调度/分布式ID","parentPath":"/topic/分布式解决方案/数据调度","children":[],"level":2}],"level":1},{"title":"服务治理","id":"20220429141922-rrjykjo","type":"d","href":"/topic/分布式解决方案/服务治理","parentId":"","path":"/topic/分布式解决方案/服务治理","parentPath":"/topic/分布式解决方案","sort":4,"children":[{"title":"服务注册和发现","id":"20220429141942-czxw4td","type":"d","href":"/topic/分布式解决方案/服务治理/服务注册和发现","parentId":"","path":"/topic/分布式解决方案/服务治理/服务注册和发现","parentPath":"/topic/分布式解决方案/服务治理","sort":1,"children":[],"level":2},{"title":"链路追踪","id":"20220429142025-xkfxvz1","type":"d","href":"/topic/分布式解决方案/服务治理/链路追踪","parentId":"","path":"/topic/分布式解决方案/服务治理/链路追踪","parentPath":"/topic/分布式解决方案/服务治理","sort":2,"children":[],"level":2},{"title":"服务监控","id":"20220429141957-p3p01fn","type":"d","href":"/topic/分布式解决方案/服务治理/服务监控","parentId":"","path":"/topic/分布式解决方案/服务治理/服务监控","parentPath":"/topic/分布式解决方案/服务治理","sort":3,"children":[],"level":2},{"title":"服务降级和熔断","id":"20220429142039-iiutoki","type":"d","href":"/topic/分布式解决方案/服务治理/服务降级和熔断","parentId":"","path":"/topic/分布式解决方案/服务治理/服务降级和熔断","parentPath":"/topic/分布式解决方案/服务治理","sort":4,"children":[],"level":2}],"level":1},{"title":"高并发架构","id":"20220505192249-oksx1to","type":"d","href":"/topic/分布式解决方案/高并发架构","parentId":"","path":"/topic/分布式解决方案/高并发架构","parentPath":"/topic/分布式解决方案","sort":5,"children":[],"level":1}],"level":0},"headings":[{"depth":2,"value":"2PC(标准XA模型)","slug":"2pc标准xa模型"},{"depth":3,"value":"阶段⼀：提交事务请求","slug":"阶段提交事务请求"},{"depth":3,"value":"阶段⼆：执⾏事务提交","slug":"阶段执事务提交"},{"depth":3,"value":"二阶段的优缺点","slug":"二阶段的优缺点"},{"depth":2,"value":"3PC","slug":"3pc"},{"depth":3,"value":"阶段⼀：CanCommit","slug":"阶段cancommit"},{"depth":3,"value":"阶段⼆：PreCommit","slug":"阶段precommit"},{"depth":3,"value":"阶段三：doCommit","slug":"阶段三docommit"},{"depth":2,"value":"2PC和3PC的区别","slug":"2pc和3pc的区别"}]}},
    "staticQueryHashes": ["630634786","928362550"]}