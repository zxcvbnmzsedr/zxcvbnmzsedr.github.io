(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{375:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("JVM在运行Class文件时，会将Class文件中的各个结构区域按照规则映射成C++的代码。所以将从HotSpot加载Class的整个过程来剖析Class在JVM中内存分配情况。")]),t._v(" "),s("h1",{attrs:{id:"对象创建流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象创建流程"}},[t._v("#")]),t._v(" 对象创建流程")]),t._v(" "),s("p",[t._v("对象创建的主要流程图如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://image.ztianzeng.com/uPic/20220816180351.png",alt:""}}),t._v("​")]),t._v(" "),s("h2",{attrs:{id:"类加载检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类加载检查"}},[t._v("#")]),t._v(" 类加载检查")]),t._v(" "),s("p",[t._v("虚拟机需要一条new指令的时候，首先将回去检查这个指令的参数是否能够在常量池中定位到一个类的符号引用，并且检查这个符号引用的类是否已被加载、解析和初始化过。")]),t._v(" "),s("h2",{attrs:{id:"分配内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分配内存"}},[t._v("#")]),t._v(" 分配内存")]),t._v(" "),s("p",[t._v("在类加载检查通过之后，虚拟机会为这个对象分配内存。")]),t._v(" "),s("p",[t._v("对象所需内存的大小在类加载完成后便可完全确定，为对象分配空间的任务等同于把 一块确定大小的内存从Java堆中划分出来。")]),t._v(" "),s("p",[t._v("JVM默认采用TLAB方式进行内存分配，TLAB即ThreadLocalAllocationBuffers（线程局部分配缓存）。")]),t._v(" "),s("p",[t._v("每个线程都有自己的一块内存区域，用于分配对象，这块内存区域便为TLAB区。这样的好处是在分配内存时，无需对一整块内存进行加锁。TLAB只是在分配对象时的操作属于线程私有，分配的对象对于其他线程仍是可读的。")]),t._v(" "),s("p",[t._v("具体代码如下：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// templateTable_x86.cpp")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UseTLAB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取TLAB区剩余空间首地址，放入rax寄存器。")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("movptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("in_bytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JavaThread")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tlab_top_offset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// rdx寄存器已经记录了对象大小，此处及根据TLAB空闲区首地址，计算出对象分配后，对象尾地址，放入rbx中")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lea")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rbx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Address"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("times_1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将rbx中内容与TLAB空闲区尾地址进行比较。")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cmpptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rbx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("in_bytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JavaThread")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tlab_end_offset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果上面比较结果表明rbx > TLAB空闲区尾地址，则表明TLAB区空闲区大小不足以分配该对象，那么在allow_shared_alloc（允许在Eden区分配）情况下，就直接跳往Eden区分配内存标号处运行,即第8步")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jcc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Assembler"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("above"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" allow_shared_alloc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" allocate_shared "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" slow_case"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因为对象分配后，TLAB区空间变小，此处更新TLAB空闲区首地址为对象尾地址")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("movptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("in_bytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JavaThread")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("tlab_top_offset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rbx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果TLAB区默认会对回收的空闲区清零，那么就不需要在为对象变量进行清零操作了，直接跳往对象头初始化处运行。清零操作是因为分配的内存可能还保留着上次分配给其他对象时的数据，内存块虽然被回收了，但是之前的数据没有被清除，会污染新对象。")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ZeroTLAB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the fields have been already cleared")]),t._v("\n      __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jmp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initialize_header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// initialize both the header and fields")]),t._v("\n      __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jmp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initialize_object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果在TLAB区分配失败，会直接在Eden区进行分配:")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allow_shared_alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TLAB区分配失败会跳到这。")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allocate_shared"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取Eden区剩余空间的首地址和结束地址。")]),t._v("\n    ExternalAddress "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("heap_top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Universe")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("heap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("top_addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ExternalAddress "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("heap_end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Universe")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("heap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end_addr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    Label retry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("retry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将空闲区首地址放入rax中，用作对象分配开始处。")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("movptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" heap_top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计算对象尾地址，与空闲区尾地址进行比较，内存不足则跳往慢速分配。")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lea")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rbx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Address"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("times_1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cmpptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rbx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" heap_end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jcc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Assembler"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("above"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" slow_case"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// rax,: object begin，rax此时记录了对象分配的内存首地址")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// rbx,: object end    rbx此时记录了对象分配的内存尾地址")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// rdx: instance size in bytes rdx记录了对象大小")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 利用CAS操作，更新Eden空闲区首地址为对象尾地址，因为Eden区是线程共用的，所以需要加锁。")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("locked_cmpxchgptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rbx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" heap_top"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if someone beat us on the allocation, try again, otherwise continue")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jcc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Assembler"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("notEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" retry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("incr_allocated_bytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"初始化零值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化零值"}},[t._v("#")]),t._v(" 初始化零值")]),t._v(" "),s("p",[t._v("内存分配完成后，虚拟机需要将分配到的内存空间都初始化为零值（不包括对象头）")]),t._v(" "),s("p",[t._v("如果使用TLAB，这一工作过程也可以提前至TLAB分配时进行。这一步操作保证了对象的实例字段在Java代码中可以不赋初始值就直接使用，程序能访问到这些字段的数据类型所对应的零值。")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始初始化对象处")]),t._v("\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initialize_object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果rdx和sizeof(oopDesc)大小一样，即对象所需大小和对象头大小一样，则表明对象真正的实例数据内存为0，那么就不需要进行对象实例数据的初始化了，直接跳往对象头初始化处即可。Hotspot中虽然对象头在内存中排在对象实例数据前，但是会先初始化对象实例数据，再初始化对象头。")]),t._v("\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decrement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oopDesc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jcc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Assembler"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("zero"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" initialize_header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行异或，使得rcx为0，为之后给对象变量赋零值做准备")]),t._v("\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xorl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use zero reg to clear memory (shorter code)")]),t._v("\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("shrl")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LogBytesPerLong"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// divide by 2*oopSize and set carry flag if odd")]),t._v("\n\nLabel L"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jccb")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Assembler"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("carryClear"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" L"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object size is not multiple of 2 - adjust this code"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("L"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此处以rdx（对象大小）递减，按字节进行循环遍历对内存，初始化对象实例内存为零值。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Label loop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("movptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Address"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("times_8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oopDesc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("oopSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NOT_LP64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("movptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Address"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("times_8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oopDesc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("oopSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decrement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rdx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jcc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Assembler"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("notZero"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" loop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"设置对象头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置对象头"}},[t._v("#")]),t._v(" 设置对象头")]),t._v(" "),s("p",[t._v("初始化零值之后，虚拟机要对对象进行必要的设置。")]),t._v(" "),s("p",[t._v("例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码、对象的GC分代年龄等信息。这些信息存放在对象的对象头Object Header之中。")]),t._v(" "),s("p",[t._v("在HotSpot虚拟机中，对象在内存中存储的布局可以分为3块区域：")]),t._v(" "),s("ol",[s("li",[t._v("对象头（Header）")]),t._v(" "),s("li",[t._v("实例数据（Instance Data）")]),t._v(" "),s("li",[t._v("对齐填充（Padding）。")])]),t._v(" "),s("p",[t._v("HotSpot虚拟机的对象头包括两部分信息，第一部分用于存储对象自身的运行时数据， 如哈希码（HashCode）、GC分代年龄、锁状态标志、线程持有的锁、偏向线程ID、偏向时间戳等。")]),t._v(" "),s("p",[t._v("对象头的另外一部分是类型指针，即对象指向它的类元数据的指针，虚拟机通过这个指针来确定这个对象是哪个类的实例。")]),t._v(" "),s("h3",{attrs:{id:"_32位对象头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_32位对象头"}},[t._v("#")]),t._v(" 32位对象头")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://image.ztianzeng.com/uPic/20220817135701.png",alt:""}}),t._v("​")]),t._v(" "),s("h3",{attrs:{id:"_64位对象头"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_64位对象头"}},[t._v("#")]),t._v(" 64位对象头")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://image.ztianzeng.com/uPic/20220817135725.png",alt:""}}),t._v("​")]),t._v(" "),s("p",[t._v("对象头在hotspot的C++源码markOop.hpp文件里的注释如下：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Bit-format of an object header (most significant first, big endian layout below):")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  32 bits:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  --------")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             hash:25 ------------\x3e| age:4    biased_lock:1 lock:2 (normal object)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             JavaThread*:23 epoch:2 age:4    biased_lock:1 lock:2 (biased object)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             size:32 ------------------------------------------\x3e| (CMS free block)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//             PromotedObject*:29 ----------\x3e| promo_bits:3 -----\x3e| (CMS promoted object)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  64 bits:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  --------")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  unused:25 hash:31 --\x3e| unused:1   age:4    biased_lock:1 lock:2 (normal object)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  JavaThread*:54 epoch:2 unused:1   age:4    biased_lock:1 lock:2 (biased object)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  PromotedObject*:61 ---------------------\x3e| promo_bits:3 -----\x3e| (CMS promoted object)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  size:64 -----------------------------------------------------\x3e| (CMS free block)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  unused:25 hash:31 --\x3e| cms_free:1 age:4    biased_lock:1 lock:2 (COOPs && normal object)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  JavaThread*:54 epoch:2 cms_free:1 age:4    biased_lock:1 lock:2 (COOPs && biased object)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  narrowOop:32 unused:24 cms_free:1 unused:4 promo_bits:3 -----\x3e| (COOPs && CMS promoted object)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  unused:21 size:35 --\x3e| cms_free:1 unused:7 ------------------\x3e| (COOPs && CMS free block)")]),t._v("\n")])])]),s("h2",{attrs:{id:"执行init方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行init方法"}},[t._v("#")]),t._v(" 执行Init方法")]),t._v(" "),s("p",[t._v("对象按照Java代码中的逻辑进行初始化。")]),t._v(" "),s("p",[t._v("对应到语言层面上讲，就是为属性赋值，和执行构造方法。")]),t._v(" "),s("p",[t._v("比如 "),s("code",[t._v("int a = 10; int b = 20;")]),t._v("这种就是在init过程中执行的。")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化对象头标号处")]),t._v("\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initialize_header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否使用偏向锁，大多时一个对象只会被同一个线程访问，所以在对象头中记录获取锁的线程id，下次线程获取锁时就不需要加锁了。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UseBiasedLocking"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第4步中有将类数据InstanceKlass的地址入栈，此时重新出栈，放入rcx寄存器。")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接下来两步将类的偏向锁相关数据移动到对象头部")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("movptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rbx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Klass")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("prototype_header_offset")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("movptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oopDesc"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mark_offset_in_bytes")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rbx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("movptr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Address")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oopDesc"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mark_offset_in_bytes")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intptr_t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("markOopDesc"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("prototype")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// header")]),t._v("\n    __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get saved klass back in the register.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时rcx保存了InstanceKlass，rax保存了对象首地址，此处保存对象所属的类数据InstanceKlass放入对象头中，对象头尾oopDesc类型，里面有个_metadata联合体，_metadata中专门有个Klass指针用来指向类所属对象，此处其实就是将InstanceKlass地址放入该指针中。")]),t._v("\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("store_klass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rcx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// klass")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  SkipIfEqual "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("skip_if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_masm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("DTraceAllocProbes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Trigger dtrace event for fastpath")]),t._v("\n  __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("atos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call_VM_leaf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CAST_FROM_FN_PTR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SharedRuntime"),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),t._v("dtrace_object_alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  __ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("atos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n__ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jmp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("done"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("p",[t._v("‍")]),t._v(" "),s("h1",{attrs:{id:"对象内存分配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象内存分配"}},[t._v("#")]),t._v(" 对象内存分配")]),t._v(" "),s("p",[t._v("整个对象创建最复杂的步骤就是对象分配那一块，涉及到多种概念，大致分配流程如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://image.ztianzeng.com/uPic/20220817154907.png",alt:""}}),t._v("​")]),t._v(" "),s("h2",{attrs:{id:"对象栈上分配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象栈上分配"}},[t._v("#")]),t._v(" 对象栈上分配")]),t._v(" "),s("p",[t._v("我们通过JVM内存分配可以知道JAVA中的对象都是在堆上进行分配，当对象没有被引用的时候，需要依靠GC进行回收内存，如果对象数量较多的时候，会给GC带来较大压力，也间接影响了应用的性能。")]),t._v(" "),s("p",[t._v("为了减少临时对象在堆内分配的数量，JVM通过"),s("strong",[t._v("逃逸分析")]),t._v("确定该对象不会被外部访问。")]),t._v(" "),s("p",[t._v("如果不会逃逸可以将该对象在栈上分配内存，这样该对象所占用的内存空间就可以随栈帧出栈而销毁，就减轻了垃圾回收的压力。")]),t._v(" "),s("p",[t._v("**对象逃逸分析：**就是分析对象动态作用域，当一个对象在方法中被定义后，它可能被外部方法所引用，例如作为调用参数传递到其他地方中。")]),t._v(" "),s("p",[t._v("**标量替换：**通过逃逸分析确定该对象不会被外部访问，并且对象可以被进一步分解时，JVM不会创建该对象，而是将该对象成员变量分解若干个被这个方法使用的成员变量所代替，这些代替的成员变量在栈帧或寄存器上分配空间，这样就不会因为没有一大块连续空间导致对象内存不够分配。开启标量替换参数(-XX:+EliminateAllocations)，JDK7之后默认开启。")]),t._v(" "),s("p",[t._v("**标量与聚合量：**标量即不可被进一步分解的量，而JAVA的基本数据类型就是标量（如：int，long等基本数据类型以及reference类型等），标量的对立就是可以被进一步分解的量，而这种量称之为聚合量。而在JAVA中对象就是可以被进一步分解的聚合量。")]),t._v(" "),s("h2",{attrs:{id:"对象在eden区分配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象在eden区分配"}},[t._v("#")]),t._v(" 对象在Eden区分配")]),t._v(" "),s("p",[t._v("大多数情况下，对象在新生代中 Eden 区分配。当 Eden 区没有足够空间进行分配时，虚拟机将发起一次Minor GC。")]),t._v(" "),s("h2",{attrs:{id:"大对象进入老年代"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#大对象进入老年代"}},[t._v("#")]),t._v(" 大对象进入老年代")]),t._v(" "),s("p",[t._v("为了避免为大对象分配内存时的复制操作而降低效率。JVM会将需要大量连续内存空间的对象直接丢入到老年代中。")]),t._v(" "),s("p",[t._v("JVM参数 -XX:PretenureSizeThreshold 可以设置大对象的大小，如果对象超过设置大小会直接进入老年代，不会进入年轻代，这个参数只在 Serial 和ParNew两个收集器下有效。")]),t._v(" "),s("h2",{attrs:{id:"长期存活的对象将进入老年代"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#长期存活的对象将进入老年代"}},[t._v("#")]),t._v(" 长期存活的对象将进入老年代")]),t._v(" "),s("p",[t._v("既然虚拟机采用了分代收集的思想来管理内存，那么内存回收时就必须能识别哪些对象应放在新生代，哪些对象应放在老年代中。为了做到这一点，虚拟机给每个对象一个对象年龄（Age）计数器。")]),t._v(" "),s("p",[t._v("如果对象在 Eden 出生并经过第一次 Minor GC 后仍然能够存活，并且能被 Survivor 容纳的话，将被移动到 Survivor 空间中，并将对象年龄设为1。对象在 Survivor 中每熬过一次 MinorGC，年龄就增加1岁，当它的年龄增加到一定程度，就会被晋升到老年代中。对象晋升到老年代的年龄阈值，可以通过参数 -XX:MaxTenuringThreshold 来设置。")]),t._v(" "),s("h2",{attrs:{id:"对象动态年龄判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象动态年龄判断"}},[t._v("#")]),t._v(" 对象动态年龄判断")]),t._v(" "),s("p",[t._v("当前放对象的Survivor区域里，一批对象的总大小大于这块Survivor区域内存大小的50%(-XX:TargetSurvivorRatio可以指定)，那么此时大于等于这批对象年龄最大值的对象，就可以直接进入老年代了，例如Survivor区域里现在有一批对象，年龄1+年龄2+年龄n的多个年龄对象总和超过了Survivor区域的50%，此时就会把年龄n(含)以上的对象都放入老年代。这个规则其实是希望那些可能是长期存活的对象，尽早进入老年代。对象动态年龄判断机制一般是在minor gc之后触发的。")]),t._v(" "),s("h2",{attrs:{id:"老年代空间分配担保机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#老年代空间分配担保机制"}},[t._v("#")]),t._v(" 老年代空间分配担保机制")]),t._v(" "),s("p",[t._v("年轻代每次minor gc之前JVM都会计算下老年代剩余可用空间。")]),t._v(" "),s("p",[t._v("如果这个可用空间小于年轻代里现有的所有对象大小之和(包括垃圾对象) 就会看一个"),s("code",[t._v("-XX:-HandlePromotionFailure")]),t._v("(jdk1.8默认就设置了)的参数是否设置了。")]),t._v(" "),s("p",[t._v("如果有这个参数，就会看看老年代的可用内存大小，是否大于之前每一次minor gc后进入老年代的对象的平均大小。")]),t._v(" "),s("p",[t._v('如果上一步结果是小于或者之前说的参数没有设置，那么就会触发一次Full gc，对老年代和年轻代一起回收一次垃圾，如果回收完还是没有足够空间存放新的对象就会发生"OOM"')]),t._v(" "),s("p",[t._v("当然，如果minor gc之后剩余存活的需要挪动到老年代的对象大小还是大于老年代可用空间，那么也会触发full gc，full gc完之后如果还是没有空间放minor gc之后的存活对象，则也会发生“OOM”")]),t._v(" "),s("h2",{attrs:{id:"对象内存回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象内存回收"}},[t._v("#")]),t._v(" 对象内存回收")]),t._v(" "),s("p",[t._v("堆中几乎放着所有的对象实例，对堆垃圾回收前的第一步就是要判断哪些对象已经死亡（即不能再被任何途径使用的对象）。")]),t._v(" "),s("p",[t._v("‍")])])}),[],!1,null,null,null);s.default=e.exports}}]);