{"version":3,"file":"component---src-pages-index-tsx-2d8751f8c74933fae9b4.js","mappings":"wLAEaA,EAAgBC,EAAAA,QAAAA,IAAAA,WAAH,wEAAGA,CAAH,wBAIbC,EAAiBD,EAAAA,QAAAA,IAAAA,WAAH,yEAAGA,CAAH,oC,uMCN3B,EAAe,IAA0B,qDCgBnCE,GAAKF,EAAAA,EAAAA,SAAOD,EAAAA,GAAVI,WAAA,oDAAGH,CAAH,0NAGcI,EAAAA,GAAAA,gBACIC,GAcpBC,GAAcN,EAAAA,EAAAA,SAAOC,EAAAA,GAAVE,WAAA,6DAAGH,CAAH,+GASFO,EAAAA,GAQTC,EAAYR,EAAAA,QAAAA,GAAAA,WAAH,2DAAGA,CAAH,MAITS,EAAST,EAAAA,QAAAA,GAAAA,WAAH,wDAAGA,CAAH,qBAINU,EAAgBV,EAAAA,QAAAA,IAAAA,WAAH,+DAAGA,CAAH,wBAObW,GAAOC,EAAAA,EAAAA,IAAO,aAEdC,EAAyD,SAAC,GAGzD,IAFLC,EAEI,EAFJA,GAEI,IADJC,KAAAA,OACI,MADG,KACH,EADSC,EACT,EADSA,SAGPC,GAAgBC,EAAAA,EAAAA,IAASC,EAAAA,GAGzBC,IAFOC,EAAAA,EAAAA,MAEO,CAClBC,UAAW,eACXC,IAAKT,IAGP,MAAa,OAATC,EAEAS,EAAAA,cAACC,EAAAA,KAAD,iBAAUL,EAAV,CAAuBN,GAAIA,EAAGY,WAAW,KACrCZ,EACAG,EAAcU,WAAWb,GAAIc,OAG9BZ,GAKHQ,EAAAA,cAAAA,IAAAA,OAAAA,OAAAA,GAAOJ,EAAP,CAAoBS,KAAMf,IACvBE,IAOHc,EAAQ,CACZ,CAAC,WAAYC,EAAAA,IAAOpB,EAAK,aAAc,SA8CzC,EA3C0C,WAExC,IAAMM,GAAgBC,EAAAA,EAAAA,IAASC,EAAAA,GAE/B,OACEK,EAAAA,cAACQ,EAAAA,EAAD,CAAoBC,mBAAmB,GACrCT,EAAAA,cAACU,EAAAA,EAAD,CACEC,QAAS,4BAEXX,EAAAA,cAACtB,EAAD,KACEsB,EAAAA,cAAClB,EAAD,KACEkB,EAAAA,cAAChB,EAAD,KACEgB,EAAAA,cAACY,EAAAA,GAAD,CAAWC,GAAI1B,EAAK,YAEtBa,EAAAA,cAACf,EAAD,KAAQe,EAAAA,cAACY,EAAAA,GAAD,CAAWC,GAAI1B,EAAK,WAC5Ba,EAAAA,cAACd,EAAD,KACEc,EAAAA,cAACX,EAAD,CAAQC,GAAG,UACTU,EAAAA,cAACc,EAAAA,IAAD,MACAd,EAAAA,cAACY,EAAAA,GAAD,CACEC,GAAI1B,EAAK,eACT4B,KAAM,CAACtB,EAAcuB,iBAGxBV,EAAMW,KAAI,gBAAE3B,EAAF,KAAM4B,EAAN,KAAYL,EAAZ,YAAgBtB,OAAhB,MAAuB,KAAvB,SACTS,EAAAA,cAACX,EAAD,CAAQU,IAAKT,EAAIA,GAAIA,EAAIC,KAAMA,GAC7BS,EAAAA,cAACkB,EAAD,MACAlB,EAAAA,cAACY,EAAAA,GAAD,CAAWC,GAAIA,SAIrBb,EAAAA,cAACmB,EAAAA,EAAD,CAAUC,KAAM,IAAKC,MAAO,UAC5BrB,EAAAA,cAAAA,IAAAA,KACEA,EAAAA,cAACsB,EAAAA,IAAD,MACAtB,EAAAA,cAACY,EAAAA,GAAD,CAAWC,GAAI,2BAFjB,IAGEb,EAAAA,cAAAA,SAAAA,KAAAA,IAAUP,EAAc8B,aAAaC","sources":["webpack://ztianzeng.com/./src/layouts/LayeredLayout.tsx","webpack://ztianzeng.com/./assets/mainbg.jpg","webpack://ztianzeng.com/./src/pages/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const RootContainer = styled.div`\n  position: relative;\n`;\n\nexport const InnerContainer = styled.div`\n  position: absolute;\n  width: 100%;\n`;\n","export default __webpack_public_path__ + \"static/mainbg-aefd6b95843d5db8068da7fa913b8ebd.jpg\";","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport { FaBookOpen, FaClock, FaRss} from \"react-icons/fa\";\nimport { useStore } from \"simstate\";\nimport styled from \"styled-components\";\n\nimport Contacts from \"@/components/Contacts\";\nimport { PageMetadata } from \"@/components/PageMetadata\";\nimport { Localized,prefix, useI18n  } from \"@/i18n\";\nimport HeaderFooterLayout from \"@/layouts/HeaderFooterLayout\";\nimport { InnerContainer,RootContainer } from \"@/layouts/LayeredLayout\";\nimport MetadataStore from \"@/stores/MetadataStore\";\nimport moveInAnimation from \"@/styles/moveInAnimation\";\nimport { colors } from \"@/styles/variables\";\nimport bgImg from \"~/assets/mainbg.jpg\";\n\nconst Bg = styled(RootContainer)`\n  height: 100vh;\n\n  background-color: ${colors.homepageBgColor};\n  background-image: url(${bgImg});\n\n  /* Center and scale the image nicely */\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  display: flex;\n  align-items: center;\n  justify-items: center;\n  justify-content: center;\n\n`;\n\nconst TextContent = styled(InnerContainer)`\n  z-index: 3;\n  color: white;\n  text-align: center;\n\n  & > * {\n     padding: 12px 0;\n  }\n\n  animation: ${moveInAnimation} 0.2s ease-in-out;\n\n  margin: 0 8px;\n\n\n`;\n\n\nconst TitleText = styled.h1`\n\n`;\n\nconst Slogan = styled.h4`\n  font-size: 20px;\n`;\n\nconst LinkContainer = styled.div`\n\n  & > * {\n    margin: 4px;\n  }\n`;\n\nconst root = prefix(\"homepage.\");\n\nconst Button: React.FC<{ to: string; mode?: \"to\" | \"href\" }> = ({\n  to,\n  mode = \"to\", children,\n}) => {\n\n  const metadataStore = useStore(MetadataStore);\n  const i18n = useI18n();\n\n  const commonProps = {\n    className: \"btn btn-info\",\n    key: to,\n  };\n\n  if (mode === \"to\") {\n    return (\n      <Link {...commonProps} to={to.startsWith(\"/\")\n        ? to\n        : metadataStore.getArticle(to).path\n      }\n      >\n        {children}\n      </Link>\n    );\n  } else {\n    return (\n      <a {...commonProps} href={to}>\n        {children}\n      </a>\n    );\n  }\n};\n\n\nconst links = [\n  [\"/rss.xml\", FaRss, root(\"links.rss\"), \"href\"],\n] as const;\n\nconst HomePage: React.FunctionComponent = () => {\n\n  const metadataStore = useStore(MetadataStore);\n\n  return (\n    <HeaderFooterLayout transparentHeader={true}>\n      <PageMetadata\n        titleId={\"pageMedatadata.homepage\"}\n      />\n      <Bg>\n        <TextContent>\n          <TitleText>\n            <Localized id={root(\"hello\")} />\n          </TitleText>\n          <Slogan><Localized id={root(\"from\")} /></Slogan>\n          <LinkContainer>\n            <Button to=\"/posts\">\n              <FaBookOpen />\n              <Localized\n                id={root(\"links.posts\")}\n                args={[metadataStore.articleCount]}\n              />\n            </Button>\n            {links.map(([to, Icon, id, mode = \"to\"]) => (\n              <Button key={to} to={to} mode={mode as \"href\" | \"to\"}>\n                <Icon />\n                <Localized id={id} />\n              </Button>\n            ))}\n          </LinkContainer>\n          <Contacts size={1.6} color={\"white\"} />\n          <p>\n            <FaClock />\n            <Localized id={\"statistics.lastUpdated\"} />ï¼š\n            <strong> {metadataStore.siteMetadata.formattedLastUpdate}</strong>\n          </p>\n        </TextContent>\n\n      </Bg>\n    </HeaderFooterLayout >\n  );\n};\n\nexport default HomePage;\n"],"names":["RootContainer","styled","InnerContainer","Bg","withConfig","colors","bgImg","TextContent","moveInAnimation","TitleText","Slogan","LinkContainer","root","prefix","Button","to","mode","children","metadataStore","useStore","MetadataStore","commonProps","useI18n","className","key","React","Link","startsWith","getArticle","path","href","links","FaRss","HeaderFooterLayout","transparentHeader","PageMetadata","titleId","Localized","id","FaBookOpen","args","articleCount","map","Icon","Contacts","size","color","FaClock","siteMetadata","formattedLastUpdate"],"sourceRoot":""}