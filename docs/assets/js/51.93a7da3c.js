(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{355:function(t,a,s){"use strict";s.r(a);var e=s(6),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("yt-dlp是从youtube-dl中fork出来的一个分支，担负着继续维护的重任。\nyt-dlp继承了youtube-dl所有的命令，并且还修复了youtube-dl下载速度过慢的bug。")]),t._v(" "),a("p",[t._v("本文介绍了如何使用yt-dlp，将youtube的视频转化为mp3.")]),t._v(" "),a("p",[t._v("项目github页面: https://github.com/yt-dlp/yt-dlp")]),t._v(" "),a("h2",{attrs:{id:"基本环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本环境"}},[t._v("#")]),t._v(" 基本环境")]),t._v(" "),a("p",[t._v("在mac下，只需要brew命令，即可完成安装")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装基本命令")]),t._v("\nbrew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" yt-dlp\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装转码器")]),t._v("\nbrew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" ffmpeg\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装多线程下载工具")]),t._v("\nbrew "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" aria2\n")])])]),a("h2",{attrs:{id:"下载命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下载命令"}},[t._v("#")]),t._v(" 下载命令")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("yt-dlp --ignore-errors  --output "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%(title)s.%(ext)s"')]),t._v(" --audio-quality 160K --extract-audio  --audio-format mp3 --proxy "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1:6152  --cookies cookies.txt --external-downloader aria2c --external-downloader-args "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-x 4"')]),t._v(" --playlist-start "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("94")]),t._v(" --yes-playlist "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n")])])]),a("p",[t._v("命令说明：")]),t._v(" "),a("ul",[a("li",[t._v("--ignore-errors 如果发生错误，请继续下载。例如，跳过已删除的播放列表中的视频或跳过您所在国家/地区不可用的视频。")]),t._v(" "),a("li",[t._v("--proxy 使用代理进行下载")]),t._v(" "),a("li",[t._v("--cookies cookies.txt 保存cookie到文件，在有些私人网站上下载非常游泳")]),t._v(" "),a("li",[t._v("--external-downloader aria2c 指定下载器为aria2c")]),t._v(" "),a("li",[t._v('--external-downloader-args "-x 4" 指定aria2c 使用4个线程进行下载')]),t._v(" "),a("li",[t._v("--format bestaudio 下载可用的最佳音频质量格式")]),t._v(" "),a("li",[t._v("--extract-audio 从视频中提取音频")]),t._v(" "),a("li",[t._v("--audio-format mp3 指定音频格式-在这种情况下为mp3")]),t._v(" "),a("li",[t._v("--audio-quality 160K 指定在这种情况下转换为mp3时ffmpeg / avconv使用的音频质量。")]),t._v(" "),a("li",[t._v('--output "%(title)s.%(ext)s" 代表 输出文件名模板')]),t._v(" "),a("li",[t._v("--playlist-start 94 从播放列表的第94个开始下载，默认为1")]),t._v(" "),a("li",[t._v("--yes-playlist 即使URL指向视频和播放列表，也要下载整个播放列表。")]),t._v(" "),a("li",[t._v("'' 是要下载的YouTube播放列表的URL。")])])])}),[],!1,null,null,null);a.default=r.exports}}]);