{
    "componentChunkName": "component---src-templates-topic-page-template-tsx",
    "path": "/topic/系统设计/系统常见故障",
    "result": {"pageContext":{"id":"/topic/系统设计/系统常见故障","htmlAst":{"type":"root","children":[{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"一位网站资深架构师曾经说过：在互联网公司呆一年，相当于在传统软件公司呆三年。他的意思大概是在互联网公司一年遇到的问题比传统软件公司三年遇到的问题还多。而且随着网站业务的快速发展，问题也层出不穷，每年遇到的问题都不同。遇到问题，解决问题，经历了这个过程，技术才能升华，人和技术才能融为一体，才知道什么技术是真正有用的，什么技术是花拳绣腿。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"大型网站的技术本质都很简单，没有很花哨的东西，掌握起来也不难。大型网站的架构师最有价值的地方不在于他们掌握了多少技术，而在于他们经历过多少故障。每一次故障都会给公司带来难以估计的利益损失，所以培养一个网站架构师的成本不单要看付了他多少薪水，给了他多少股票，还要看为他引起的故障买了多少次单。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　这里列举一些网站的典型故障，我们会发现，在高并发和海量数据的情况下，很多一般情况下不是问题的问题都会涌现出来。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"写日志引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这个在初次上线的时候是很常见的错误，在线上遇到过多次，尤其在节约资源的情况下多个jar部署到同一台机器上，频繁打日志导致磁盘满了"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"故障现象"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　某应用服务器集群发布后不久就出现多台服务器相继报警，硬盘可用空间低于警戒值，并且很快有服务器宕机。登录到线上服务器，发现log文件夹里的文件迅速增加，不断消耗磁盘空间。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"原因分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　这是一个普通的应用服务器集群，不需要存储数据，因此服务器里配置的是一块100GB的小硬盘，安装完操作系统、Web服务器、Java虚拟机、应用程序后，空闲空间只有几十GB了，正常情况下这些磁盘空间足够了，但是该应用的开发人员将log输出的level全局配置为Debug。这样一次简单的Web请求就会产生大量的log文件输出，在高并发的用户请求下，很快就消耗完不多的磁盘空间。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"应用程序自己的日志输出配置和第三方组件日志输出要分别配置。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"检查log配置文件，日志输出级别至少为Warn，并且检查log输出代码调用，调用级别要符合其真实日志级别。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"有些开源的第三方组件也会不恰当地输出太多的Error日志，需要关闭这些第三方库的日志输出，至于哪些第三方库有问题，只有在遇到问题时才知道。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"不输出到磁盘，直接输出到三方服务中，比如阿里云的SLS（要注意网络阻塞的问题）"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"高并发访问数据库引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"高并发下常见的问题，SQL查询频繁，即使很简单的SQL也容易引发CPU暴涨"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"故障现象"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　某应用发布后，数据库Load居高不下，远超过正常水平，持续报警。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"原因分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　检查数据库，发现报警是因为某条SQL引起的，这条SQL是一条简单的有索引的数据查询，不应该引发报警。继续检查，发现这条SQL执行频率非常高，远远超过正常水平。追查这条SQL，发现被网站首页应用调用，首页是被访问最频繁的网页，这条SQL被首页调用，也就被频繁执行了。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"首页不应该访问数据库，首页需要的数据可以从缓存服务器或者搜索引擎服务器获取。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"首页最好是静态的。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"高并发情况下锁引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"并发下，容易形成资源竞争"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"大多数情况下不常见，有幸见过几次是在用activiti的时候前端连续点击重复请求，导致并发启动形成死锁"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"故障现象"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 某应用服务器不定时地因为响应超时而报警，但是很快又超时解除，恢复正常，如此反复，让运维人员非常苦恼。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"原因分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　程序中某个单例对象（singleton object）中多处使用了synchronized（this），由于this对象只有一个，所有的并发请求都要排队获得这唯一的一把锁。一般情况下，都是一些简单操作，获得锁，迅速完成操作，释放锁，不会引起线程排队。但是某个需要远程调用的操作也被加了synchronized（this），这个操作只是偶尔会被执行，但是每次执行都需要较长的时间才能完成，这段时间锁被占用，所有的用户线程都要等待，响应超时，这个操作执行完后释放锁，其他线程迅速执行，超时解除。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"使用锁操作要谨慎。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"缓存引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这就是典型的缓存雪崩现象 请求全部都打入数据库中。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可以看："},{"type":"element","tagName":"a","properties":{"href":"/topic/redis/Redis%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/%E7%BC%93%E5%AD%98%E9%9B%AA%E5%B4%A9"},"children":[{"type":"text","value":"《缓存雪崩解决方案》"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"故障现象"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　没有新应用发布，但是数据库服务器突然Load飙升，并很快失去响应。DBA将数据库访问切换到备机，Load也很快飙升，并失去响应。最终引发网站全部瘫痪。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"原因分析"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　缓存服务器在网站服务器集群中的地位一直比较低，服务器配置和管理级别都比其他服务器要低一些。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　人们都认为缓存是改善性能的手段，丢失一些缓存也没什么问题，有时候关闭一两台缓存服务器也确实对应用没有明显影响，所以长期疏于管理缓存服务器。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　结果这次一个缺乏经验的工程师关闭了缓存服务器集群中全部的十几台缓存服务器，导致了网站全部瘫痪的重大事故。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当缓存已经不仅仅是改善性能，而是成为网站架构不可或缺的一部分时，对缓存的管理就需要提高到和其他服务器一样的级别。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"应用启动不同步引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Spring Cloud中常用的Feign 组件，这个鬼东西是采用懒加载的方案，在用的时候才将Feign实例装载到Spring容器中。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"所以，第一次请求过来的时候，会大量初始化Feign组件，导致请求缓慢，甚至于导致服务崩溃。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"故障现象"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　某应用发布后，服务器立即崩溃。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"原因分析"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　应用程序Web环境使用ApacheAJBoss的模式，用户请求通过Apache转发JBoss。在发布时，Apache和JBoss同时启动，由于JBoss启动时需要加载很多应用并初始化，花费时间较长，结果JBoss还没有完全启动，Apache就已经启动完毕开始接收用户请求，大量请求阻塞在JBoss进程中，最终导致JBoss崩溃。除了这种Apache和JBoss启动不同步的情况，网站还有很多类似的场景，都需要后台服务准备好，前台应用才能启动，否则就会导致故障。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　这种情况被内部人戏称作“姑娘们还没穿好衣服，老鸨就开门迎客了”。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"老鸨开门前要检查下姑娘们是否穿好了衣服。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"就本例来说，在应用程序中加入一个特定的动态页面（比如只返回OK两个字母），启动脚本先启动JBoss，然后在脚本中不断用curl命令访问这个特定页面，直到收到OK，才启动Apache。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"大文件读写独占磁盘引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"现在大多数 文件读写 会用到CDN厂商对应服务，比如七牛云的多媒体文件处理"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"专业的事情交给专业的人去做，就会少很多bug"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"故障现象"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　某应用主要功能是管理用户图片，接到部分用户投诉，表示上传图片非常慢，原来只需要一两秒，现在需要几十秒，有时等半天结果浏览器显示服务器超时。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"原因分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　图片需要使用存储，最有可能出错的地方是存储服务器。检查存储服务器，发现大部分文件只有几百KB，而有几个文件非常大，有数百兆，读写这些大文件一次需要几十秒，这段时间，磁盘基本被这个文件操作独占，导致其他用户的文件操作缓慢。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"存储的使用需要根据不同文件类型和用途进行管理，图片都是小文件，应该使用专用的存储服务器，不能和大文件共用存储。批处理用的大文件可以使用其他类型的分布式文件系统。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"滥用生产环境引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"网站数据库有专门的DBA维护，如果发现数据库存在错误记录，需要进行数据订正，必须走数据订正流程，申请DBA协助。于是就有工程师为避免麻烦，直接写一段数据库更新操作的代码，悄悄放到生产环境应用服务器上执行，神不知鬼不觉地订正了数据。但是如果不小心写错了SQL，后果可想而知。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"故障现象"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 监控发现某个时段内，某些应用突然变慢，内部网络访问延迟非常厉害。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"原因分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 检查发现，该时段内网卡流量也下降，但是没有找到原因。过了一阵子才知道，原来有工程师在线上生产环境进行性能压力测试，占用了大部分交换机带宽。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"访问线上生产环境要规范，不小心就会导致大事故。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"不规范的流程引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"规范的发布流程，可以避免至少50%的问题"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"故障现象"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 某应用发布后，数据库Load迅速飙升，超过报警值，回滚发布后报警消除。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"原因分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 发现该应用发布后出现大量数据库读操作，而这些数据本来应该从分布式缓存读取。检查缓存，发现数据已经被缓存了。检查代码，发现访问缓存的那行代码被注释掉了。原来工程师在开发的时候，为了测试方便，特意注释掉读取缓存的代码，结果开发完成后忘记把注释去掉，直接提交到代码库被发布到线上环境。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"代码提交前使用diff命令进行代码比较，确认没有提交不该提交的代码。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"加强code review，代码在正式提交前必须被至少一个其他工程师做过code review，并且共同承担因代码引起的故障责任。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"不好的编程习惯引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"故障现象"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　某应用更新某功能后，有少量用户投诉无法正常访问该功能，一点击就显示出错信息。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"原因分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　分析这些用户，都是第一次使用该功能，检查代码，发现程序根据历史使用记录构造一个对象，如果该对象为null，就会导致NullPointException。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"程序在处理一个输入的对象时，如果不能明确该对象是否为空，必须做空指针判断。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"程序在调用其他方法时，输入的对象尽量保证不是null，必要时构造空对象（使用空对象模式）。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　link: "},{"type":"element","tagName":"a","properties":{"href":"https://u.jd.com/HIU9RxJ"},"children":[{"type":"text","value":"《大型网站技术架构》"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"style","properties":{"className":["grvsc-styles"]},"children":[{"type":"text","value":"\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n"}]}],"data":{"quirksMode":false}},"html":"<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">一位网站资深架构师曾经说过：在互联网公司呆一年，相当于在传统软件公司呆三年。他的意思大概是在互联网公司一年遇到的问题比传统软件公司三年遇到的问题还多。而且随着网站业务的快速发展，问题也层出不穷，每年遇到的问题都不同。遇到问题，解决问题，经历了这个过程，技术才能升华，人和技术才能融为一体，才知道什么技术是真正有用的，什么技术是花拳绣腿。</p>\n</blockquote>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">大型网站的技术本质都很简单，没有很花哨的东西，掌握起来也不难。大型网站的架构师最有价值的地方不在于他们掌握了多少技术，而在于他们经历过多少故障。每一次故障都会给公司带来难以估计的利益损失，所以培养一个网站架构师的成本不单要看付了他多少薪水，给了他多少股票，还要看为他引起的故障买了多少次单。</p>\n</blockquote>\n<p updated=\"20220808111208\">　　这里列举一些网站的典型故障，我们会发现，在高并发和海量数据的情况下，很多一般情况下不是问题的问题都会涌现出来。</p>\n<h1 id=\"写日志引发的故障\">写日志引发的故障</h1>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">这个在初次上线的时候是很常见的错误，在线上遇到过多次，尤其在节约资源的情况下多个jar部署到同一台机器上，频繁打日志导致磁盘满了</p>\n</blockquote>\n<h2 id=\"故障现象\"><strong>故障现象</strong></h2>\n<p updated=\"20220808111208\">　　某应用服务器集群发布后不久就出现多台服务器相继报警，硬盘可用空间低于警戒值，并且很快有服务器宕机。登录到线上服务器，发现log文件夹里的文件迅速增加，不断消耗磁盘空间。</p>\n<h2 id=\"原因分析\"><strong>原因分析</strong></h2>\n<p updated=\"20220808111208\">　　这是一个普通的应用服务器集群，不需要存储数据，因此服务器里配置的是一块100GB的小硬盘，安装完操作系统、Web服务器、Java虚拟机、应用程序后，空闲空间只有几十GB了，正常情况下这些磁盘空间足够了，但是该应用的开发人员将log输出的level全局配置为Debug。这样一次简单的Web请求就会产生大量的log文件输出，在高并发的用户请求下，很快就消耗完不多的磁盘空间。</p>\n<h2 id=\"经验教训\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-343qw46\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">应用程序自己的日志输出配置和第三方组件日志输出要分别配置。</p>\n</li>\n<li id=\"20220808111208-fff5owq\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">检查log配置文件，日志输出级别至少为Warn，并且检查log输出代码调用，调用级别要符合其真实日志级别。</p>\n</li>\n<li id=\"20220808111208-dkwln8l\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">有些开源的第三方组件也会不恰当地输出太多的Error日志，需要关闭这些第三方库的日志输出，至于哪些第三方库有问题，只有在遇到问题时才知道。</p>\n</li>\n<li id=\"20220808111208-87o31r6\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">不输出到磁盘，直接输出到三方服务中，比如阿里云的SLS（要注意网络阻塞的问题）</p>\n</li>\n</ul>\n<h2 id=\"高并发访问数据库引发的故障\">高并发访问数据库引发的故障</h2>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">高并发下常见的问题，SQL查询频繁，即使很简单的SQL也容易引发CPU暴涨</p>\n</blockquote>\n<h2 id=\"故障现象-\"><strong>故障现象</strong></h2>\n<p updated=\"20220808111208\">　　某应用发布后，数据库Load居高不下，远超过正常水平，持续报警。</p>\n<h2 id=\"原因分析-\"><strong>原因分析</strong></h2>\n<p updated=\"20220808111208\">　　检查数据库，发现报警是因为某条SQL引起的，这条SQL是一条简单的有索引的数据查询，不应该引发报警。继续检查，发现这条SQL执行频率非常高，远远超过正常水平。追查这条SQL，发现被网站首页应用调用，首页是被访问最频繁的网页，这条SQL被首页调用，也就被频繁执行了。</p>\n<h2 id=\"经验教训-\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-cabqv9a\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">首页不应该访问数据库，首页需要的数据可以从缓存服务器或者搜索引擎服务器获取。</p>\n</li>\n<li id=\"20220808111208-n41ejt0\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">首页最好是静态的。</p>\n</li>\n</ul>\n<h1 id=\"高并发情况下锁引发的故障\">高并发情况下锁引发的故障</h1>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">并发下，容易形成资源竞争</p>\n<p updated=\"20220808111208\">大多数情况下不常见，有幸见过几次是在用activiti的时候前端连续点击重复请求，导致并发启动形成死锁</p>\n</blockquote>\n<h2 id=\"故障现象--\"><strong>故障现象</strong></h2>\n<p updated=\"20220808111208\">　　 某应用服务器不定时地因为响应超时而报警，但是很快又超时解除，恢复正常，如此反复，让运维人员非常苦恼。</p>\n<h2 id=\"原因分析--\"><strong>原因分析</strong></h2>\n<p updated=\"20220808111208\">　　程序中某个单例对象（singleton object）中多处使用了synchronized（this），由于this对象只有一个，所有的并发请求都要排队获得这唯一的一把锁。一般情况下，都是一些简单操作，获得锁，迅速完成操作，释放锁，不会引起线程排队。但是某个需要远程调用的操作也被加了synchronized（this），这个操作只是偶尔会被执行，但是每次执行都需要较长的时间才能完成，这段时间锁被占用，所有的用户线程都要等待，响应超时，这个操作执行完后释放锁，其他线程迅速执行，超时解除。</p>\n<h2 id=\"经验教训--\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-vt48nwk\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">使用锁操作要谨慎。</p>\n</li>\n</ul>\n<h2 id=\"缓存引发的故障\">缓存引发的故障</h2>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">这就是典型的缓存雪崩现象 请求全部都打入数据库中。</p>\n<p updated=\"20220808111208\">可以看：<a href=\"/topic/redis/Redis%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/%E7%BC%93%E5%AD%98%E9%9B%AA%E5%B4%A9\">《缓存雪崩解决方案》</a></p>\n</blockquote>\n<h2 id=\"故障现象---\">故障现象</h2>\n<p updated=\"20220808111208\">　　没有新应用发布，但是数据库服务器突然Load飙升，并很快失去响应。DBA将数据库访问切换到备机，Load也很快飙升，并失去响应。最终引发网站全部瘫痪。</p>\n<h2 id=\"原因分析---\">原因分析</h2>\n<p updated=\"20220808111208\">　　缓存服务器在网站服务器集群中的地位一直比较低，服务器配置和管理级别都比其他服务器要低一些。</p>\n<p updated=\"20220808111208\">　　人们都认为缓存是改善性能的手段，丢失一些缓存也没什么问题，有时候关闭一两台缓存服务器也确实对应用没有明显影响，所以长期疏于管理缓存服务器。</p>\n<p updated=\"20220808111208\">　　结果这次一个缺乏经验的工程师关闭了缓存服务器集群中全部的十几台缓存服务器，导致了网站全部瘫痪的重大事故。</p>\n<h2 id=\"经验教训---\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-c1hpf1e\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">当缓存已经不仅仅是改善性能，而是成为网站架构不可或缺的一部分时，对缓存的管理就需要提高到和其他服务器一样的级别。</p>\n</li>\n</ul>\n<h1 id=\"应用启动不同步引发的故障\">应用启动不同步引发的故障</h1>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">Spring Cloud中常用的Feign 组件，这个鬼东西是采用懒加载的方案，在用的时候才将Feign实例装载到Spring容器中。</p>\n<p updated=\"20220808111208\">所以，第一次请求过来的时候，会大量初始化Feign组件，导致请求缓慢，甚至于导致服务崩溃。</p>\n</blockquote>\n<h2 id=\"故障现象----\">故障现象</h2>\n<p updated=\"20220808111208\">　　某应用发布后，服务器立即崩溃。</p>\n<h2 id=\"原因分析----\">原因分析</h2>\n<p updated=\"20220808111208\">　　应用程序Web环境使用ApacheAJBoss的模式，用户请求通过Apache转发JBoss。在发布时，Apache和JBoss同时启动，由于JBoss启动时需要加载很多应用并初始化，花费时间较长，结果JBoss还没有完全启动，Apache就已经启动完毕开始接收用户请求，大量请求阻塞在JBoss进程中，最终导致JBoss崩溃。除了这种Apache和JBoss启动不同步的情况，网站还有很多类似的场景，都需要后台服务准备好，前台应用才能启动，否则就会导致故障。</p>\n<p updated=\"20220808111208\">　　这种情况被内部人戏称作“姑娘们还没穿好衣服，老鸨就开门迎客了”。</p>\n<h2 id=\"经验教训----\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-7zgjh05\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">老鸨开门前要检查下姑娘们是否穿好了衣服。</p>\n</li>\n<li id=\"20220808111208-0t9l32m\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">就本例来说，在应用程序中加入一个特定的动态页面（比如只返回OK两个字母），启动脚本先启动JBoss，然后在脚本中不断用curl命令访问这个特定页面，直到收到OK，才启动Apache。</p>\n</li>\n</ul>\n<h1 id=\"大文件读写独占磁盘引发的故障\">大文件读写独占磁盘引发的故障</h1>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">现在大多数 文件读写 会用到CDN厂商对应服务，比如七牛云的多媒体文件处理</p>\n<p updated=\"20220808111208\">专业的事情交给专业的人去做，就会少很多bug</p>\n</blockquote>\n<h2 id=\"故障现象-----\"><strong>故障现象</strong></h2>\n<p updated=\"20220808111208\">　　某应用主要功能是管理用户图片，接到部分用户投诉，表示上传图片非常慢，原来只需要一两秒，现在需要几十秒，有时等半天结果浏览器显示服务器超时。</p>\n<h2 id=\"原因分析-----\"><strong>原因分析</strong></h2>\n<p updated=\"20220808111208\">　　图片需要使用存储，最有可能出错的地方是存储服务器。检查存储服务器，发现大部分文件只有几百KB，而有几个文件非常大，有数百兆，读写这些大文件一次需要几十秒，这段时间，磁盘基本被这个文件操作独占，导致其他用户的文件操作缓慢。</p>\n<h2 id=\"经验教训-----\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-1gbu3wf\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">存储的使用需要根据不同文件类型和用途进行管理，图片都是小文件，应该使用专用的存储服务器，不能和大文件共用存储。批处理用的大文件可以使用其他类型的分布式文件系统。</p>\n</li>\n</ul>\n<h1 id=\"滥用生产环境引发的故障\">滥用生产环境引发的故障</h1>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">网站数据库有专门的DBA维护，如果发现数据库存在错误记录，需要进行数据订正，必须走数据订正流程，申请DBA协助。于是就有工程师为避免麻烦，直接写一段数据库更新操作的代码，悄悄放到生产环境应用服务器上执行，神不知鬼不觉地订正了数据。但是如果不小心写错了SQL，后果可想而知。</p>\n</blockquote>\n<h2 id=\"故障现象------\"><strong>故障现象</strong></h2>\n<p updated=\"20220808111208\">　　 监控发现某个时段内，某些应用突然变慢，内部网络访问延迟非常厉害。</p>\n<h2 id=\"原因分析------\"><strong>原因分析</strong></h2>\n<p updated=\"20220808111208\">　　 检查发现，该时段内网卡流量也下降，但是没有找到原因。过了一阵子才知道，原来有工程师在线上生产环境进行性能压力测试，占用了大部分交换机带宽。</p>\n<h2 id=\"经验教训------\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-h1l5esv\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">访问线上生产环境要规范，不小心就会导致大事故。</p>\n</li>\n</ul>\n<h1 id=\"不规范的流程引发的故障\">不规范的流程引发的故障</h1>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">规范的发布流程，可以避免至少50%的问题</p>\n</blockquote>\n<h2 id=\"故障现象-------\"><strong>故障现象</strong></h2>\n<p updated=\"20220808111208\">　　 某应用发布后，数据库Load迅速飙升，超过报警值，回滚发布后报警消除。</p>\n<h2 id=\"原因分析-------\"><strong>原因分析</strong></h2>\n<p updated=\"20220808111208\">　　 发现该应用发布后出现大量数据库读操作，而这些数据本来应该从分布式缓存读取。检查缓存，发现数据已经被缓存了。检查代码，发现访问缓存的那行代码被注释掉了。原来工程师在开发的时候，为了测试方便，特意注释掉读取缓存的代码，结果开发完成后忘记把注释去掉，直接提交到代码库被发布到线上环境。</p>\n<h2 id=\"经验教训-------\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-fgr4if4\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">代码提交前使用diff命令进行代码比较，确认没有提交不该提交的代码。</p>\n</li>\n<li id=\"20220808111208-kgtc3yt\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">加强code review，代码在正式提交前必须被至少一个其他工程师做过code review，并且共同承担因代码引起的故障责任。</p>\n</li>\n</ul>\n<h2 id=\"不好的编程习惯引发的故障\">不好的编程习惯引发的故障</h2>\n<h2 id=\"故障现象--------\"><strong>故障现象</strong></h2>\n<p updated=\"20220808111208\">　　某应用更新某功能后，有少量用户投诉无法正常访问该功能，一点击就显示出错信息。</p>\n<h2 id=\"原因分析--------\"><strong>原因分析</strong></h2>\n<p updated=\"20220808111208\">　　分析这些用户，都是第一次使用该功能，检查代码，发现程序根据历史使用记录构造一个对象，如果该对象为null，就会导致NullPointException。</p>\n<h2 id=\"经验教训--------\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-pw4e0t5\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">程序在处理一个输入的对象时，如果不能明确该对象是否为空，必须做空指针判断。</p>\n</li>\n<li id=\"20220808111208-48fg344\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">程序在调用其他方法时，输入的对象尽量保证不是null，必要时构造空对象（使用空对象模式）。</p>\n</li>\n</ul>\n<p updated=\"20220808111208\">　　link: <a href=\"https://u.jd.com/HIU9RxJ\">《大型网站技术架构》</a></p>\n","articleNode":{"field":{"contentType":"topic","topic":"系统设计"},"frontmatter":{"id":"/topic/系统设计/系统常见故障","title":"系统常见故障","date":"2022-08-02 20:40","absolute_path":"/topic/系统设计/系统常见故障"},"htmlAst":{"type":"root","children":[{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"一位网站资深架构师曾经说过：在互联网公司呆一年，相当于在传统软件公司呆三年。他的意思大概是在互联网公司一年遇到的问题比传统软件公司三年遇到的问题还多。而且随着网站业务的快速发展，问题也层出不穷，每年遇到的问题都不同。遇到问题，解决问题，经历了这个过程，技术才能升华，人和技术才能融为一体，才知道什么技术是真正有用的，什么技术是花拳绣腿。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"大型网站的技术本质都很简单，没有很花哨的东西，掌握起来也不难。大型网站的架构师最有价值的地方不在于他们掌握了多少技术，而在于他们经历过多少故障。每一次故障都会给公司带来难以估计的利益损失，所以培养一个网站架构师的成本不单要看付了他多少薪水，给了他多少股票，还要看为他引起的故障买了多少次单。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　这里列举一些网站的典型故障，我们会发现，在高并发和海量数据的情况下，很多一般情况下不是问题的问题都会涌现出来。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"写日志引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这个在初次上线的时候是很常见的错误，在线上遇到过多次，尤其在节约资源的情况下多个jar部署到同一台机器上，频繁打日志导致磁盘满了"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"故障现象"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　某应用服务器集群发布后不久就出现多台服务器相继报警，硬盘可用空间低于警戒值，并且很快有服务器宕机。登录到线上服务器，发现log文件夹里的文件迅速增加，不断消耗磁盘空间。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"原因分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　这是一个普通的应用服务器集群，不需要存储数据，因此服务器里配置的是一块100GB的小硬盘，安装完操作系统、Web服务器、Java虚拟机、应用程序后，空闲空间只有几十GB了，正常情况下这些磁盘空间足够了，但是该应用的开发人员将log输出的level全局配置为Debug。这样一次简单的Web请求就会产生大量的log文件输出，在高并发的用户请求下，很快就消耗完不多的磁盘空间。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"应用程序自己的日志输出配置和第三方组件日志输出要分别配置。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"检查log配置文件，日志输出级别至少为Warn，并且检查log输出代码调用，调用级别要符合其真实日志级别。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"有些开源的第三方组件也会不恰当地输出太多的Error日志，需要关闭这些第三方库的日志输出，至于哪些第三方库有问题，只有在遇到问题时才知道。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"不输出到磁盘，直接输出到三方服务中，比如阿里云的SLS（要注意网络阻塞的问题）"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"高并发访问数据库引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"高并发下常见的问题，SQL查询频繁，即使很简单的SQL也容易引发CPU暴涨"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"故障现象"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　某应用发布后，数据库Load居高不下，远超过正常水平，持续报警。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"原因分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　检查数据库，发现报警是因为某条SQL引起的，这条SQL是一条简单的有索引的数据查询，不应该引发报警。继续检查，发现这条SQL执行频率非常高，远远超过正常水平。追查这条SQL，发现被网站首页应用调用，首页是被访问最频繁的网页，这条SQL被首页调用，也就被频繁执行了。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"首页不应该访问数据库，首页需要的数据可以从缓存服务器或者搜索引擎服务器获取。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"首页最好是静态的。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"高并发情况下锁引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"并发下，容易形成资源竞争"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"大多数情况下不常见，有幸见过几次是在用activiti的时候前端连续点击重复请求，导致并发启动形成死锁"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"故障现象"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 某应用服务器不定时地因为响应超时而报警，但是很快又超时解除，恢复正常，如此反复，让运维人员非常苦恼。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"原因分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　程序中某个单例对象（singleton object）中多处使用了synchronized（this），由于this对象只有一个，所有的并发请求都要排队获得这唯一的一把锁。一般情况下，都是一些简单操作，获得锁，迅速完成操作，释放锁，不会引起线程排队。但是某个需要远程调用的操作也被加了synchronized（this），这个操作只是偶尔会被执行，但是每次执行都需要较长的时间才能完成，这段时间锁被占用，所有的用户线程都要等待，响应超时，这个操作执行完后释放锁，其他线程迅速执行，超时解除。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"使用锁操作要谨慎。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"缓存引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这就是典型的缓存雪崩现象 请求全部都打入数据库中。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可以看："},{"type":"element","tagName":"a","properties":{"href":"/topic/redis/Redis%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/%E7%BC%93%E5%AD%98%E9%9B%AA%E5%B4%A9"},"children":[{"type":"text","value":"《缓存雪崩解决方案》"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"故障现象"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　没有新应用发布，但是数据库服务器突然Load飙升，并很快失去响应。DBA将数据库访问切换到备机，Load也很快飙升，并失去响应。最终引发网站全部瘫痪。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"原因分析"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　缓存服务器在网站服务器集群中的地位一直比较低，服务器配置和管理级别都比其他服务器要低一些。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　人们都认为缓存是改善性能的手段，丢失一些缓存也没什么问题，有时候关闭一两台缓存服务器也确实对应用没有明显影响，所以长期疏于管理缓存服务器。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　结果这次一个缺乏经验的工程师关闭了缓存服务器集群中全部的十几台缓存服务器，导致了网站全部瘫痪的重大事故。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"当缓存已经不仅仅是改善性能，而是成为网站架构不可或缺的一部分时，对缓存的管理就需要提高到和其他服务器一样的级别。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"应用启动不同步引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Spring Cloud中常用的Feign 组件，这个鬼东西是采用懒加载的方案，在用的时候才将Feign实例装载到Spring容器中。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"所以，第一次请求过来的时候，会大量初始化Feign组件，导致请求缓慢，甚至于导致服务崩溃。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"故障现象"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　某应用发布后，服务器立即崩溃。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"原因分析"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　应用程序Web环境使用ApacheAJBoss的模式，用户请求通过Apache转发JBoss。在发布时，Apache和JBoss同时启动，由于JBoss启动时需要加载很多应用并初始化，花费时间较长，结果JBoss还没有完全启动，Apache就已经启动完毕开始接收用户请求，大量请求阻塞在JBoss进程中，最终导致JBoss崩溃。除了这种Apache和JBoss启动不同步的情况，网站还有很多类似的场景，都需要后台服务准备好，前台应用才能启动，否则就会导致故障。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　这种情况被内部人戏称作“姑娘们还没穿好衣服，老鸨就开门迎客了”。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"老鸨开门前要检查下姑娘们是否穿好了衣服。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"就本例来说，在应用程序中加入一个特定的动态页面（比如只返回OK两个字母），启动脚本先启动JBoss，然后在脚本中不断用curl命令访问这个特定页面，直到收到OK，才启动Apache。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"大文件读写独占磁盘引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"现在大多数 文件读写 会用到CDN厂商对应服务，比如七牛云的多媒体文件处理"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"专业的事情交给专业的人去做，就会少很多bug"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"故障现象"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　某应用主要功能是管理用户图片，接到部分用户投诉，表示上传图片非常慢，原来只需要一两秒，现在需要几十秒，有时等半天结果浏览器显示服务器超时。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"原因分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　图片需要使用存储，最有可能出错的地方是存储服务器。检查存储服务器，发现大部分文件只有几百KB，而有几个文件非常大，有数百兆，读写这些大文件一次需要几十秒，这段时间，磁盘基本被这个文件操作独占，导致其他用户的文件操作缓慢。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"存储的使用需要根据不同文件类型和用途进行管理，图片都是小文件，应该使用专用的存储服务器，不能和大文件共用存储。批处理用的大文件可以使用其他类型的分布式文件系统。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"滥用生产环境引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"网站数据库有专门的DBA维护，如果发现数据库存在错误记录，需要进行数据订正，必须走数据订正流程，申请DBA协助。于是就有工程师为避免麻烦，直接写一段数据库更新操作的代码，悄悄放到生产环境应用服务器上执行，神不知鬼不觉地订正了数据。但是如果不小心写错了SQL，后果可想而知。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"故障现象"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 监控发现某个时段内，某些应用突然变慢，内部网络访问延迟非常厉害。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"原因分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 检查发现，该时段内网卡流量也下降，但是没有找到原因。过了一阵子才知道，原来有工程师在线上生产环境进行性能压力测试，占用了大部分交换机带宽。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"访问线上生产环境要规范，不小心就会导致大事故。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"不规范的流程引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"规范的发布流程，可以避免至少50%的问题"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"故障现象"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 某应用发布后，数据库Load迅速飙升，超过报警值，回滚发布后报警消除。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"原因分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　 发现该应用发布后出现大量数据库读操作，而这些数据本来应该从分布式缓存读取。检查缓存，发现数据已经被缓存了。检查代码，发现访问缓存的那行代码被注释掉了。原来工程师在开发的时候，为了测试方便，特意注释掉读取缓存的代码，结果开发完成后忘记把注释去掉，直接提交到代码库被发布到线上环境。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"代码提交前使用diff命令进行代码比较，确认没有提交不该提交的代码。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"加强code review，代码在正式提交前必须被至少一个其他工程师做过code review，并且共同承担因代码引起的故障责任。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"不好的编程习惯引发的故障"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"故障现象"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　某应用更新某功能后，有少量用户投诉无法正常访问该功能，一点击就显示出错信息。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"原因分析"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　分析这些用户，都是第一次使用该功能，检查代码，发现程序根据历史使用记录构造一个对象，如果该对象为null，就会导致NullPointException。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"经验教训"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"程序在处理一个输入的对象时，如果不能明确该对象是否为空，必须做空指针判断。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"程序在调用其他方法时，输入的对象尽量保证不是null，必要时构造空对象（使用空对象模式）。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　link: "},{"type":"element","tagName":"a","properties":{"href":"https://u.jd.com/HIU9RxJ"},"children":[{"type":"text","value":"《大型网站技术架构》"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"　　"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"style","properties":{"className":["grvsc-styles"]},"children":[{"type":"text","value":"\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n"}]}],"data":{"quirksMode":false}},"html":"<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">一位网站资深架构师曾经说过：在互联网公司呆一年，相当于在传统软件公司呆三年。他的意思大概是在互联网公司一年遇到的问题比传统软件公司三年遇到的问题还多。而且随着网站业务的快速发展，问题也层出不穷，每年遇到的问题都不同。遇到问题，解决问题，经历了这个过程，技术才能升华，人和技术才能融为一体，才知道什么技术是真正有用的，什么技术是花拳绣腿。</p>\n</blockquote>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">大型网站的技术本质都很简单，没有很花哨的东西，掌握起来也不难。大型网站的架构师最有价值的地方不在于他们掌握了多少技术，而在于他们经历过多少故障。每一次故障都会给公司带来难以估计的利益损失，所以培养一个网站架构师的成本不单要看付了他多少薪水，给了他多少股票，还要看为他引起的故障买了多少次单。</p>\n</blockquote>\n<p updated=\"20220808111208\">　　这里列举一些网站的典型故障，我们会发现，在高并发和海量数据的情况下，很多一般情况下不是问题的问题都会涌现出来。</p>\n<h1 id=\"写日志引发的故障\">写日志引发的故障</h1>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">这个在初次上线的时候是很常见的错误，在线上遇到过多次，尤其在节约资源的情况下多个jar部署到同一台机器上，频繁打日志导致磁盘满了</p>\n</blockquote>\n<h2 id=\"故障现象\"><strong>故障现象</strong></h2>\n<p updated=\"20220808111208\">　　某应用服务器集群发布后不久就出现多台服务器相继报警，硬盘可用空间低于警戒值，并且很快有服务器宕机。登录到线上服务器，发现log文件夹里的文件迅速增加，不断消耗磁盘空间。</p>\n<h2 id=\"原因分析\"><strong>原因分析</strong></h2>\n<p updated=\"20220808111208\">　　这是一个普通的应用服务器集群，不需要存储数据，因此服务器里配置的是一块100GB的小硬盘，安装完操作系统、Web服务器、Java虚拟机、应用程序后，空闲空间只有几十GB了，正常情况下这些磁盘空间足够了，但是该应用的开发人员将log输出的level全局配置为Debug。这样一次简单的Web请求就会产生大量的log文件输出，在高并发的用户请求下，很快就消耗完不多的磁盘空间。</p>\n<h2 id=\"经验教训\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-343qw46\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">应用程序自己的日志输出配置和第三方组件日志输出要分别配置。</p>\n</li>\n<li id=\"20220808111208-fff5owq\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">检查log配置文件，日志输出级别至少为Warn，并且检查log输出代码调用，调用级别要符合其真实日志级别。</p>\n</li>\n<li id=\"20220808111208-dkwln8l\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">有些开源的第三方组件也会不恰当地输出太多的Error日志，需要关闭这些第三方库的日志输出，至于哪些第三方库有问题，只有在遇到问题时才知道。</p>\n</li>\n<li id=\"20220808111208-87o31r6\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">不输出到磁盘，直接输出到三方服务中，比如阿里云的SLS（要注意网络阻塞的问题）</p>\n</li>\n</ul>\n<h2 id=\"高并发访问数据库引发的故障\">高并发访问数据库引发的故障</h2>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">高并发下常见的问题，SQL查询频繁，即使很简单的SQL也容易引发CPU暴涨</p>\n</blockquote>\n<h2 id=\"故障现象-\"><strong>故障现象</strong></h2>\n<p updated=\"20220808111208\">　　某应用发布后，数据库Load居高不下，远超过正常水平，持续报警。</p>\n<h2 id=\"原因分析-\"><strong>原因分析</strong></h2>\n<p updated=\"20220808111208\">　　检查数据库，发现报警是因为某条SQL引起的，这条SQL是一条简单的有索引的数据查询，不应该引发报警。继续检查，发现这条SQL执行频率非常高，远远超过正常水平。追查这条SQL，发现被网站首页应用调用，首页是被访问最频繁的网页，这条SQL被首页调用，也就被频繁执行了。</p>\n<h2 id=\"经验教训-\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-cabqv9a\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">首页不应该访问数据库，首页需要的数据可以从缓存服务器或者搜索引擎服务器获取。</p>\n</li>\n<li id=\"20220808111208-n41ejt0\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">首页最好是静态的。</p>\n</li>\n</ul>\n<h1 id=\"高并发情况下锁引发的故障\">高并发情况下锁引发的故障</h1>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">并发下，容易形成资源竞争</p>\n<p updated=\"20220808111208\">大多数情况下不常见，有幸见过几次是在用activiti的时候前端连续点击重复请求，导致并发启动形成死锁</p>\n</blockquote>\n<h2 id=\"故障现象--\"><strong>故障现象</strong></h2>\n<p updated=\"20220808111208\">　　 某应用服务器不定时地因为响应超时而报警，但是很快又超时解除，恢复正常，如此反复，让运维人员非常苦恼。</p>\n<h2 id=\"原因分析--\"><strong>原因分析</strong></h2>\n<p updated=\"20220808111208\">　　程序中某个单例对象（singleton object）中多处使用了synchronized（this），由于this对象只有一个，所有的并发请求都要排队获得这唯一的一把锁。一般情况下，都是一些简单操作，获得锁，迅速完成操作，释放锁，不会引起线程排队。但是某个需要远程调用的操作也被加了synchronized（this），这个操作只是偶尔会被执行，但是每次执行都需要较长的时间才能完成，这段时间锁被占用，所有的用户线程都要等待，响应超时，这个操作执行完后释放锁，其他线程迅速执行，超时解除。</p>\n<h2 id=\"经验教训--\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-vt48nwk\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">使用锁操作要谨慎。</p>\n</li>\n</ul>\n<h2 id=\"缓存引发的故障\">缓存引发的故障</h2>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">这就是典型的缓存雪崩现象 请求全部都打入数据库中。</p>\n<p updated=\"20220808111208\">可以看：<a href=\"/topic/redis/Redis%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98/%E7%BC%93%E5%AD%98%E9%9B%AA%E5%B4%A9\">《缓存雪崩解决方案》</a></p>\n</blockquote>\n<h2 id=\"故障现象---\">故障现象</h2>\n<p updated=\"20220808111208\">　　没有新应用发布，但是数据库服务器突然Load飙升，并很快失去响应。DBA将数据库访问切换到备机，Load也很快飙升，并失去响应。最终引发网站全部瘫痪。</p>\n<h2 id=\"原因分析---\">原因分析</h2>\n<p updated=\"20220808111208\">　　缓存服务器在网站服务器集群中的地位一直比较低，服务器配置和管理级别都比其他服务器要低一些。</p>\n<p updated=\"20220808111208\">　　人们都认为缓存是改善性能的手段，丢失一些缓存也没什么问题，有时候关闭一两台缓存服务器也确实对应用没有明显影响，所以长期疏于管理缓存服务器。</p>\n<p updated=\"20220808111208\">　　结果这次一个缺乏经验的工程师关闭了缓存服务器集群中全部的十几台缓存服务器，导致了网站全部瘫痪的重大事故。</p>\n<h2 id=\"经验教训---\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-c1hpf1e\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">当缓存已经不仅仅是改善性能，而是成为网站架构不可或缺的一部分时，对缓存的管理就需要提高到和其他服务器一样的级别。</p>\n</li>\n</ul>\n<h1 id=\"应用启动不同步引发的故障\">应用启动不同步引发的故障</h1>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">Spring Cloud中常用的Feign 组件，这个鬼东西是采用懒加载的方案，在用的时候才将Feign实例装载到Spring容器中。</p>\n<p updated=\"20220808111208\">所以，第一次请求过来的时候，会大量初始化Feign组件，导致请求缓慢，甚至于导致服务崩溃。</p>\n</blockquote>\n<h2 id=\"故障现象----\">故障现象</h2>\n<p updated=\"20220808111208\">　　某应用发布后，服务器立即崩溃。</p>\n<h2 id=\"原因分析----\">原因分析</h2>\n<p updated=\"20220808111208\">　　应用程序Web环境使用ApacheAJBoss的模式，用户请求通过Apache转发JBoss。在发布时，Apache和JBoss同时启动，由于JBoss启动时需要加载很多应用并初始化，花费时间较长，结果JBoss还没有完全启动，Apache就已经启动完毕开始接收用户请求，大量请求阻塞在JBoss进程中，最终导致JBoss崩溃。除了这种Apache和JBoss启动不同步的情况，网站还有很多类似的场景，都需要后台服务准备好，前台应用才能启动，否则就会导致故障。</p>\n<p updated=\"20220808111208\">　　这种情况被内部人戏称作“姑娘们还没穿好衣服，老鸨就开门迎客了”。</p>\n<h2 id=\"经验教训----\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-7zgjh05\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">老鸨开门前要检查下姑娘们是否穿好了衣服。</p>\n</li>\n<li id=\"20220808111208-0t9l32m\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">就本例来说，在应用程序中加入一个特定的动态页面（比如只返回OK两个字母），启动脚本先启动JBoss，然后在脚本中不断用curl命令访问这个特定页面，直到收到OK，才启动Apache。</p>\n</li>\n</ul>\n<h1 id=\"大文件读写独占磁盘引发的故障\">大文件读写独占磁盘引发的故障</h1>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">现在大多数 文件读写 会用到CDN厂商对应服务，比如七牛云的多媒体文件处理</p>\n<p updated=\"20220808111208\">专业的事情交给专业的人去做，就会少很多bug</p>\n</blockquote>\n<h2 id=\"故障现象-----\"><strong>故障现象</strong></h2>\n<p updated=\"20220808111208\">　　某应用主要功能是管理用户图片，接到部分用户投诉，表示上传图片非常慢，原来只需要一两秒，现在需要几十秒，有时等半天结果浏览器显示服务器超时。</p>\n<h2 id=\"原因分析-----\"><strong>原因分析</strong></h2>\n<p updated=\"20220808111208\">　　图片需要使用存储，最有可能出错的地方是存储服务器。检查存储服务器，发现大部分文件只有几百KB，而有几个文件非常大，有数百兆，读写这些大文件一次需要几十秒，这段时间，磁盘基本被这个文件操作独占，导致其他用户的文件操作缓慢。</p>\n<h2 id=\"经验教训-----\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-1gbu3wf\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">存储的使用需要根据不同文件类型和用途进行管理，图片都是小文件，应该使用专用的存储服务器，不能和大文件共用存储。批处理用的大文件可以使用其他类型的分布式文件系统。</p>\n</li>\n</ul>\n<h1 id=\"滥用生产环境引发的故障\">滥用生产环境引发的故障</h1>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">网站数据库有专门的DBA维护，如果发现数据库存在错误记录，需要进行数据订正，必须走数据订正流程，申请DBA协助。于是就有工程师为避免麻烦，直接写一段数据库更新操作的代码，悄悄放到生产环境应用服务器上执行，神不知鬼不觉地订正了数据。但是如果不小心写错了SQL，后果可想而知。</p>\n</blockquote>\n<h2 id=\"故障现象------\"><strong>故障现象</strong></h2>\n<p updated=\"20220808111208\">　　 监控发现某个时段内，某些应用突然变慢，内部网络访问延迟非常厉害。</p>\n<h2 id=\"原因分析------\"><strong>原因分析</strong></h2>\n<p updated=\"20220808111208\">　　 检查发现，该时段内网卡流量也下降，但是没有找到原因。过了一阵子才知道，原来有工程师在线上生产环境进行性能压力测试，占用了大部分交换机带宽。</p>\n<h2 id=\"经验教训------\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-h1l5esv\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">访问线上生产环境要规范，不小心就会导致大事故。</p>\n</li>\n</ul>\n<h1 id=\"不规范的流程引发的故障\">不规范的流程引发的故障</h1>\n<blockquote updated=\"20220808111208\">\n<p updated=\"20220808111208\">规范的发布流程，可以避免至少50%的问题</p>\n</blockquote>\n<h2 id=\"故障现象-------\"><strong>故障现象</strong></h2>\n<p updated=\"20220808111208\">　　 某应用发布后，数据库Load迅速飙升，超过报警值，回滚发布后报警消除。</p>\n<h2 id=\"原因分析-------\"><strong>原因分析</strong></h2>\n<p updated=\"20220808111208\">　　 发现该应用发布后出现大量数据库读操作，而这些数据本来应该从分布式缓存读取。检查缓存，发现数据已经被缓存了。检查代码，发现访问缓存的那行代码被注释掉了。原来工程师在开发的时候，为了测试方便，特意注释掉读取缓存的代码，结果开发完成后忘记把注释去掉，直接提交到代码库被发布到线上环境。</p>\n<h2 id=\"经验教训-------\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-fgr4if4\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">代码提交前使用diff命令进行代码比较，确认没有提交不该提交的代码。</p>\n</li>\n<li id=\"20220808111208-kgtc3yt\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">加强code review，代码在正式提交前必须被至少一个其他工程师做过code review，并且共同承担因代码引起的故障责任。</p>\n</li>\n</ul>\n<h2 id=\"不好的编程习惯引发的故障\">不好的编程习惯引发的故障</h2>\n<h2 id=\"故障现象--------\"><strong>故障现象</strong></h2>\n<p updated=\"20220808111208\">　　某应用更新某功能后，有少量用户投诉无法正常访问该功能，一点击就显示出错信息。</p>\n<h2 id=\"原因分析--------\"><strong>原因分析</strong></h2>\n<p updated=\"20220808111208\">　　分析这些用户，都是第一次使用该功能，检查代码，发现程序根据历史使用记录构造一个对象，如果该对象为null，就会导致NullPointException。</p>\n<h2 id=\"经验教训--------\">经验教训</h2>\n<ul updated=\"20220808111208\">\n<li id=\"20220808111208-pw4e0t5\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">程序在处理一个输入的对象时，如果不能明确该对象是否为空，必须做空指针判断。</p>\n</li>\n<li id=\"20220808111208-48fg344\" updated=\"20220808111208\">\n<p updated=\"20220808111208\">程序在调用其他方法时，输入的对象尽量保证不是null，必要时构造空对象（使用空对象模式）。</p>\n</li>\n</ul>\n<p updated=\"20220808111208\">　　link: <a href=\"https://u.jd.com/HIU9RxJ\">《大型网站技术架构》</a></p>\n","headings":[{"depth":1,"value":"写日志引发的故障"},{"depth":2,"value":"故障现象"},{"depth":2,"value":"原因分析"},{"depth":2,"value":"经验教训"},{"depth":2,"value":"高并发访问数据库引发的故障"},{"depth":2,"value":"故障现象"},{"depth":2,"value":"原因分析"},{"depth":2,"value":"经验教训"},{"depth":1,"value":"高并发情况下锁引发的故障"},{"depth":2,"value":"故障现象"},{"depth":2,"value":"原因分析"},{"depth":2,"value":"经验教训"},{"depth":2,"value":"缓存引发的故障"},{"depth":2,"value":"故障现象"},{"depth":2,"value":"原因分析"},{"depth":2,"value":"经验教训"},{"depth":1,"value":"应用启动不同步引发的故障"},{"depth":2,"value":"故障现象"},{"depth":2,"value":"原因分析"},{"depth":2,"value":"经验教训"},{"depth":1,"value":"大文件读写独占磁盘引发的故障"},{"depth":2,"value":"故障现象"},{"depth":2,"value":"原因分析"},{"depth":2,"value":"经验教训"},{"depth":1,"value":"滥用生产环境引发的故障"},{"depth":2,"value":"故障现象"},{"depth":2,"value":"原因分析"},{"depth":2,"value":"经验教训"},{"depth":1,"value":"不规范的流程引发的故障"},{"depth":2,"value":"故障现象"},{"depth":2,"value":"原因分析"},{"depth":2,"value":"经验教训"},{"depth":2,"value":"不好的编程习惯引发的故障"},{"depth":2,"value":"故障现象"},{"depth":2,"value":"原因分析"},{"depth":2,"value":"经验教训"}],"path":"/topic/系统设计/系统常见故障"},"tree":{"title":"系统设计","id":"20220523142842-5ohvsi1","parentId":"","href":"/topic/系统设计","path":"/topic/系统设计","children":[{"title":"概念","id":"20220615132453-664g7l0","type":"d","href":"/topic/系统设计/概念","parentId":"","path":"/topic/系统设计/概念","parentPath":"/topic/系统设计","sort":1,"children":[{"title":"数据库系统 VS 文件系统","id":"20220615102743-qj0plmz","type":"h","href":"/topic/系统设计/概念#数据库系统 VS 文件系统","parentId":"20220615132453-664g7l0","path":"/topic/系统设计/概念","parentPath":"/topic/系统设计","children":[{"title":"关系","id":"20220615102811-lmbzu19","type":"h","href":"/topic/系统设计/概念#关系","parentId":"20220615102743-qj0plmz","path":"/topic/系统设计/概念","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"区别","id":"20220615102835-8kegc0y","type":"h","href":"/topic/系统设计/概念#区别","parentId":"20220615102743-qj0plmz","path":"/topic/系统设计/概念","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"总结","id":"20220615103035-c70ck6k","type":"h","href":"/topic/系统设计/概念#总结","parentId":"20220615102743-qj0plmz","path":"/topic/系统设计/概念","parentPath":"/topic/系统设计","children":[],"level":3}],"level":2},{"title":"单体架构VS微服务架构","id":"20220628154518-x6kau73","type":"h","href":"/topic/系统设计/概念#单体架构VS微服务架构","parentId":"20220615132453-664g7l0","path":"/topic/系统设计/概念","parentPath":"/topic/系统设计","children":[{"title":"单体架构","id":"20220628154527-mj1noqe","type":"h","href":"/topic/系统设计/概念#单体架构","parentId":"20220628154518-x6kau73","path":"/topic/系统设计/概念","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"微服务架构","id":"20220628154527-xpc8zw5","type":"h","href":"/topic/系统设计/概念#微服务架构","parentId":"20220628154518-x6kau73","path":"/topic/系统设计/概念","parentPath":"/topic/系统设计","children":[],"level":3}],"level":2}],"level":1},{"title":"4S分析法","id":"20220531175247-wjawyqd","type":"d","href":"/topic/系统设计/4S分析法","parentId":"","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","sort":2,"children":[{"title":"Scenario场景","id":"20220614162313-ymy6pxo","type":"h","href":"/topic/系统设计/4S分析法#Scenario场景","parentId":"20220531175247-wjawyqd","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[{"title":"需要设计哪些功能","id":"20220616132326-s55nquu","type":"h","href":"/topic/系统设计/4S分析法#需要设计哪些功能","parentId":"20220614162313-ymy6pxo","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"需要承受的访问量","id":"20220616132326-y5xmygg","type":"h","href":"/topic/系统设计/4S分析法#需要承受的访问量","parentId":"20220614162313-ymy6pxo","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[],"level":3}],"level":2},{"title":"Service服务","id":"20220616132326-j1gz6ab","type":"h","href":"/topic/系统设计/4S分析法#Service服务","parentId":"20220531175247-wjawyqd","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[],"level":2},{"title":"Storage存储","id":"20220616132404-d4ylqml","type":"h","href":"/topic/系统设计/4S分析法#Storage存储","parentId":"20220531175247-wjawyqd","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[{"title":"处理步骤","id":"20220616132411-bvaq4hy","type":"h","href":"/topic/系统设计/4S分析法#处理步骤","parentId":"20220616132404-d4ylqml","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[{"title":"第一步：为每个Service选择存储结构","id":"20220616132411-o42gm70","type":"h","href":"/topic/系统设计/4S分析法#第一步：为每个Service选择存储结构","parentId":"20220616132411-bvaq4hy","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[],"level":4},{"title":"第二步：细化表结构","id":"20220616132411-fu7embq","type":"h","href":"/topic/系统设计/4S分析法#第二步：细化表结构","parentId":"20220616132411-bvaq4hy","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[],"level":4}],"level":3},{"title":"存储模型","id":"20220616132411-wuznh3m","type":"h","href":"/topic/系统设计/4S分析法#存储模型","parentId":"20220616132404-d4ylqml","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[{"title":"Pull Model 拉模型","id":"20220616132411-ltf0w00","type":"h","href":"/topic/系统设计/4S分析法#Pull Model 拉模型","parentId":"20220616132411-wuznh3m","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[],"level":4}],"level":3}],"level":2},{"title":"Scala扩展设计","id":"20220616132437-btg0npi","type":"h","href":"/topic/系统设计/4S分析法#Scala扩展设计","parentId":"20220531175247-wjawyqd","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[{"title":"处理步骤","id":"20220616132443-l9hc1mr","type":"h","href":"/topic/系统设计/4S分析法#处理步骤","parentId":"20220616132437-btg0npi","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[{"title":"第一步：优化","id":"20220616132443-i0no8v4","type":"h","href":"/topic/系统设计/4S分析法#第一步：优化","parentId":"20220616132443-l9hc1mr","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[],"level":4},{"title":"第二部：维护","id":"20220616132443-xo6qd61","type":"h","href":"/topic/系统设计/4S分析法#第二部：维护","parentId":"20220616132443-l9hc1mr","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[],"level":4}],"level":3},{"title":"Pull的缺陷","id":"20220616132451-87l1875","type":"h","href":"/topic/系统设计/4S分析法#Pull的缺陷","parentId":"20220616132437-btg0npi","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"Push的缺陷","id":"20220616132443-bjr9ha0","type":"h","href":"/topic/系统设计/4S分析法#Push的缺陷","parentId":"20220616132437-btg0npi","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"处理","id":"20220616132443-ezk0war","type":"h","href":"/topic/系统设计/4S分析法#处理","parentId":"20220616132437-btg0npi","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[{"title":"最小改动","id":"20220616132443-lmdkzs3","type":"h","href":"/topic/系统设计/4S分析法#最小改动","parentId":"20220616132443-ezk0war","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[],"level":4},{"title":"增长预估","id":"20220616132443-1x7j1ed","type":"h","href":"/topic/系统设计/4S分析法#增长预估","parentId":"20220616132443-ezk0war","path":"/topic/系统设计/4S分析法","parentPath":"/topic/系统设计","children":[],"level":4}],"level":3}],"level":2}],"level":1},{"title":"样例","id":"20220523161014-1vkr1si","type":"d","href":"/topic/系统设计/样例","parentId":"","path":"/topic/系统设计/样例","parentPath":"/topic/系统设计","sort":3,"children":[{"title":"短链系统","id":"20220523142856-tm0dduf","type":"d","href":"/topic/系统设计/样例/短链系统","parentId":"","path":"/topic/系统设计/样例/短链系统","parentPath":"/topic/系统设计/样例","sort":1,"children":[{"title":"概述用例和约束","id":"20220523152802-ora3luz","type":"h","href":"/topic/系统设计/样例/短链系统#概述用例和约束","parentId":"20220523142856-tm0dduf","path":"/topic/系统设计/样例/短链系统","parentPath":"/topic/系统设计/样例","children":[{"title":"用例","id":"20220523153231-cqe7c6z","type":"h","href":"/topic/系统设计/样例/短链系统#用例","parentId":"20220523152802-ora3luz","path":"/topic/系统设计/样例/短链系统","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"约束和假设","id":"20220523153213-tyokdre","type":"h","href":"/topic/系统设计/样例/短链系统#约束和假设","parentId":"20220523152802-ora3luz","path":"/topic/系统设计/样例/短链系统","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"预估容量","id":"20220523153245-akx221a","type":"h","href":"/topic/系统设计/样例/短链系统#预估容量","parentId":"20220523152802-ora3luz","path":"/topic/系统设计/样例/短链系统","parentPath":"/topic/系统设计/样例","children":[],"level":4}],"level":3},{"title":"创建一个高层次设计","id":"20220523154027-n2m6mb0","type":"h","href":"/topic/系统设计/样例/短链系统#创建一个高层次设计","parentId":"20220523142856-tm0dduf","path":"/topic/系统设计/样例/短链系统","parentPath":"/topic/系统设计/样例","children":[],"level":3},{"title":"设计核心组件","id":"20220523155756-as6zfq4","type":"h","href":"/topic/系统设计/样例/短链系统#设计核心组件","parentId":"20220523142856-tm0dduf","path":"/topic/系统设计/样例/短链系统","parentPath":"/topic/系统设计/样例","children":[{"title":"用例: 用户输入一段文本，然后得到一个随机生成的链接","id":"20220523155920-i5awrmn","type":"h","href":"/topic/系统设计/样例/短链系统#用例: 用户输入一段文本，然后得到一个随机生成的链接","parentId":"20220523155756-as6zfq4","path":"/topic/系统设计/样例/短链系统","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"用例：用户输入一个 paste 的 url 后可以看到它存储的内容","id":"20220523160445-ppzjfcg","type":"h","href":"/topic/系统设计/样例/短链系统#用例：用户输入一个 paste 的 url 后可以看到它存储的内容","parentId":"20220523155756-as6zfq4","path":"/topic/系统设计/样例/短链系统","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"用例： 服务跟踪分析页面","id":"20220523160523-x0zwdli","type":"h","href":"/topic/系统设计/样例/短链系统#用例： 服务跟踪分析页面","parentId":"20220523155756-as6zfq4","path":"/topic/系统设计/样例/短链系统","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"用例： 服务删除过期的 pastes","id":"20220523160541-cln3fph","type":"h","href":"/topic/系统设计/样例/短链系统#用例： 服务删除过期的 pastes","parentId":"20220523155756-as6zfq4","path":"/topic/系统设计/样例/短链系统","parentPath":"/topic/系统设计/样例","children":[],"level":4}],"level":3},{"title":"扩展设计","id":"20220523160546-vbv6n9j","type":"h","href":"/topic/系统设计/样例/短链系统#扩展设计","parentId":"20220523142856-tm0dduf","path":"/topic/系统设计/样例/短链系统","parentPath":"/topic/系统设计/样例","children":[],"level":3},{"title":"总结","id":"20220523163729-9u3wkrv","type":"h","href":"/topic/系统设计/样例/短链系统#总结","parentId":"20220523142856-tm0dduf","path":"/topic/系统设计/样例/短链系统","parentPath":"/topic/系统设计/样例","children":[],"level":3}],"level":2},{"title":"微博架构设计","id":"20220524140048-zkiqvui","type":"d","href":"/topic/系统设计/样例/微博架构设计","parentId":"","path":"/topic/系统设计/样例/微博架构设计","parentPath":"/topic/系统设计/样例","sort":2,"children":[{"title":"概述用例和约束","id":"20220524140533-yb6pk63","type":"h","href":"/topic/系统设计/样例/微博架构设计#概述用例和约束","parentId":"20220524140048-zkiqvui","path":"/topic/系统设计/样例/微博架构设计","parentPath":"/topic/系统设计/样例","children":[{"title":"用例","id":"20220524140955-hl15d6z","type":"h","href":"/topic/系统设计/样例/微博架构设计#用例","parentId":"20220524140533-yb6pk63","path":"/topic/系统设计/样例/微博架构设计","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"限制条件与假设","id":"20220524142056-m6nm6xm","type":"h","href":"/topic/系统设计/样例/微博架构设计#限制条件与假设","parentId":"20220524140533-yb6pk63","path":"/topic/系统设计/样例/微博架构设计","parentPath":"/topic/系统设计/样例","children":[],"level":4}],"level":3},{"title":"概要设计","id":"20220524145303-hrsunb1","type":"h","href":"/topic/系统设计/样例/微博架构设计#概要设计","parentId":"20220524140048-zkiqvui","path":"/topic/系统设计/样例/微博架构设计","parentPath":"/topic/系统设计/样例","children":[],"level":3},{"title":"设计核心组件","id":"20220524154837-c7lw852","type":"h","href":"/topic/系统设计/样例/微博架构设计#设计核心组件","parentId":"20220524140048-zkiqvui","path":"/topic/系统设计/样例/微博架构设计","parentPath":"/topic/系统设计/样例","children":[{"title":"用例: 用户发表了一篇微博","id":"20220524155958-ygnj4py","type":"h","href":"/topic/系统设计/样例/微博架构设计#用例: 用户发表了一篇微博","parentId":"20220524154837-c7lw852","path":"/topic/系统设计/样例/微博架构设计","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"用例：用户浏览聚合主页时间轴","id":"20220524163832-k1u2urx","type":"h","href":"/topic/系统设计/样例/微博架构设计#用例：用户浏览聚合主页时间轴","parentId":"20220524154837-c7lw852","path":"/topic/系统设计/样例/微博架构设计","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"用例：用户浏览用户时间轴","id":"20220524164247-audibq3","type":"h","href":"/topic/系统设计/样例/微博架构设计#用例：用户浏览用户时间轴","parentId":"20220524154837-c7lw852","path":"/topic/系统设计/样例/微博架构设计","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"用例：用户搜索关键词","id":"20220524164312-1obgv97","type":"h","href":"/topic/系统设计/样例/微博架构设计#用例：用户搜索关键词","parentId":"20220524154837-c7lw852","path":"/topic/系统设计/样例/微博架构设计","parentPath":"/topic/系统设计/样例","children":[],"level":4}],"level":3},{"title":"架构扩展","id":"20220524164325-q9o9ung","type":"h","href":"/topic/系统设计/样例/微博架构设计#架构扩展","parentId":"20220524140048-zkiqvui","path":"/topic/系统设计/样例/微博架构设计","parentPath":"/topic/系统设计/样例","children":[],"level":3}],"level":2},{"title":"秒杀","id":"20220616202141-hy1nbif","type":"d","href":"/topic/系统设计/样例/秒杀","parentId":"","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","sort":4,"children":[{"title":"Scenario场景","id":"20220616202308-9bgzn5z","type":"h","href":"/topic/系统设计/样例/秒杀#Scenario场景","parentId":"20220616202141-hy1nbif","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[{"title":"需求拆解","id":"20220623170337-upk31iw","type":"h","href":"/topic/系统设计/样例/秒杀#需求拆解","parentId":"20220616202308-9bgzn5z","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":4}],"level":3},{"title":"Service 服务","id":"20220623170617-lfeu5ob","type":"h","href":"/topic/系统设计/样例/秒杀#Service 服务","parentId":"20220616202141-hy1nbif","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":3},{"title":"Storage存储","id":"20220623210002-oh2z3zd","type":"h","href":"/topic/系统设计/样例/秒杀#Storage存储","parentId":"20220616202141-hy1nbif","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[{"title":"商品信息表 commodity_info","id":"20220624113741-lsybjg4","type":"h","href":"/topic/系统设计/样例/秒杀#商品信息表 commodity_info","parentId":"20220623210002-oh2z3zd","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"秒杀活动表 seckill_info","id":"20220624113935-pc2me4m","type":"h","href":"/topic/系统设计/样例/秒杀#秒杀活动表 seckill_info","parentId":"20220623210002-oh2z3zd","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"库存信息表 stock_info","id":"20220624131344-2oot3xz","type":"h","href":"/topic/系统设计/样例/秒杀#库存信息表 stock_info","parentId":"20220623210002-oh2z3zd","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"订单信息表 order_info","id":"20220624131601-lgvwksl","type":"h","href":"/topic/系统设计/样例/秒杀#订单信息表 order_info","parentId":"20220623210002-oh2z3zd","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"数据流向","id":"20220624131855-pzpipel","type":"h","href":"/topic/系统设计/样例/秒杀#数据流向","parentId":"20220623210002-oh2z3zd","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":4}],"level":3},{"title":"Scala扩展设计","id":"20220628155648-7dj6e6e","type":"h","href":"/topic/系统设计/样例/秒杀#Scala扩展设计","parentId":"20220616202141-hy1nbif","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[{"title":"数据一致性","id":"20220628155654-6w1zago","type":"h","href":"/topic/系统设计/样例/秒杀#数据一致性","parentId":"20220628155648-7dj6e6e","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"应对高QPS","id":"20220628155339-dp92t46","type":"h","href":"/topic/系统设计/样例/秒杀#应对高QPS","parentId":"20220628155648-7dj6e6e","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"Redis的缺陷优化","id":"20220628132922-1wcck7q","type":"h","href":"/topic/系统设计/样例/秒杀#Redis的缺陷优化","parentId":"20220628155648-7dj6e6e","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"这样就完美了吗？","id":"20220628134645-m8f0zw1","type":"h","href":"/topic/系统设计/样例/秒杀#这样就完美了吗？","parentId":"20220628155648-7dj6e6e","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"分布式事务","id":"20220628135940-s7irnu6","type":"h","href":"/topic/系统设计/样例/秒杀#分布式事务","parentId":"20220628155648-7dj6e6e","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":4},{"title":"其他的小细节","id":"20220628165937-aaii6h7","type":"h","href":"/topic/系统设计/样例/秒杀#其他的小细节","parentId":"20220628155648-7dj6e6e","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[{"title":"防止刷爆商品页面","id":"20220628140318-7jb6y79","type":"h","href":"/topic/系统设计/样例/秒杀#防止刷爆商品页面","parentId":"20220628165937-aaii6h7","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":5},{"title":"服务高可用","id":"20220628140639-2r8f6ir","type":"h","href":"/topic/系统设计/样例/秒杀#服务高可用","parentId":"20220628165937-aaii6h7","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":5},{"title":"防止恶意刷请求或者爬虫请求","id":"20220628140847-bweqsx9","type":"h","href":"/topic/系统设计/样例/秒杀#防止恶意刷请求或者爬虫请求","parentId":"20220628165937-aaii6h7","path":"/topic/系统设计/样例/秒杀","parentPath":"/topic/系统设计/样例","children":[],"level":5}],"level":4}],"level":3}],"level":2}],"level":1},{"title":"每个程序员都应该知道的延迟数字","id":"20220524194105-29b5zns","type":"d","href":"/topic/系统设计/每个程序员都应该知道的延迟数字","parentId":"","path":"/topic/系统设计/每个程序员都应该知道的延迟数字","parentPath":"/topic/系统设计","sort":4,"children":[],"level":1},{"title":"Flux架构","id":"20220630203113-cjoqcbf","type":"d","href":"/topic/系统设计/Flux架构","parentId":"","path":"/topic/系统设计/Flux架构","parentPath":"/topic/系统设计","sort":5,"children":[],"level":1},{"title":"Http进化史","id":"20220701132636-sffchc7","type":"d","href":"/topic/系统设计/Http进化史","parentId":"","path":"/topic/系统设计/Http进化史","parentPath":"/topic/系统设计","children":[],"level":1},{"title":"系统常见故障","id":"20220802204018-p5gpqgu","type":"d","href":"/topic/系统设计/系统常见故障","parentId":"","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[{"title":"写日志引发的故障","id":"20220802204332-hy5xsnl","type":"h","href":"/topic/系统设计/系统常见故障#写日志引发的故障","parentId":"20220802204018-p5gpqgu","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[{"title":"故障现象","id":"20220802204350-kpdasf1","type":"h","href":"/topic/系统设计/系统常见故障#故障现象","parentId":"20220802204332-hy5xsnl","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"原因分析","id":"20220802204401-md2j3m3","type":"h","href":"/topic/系统设计/系统常见故障#原因分析","parentId":"20220802204332-hy5xsnl","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"经验教训","id":"20220802204350-ldt4g70","type":"h","href":"/topic/系统设计/系统常见故障#经验教训","parentId":"20220802204332-hy5xsnl","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"高并发访问数据库引发的故障","id":"20220802204803-glrzawa","type":"h","href":"/topic/系统设计/系统常见故障#高并发访问数据库引发的故障","parentId":"20220802204332-hy5xsnl","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"故障现象","id":"20220802204811-i9rkjhk","type":"h","href":"/topic/系统设计/系统常见故障#故障现象","parentId":"20220802204332-hy5xsnl","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"原因分析","id":"20220802204811-6m31i3r","type":"h","href":"/topic/系统设计/系统常见故障#原因分析","parentId":"20220802204332-hy5xsnl","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"经验教训","id":"20220802204811-9z16at5","type":"h","href":"/topic/系统设计/系统常见故障#经验教训","parentId":"20220802204332-hy5xsnl","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3}],"level":2},{"title":"高并发情况下锁引发的故障","id":"20220802212352-0uxx339","type":"h","href":"/topic/系统设计/系统常见故障#高并发情况下锁引发的故障","parentId":"20220802204018-p5gpqgu","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[{"title":"故障现象","id":"20220802212404-8lfbbya","type":"h","href":"/topic/系统设计/系统常见故障#故障现象","parentId":"20220802212352-0uxx339","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"原因分析","id":"20220802212408-e2921pf","type":"h","href":"/topic/系统设计/系统常见故障#原因分析","parentId":"20220802212352-0uxx339","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"经验教训","id":"20220802212400-571z94t","type":"h","href":"/topic/系统设计/系统常见故障#经验教训","parentId":"20220802212352-0uxx339","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"缓存引发的故障","id":"20220805093210-m7lrlf2","type":"h","href":"/topic/系统设计/系统常见故障#缓存引发的故障","parentId":"20220802212352-0uxx339","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"故障现象","id":"20220805093221-pm7o2e4","type":"h","href":"/topic/系统设计/系统常见故障#故障现象","parentId":"20220802212352-0uxx339","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"原因分析","id":"20220805093239-s0zm5uc","type":"h","href":"/topic/系统设计/系统常见故障#原因分析","parentId":"20220802212352-0uxx339","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[{"title":"经验教训","id":"20220805093239-dkcg9j1","type":"h","href":"/topic/系统设计/系统常见故障#经验教训","parentId":"20220805093239-s0zm5uc","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":4}],"level":3}],"level":2},{"title":"应用启动不同步引发的故障","id":"20220805093446-cypkdar","type":"h","href":"/topic/系统设计/系统常见故障#应用启动不同步引发的故障","parentId":"20220802204018-p5gpqgu","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[{"title":"故障现象","id":"20220805093450-omj1m8k","type":"h","href":"/topic/系统设计/系统常见故障#故障现象","parentId":"20220805093446-cypkdar","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"原因分析","id":"20220805093446-ycpvo18","type":"h","href":"/topic/系统设计/系统常见故障#原因分析","parentId":"20220805093446-cypkdar","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"经验教训","id":"20220805093511-eji1e9f","type":"h","href":"/topic/系统设计/系统常见故障#经验教训","parentId":"20220805093446-cypkdar","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3}],"level":2},{"title":"大文件读写独占磁盘引发的故障","id":"20220805095411-ps3caqq","type":"h","href":"/topic/系统设计/系统常见故障#大文件读写独占磁盘引发的故障","parentId":"20220802204018-p5gpqgu","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[{"title":"故障现象","id":"20220805095418-yzbpm82","type":"h","href":"/topic/系统设计/系统常见故障#故障现象","parentId":"20220805095411-ps3caqq","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"原因分析","id":"20220805095411-8oz0ee9","type":"h","href":"/topic/系统设计/系统常见故障#原因分析","parentId":"20220805095411-ps3caqq","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"经验教训","id":"20220805095411-plav986","type":"h","href":"/topic/系统设计/系统常见故障#经验教训","parentId":"20220805095411-ps3caqq","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3}],"level":2},{"title":"滥用生产环境引发的故障","id":"20220805095411-vqiw12l","type":"h","href":"/topic/系统设计/系统常见故障#滥用生产环境引发的故障","parentId":"20220802204018-p5gpqgu","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[{"title":"故障现象","id":"20220805095411-387t1yi","type":"h","href":"/topic/系统设计/系统常见故障#故障现象","parentId":"20220805095411-vqiw12l","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"原因分析","id":"20220805095411-g1pdror","type":"h","href":"/topic/系统设计/系统常见故障#原因分析","parentId":"20220805095411-vqiw12l","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"经验教训","id":"20220805095411-ghccimu","type":"h","href":"/topic/系统设计/系统常见故障#经验教训","parentId":"20220805095411-vqiw12l","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3}],"level":2},{"title":"不规范的流程引发的故障","id":"20220805095411-46g2x35","type":"h","href":"/topic/系统设计/系统常见故障#不规范的流程引发的故障","parentId":"20220802204018-p5gpqgu","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[{"title":"故障现象","id":"20220805095650-sp6wd01","type":"h","href":"/topic/系统设计/系统常见故障#故障现象","parentId":"20220805095411-46g2x35","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"原因分析","id":"20220805095411-mwo9xvd","type":"h","href":"/topic/系统设计/系统常见故障#原因分析","parentId":"20220805095411-46g2x35","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"经验教训","id":"20220805095411-1h1bd30","type":"h","href":"/topic/系统设计/系统常见故障#经验教训","parentId":"20220805095411-46g2x35","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"不好的编程习惯引发的故障","id":"20220805095411-9s3d4la","type":"h","href":"/topic/系统设计/系统常见故障#不好的编程习惯引发的故障","parentId":"20220805095411-46g2x35","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"故障现象","id":"20220805095411-14szlt8","type":"h","href":"/topic/系统设计/系统常见故障#故障现象","parentId":"20220805095411-46g2x35","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"原因分析","id":"20220805095411-s1rg4us","type":"h","href":"/topic/系统设计/系统常见故障#原因分析","parentId":"20220805095411-46g2x35","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3},{"title":"经验教训","id":"20220805095411-nx6hepo","type":"h","href":"/topic/系统设计/系统常见故障#经验教训","parentId":"20220805095411-46g2x35","path":"/topic/系统设计/系统常见故障","parentPath":"/topic/系统设计","children":[],"level":3}],"level":2}],"level":1}],"level":0},"headings":[{"depth":1,"value":"写日志引发的故障","slug":"写日志引发的故障"},{"depth":2,"value":"故障现象","slug":"故障现象"},{"depth":2,"value":"原因分析","slug":"原因分析"},{"depth":2,"value":"经验教训","slug":"经验教训"},{"depth":2,"value":"高并发访问数据库引发的故障","slug":"高并发访问数据库引发的故障"},{"depth":2,"value":"故障现象","slug":"故障现象-1"},{"depth":2,"value":"原因分析","slug":"原因分析-1"},{"depth":2,"value":"经验教训","slug":"经验教训-1"},{"depth":1,"value":"高并发情况下锁引发的故障","slug":"高并发情况下锁引发的故障"},{"depth":2,"value":"故障现象","slug":"故障现象-2"},{"depth":2,"value":"原因分析","slug":"原因分析-2"},{"depth":2,"value":"经验教训","slug":"经验教训-2"},{"depth":2,"value":"缓存引发的故障","slug":"缓存引发的故障"},{"depth":2,"value":"故障现象","slug":"故障现象-3"},{"depth":2,"value":"原因分析","slug":"原因分析-3"},{"depth":2,"value":"经验教训","slug":"经验教训-3"},{"depth":1,"value":"应用启动不同步引发的故障","slug":"应用启动不同步引发的故障"},{"depth":2,"value":"故障现象","slug":"故障现象-4"},{"depth":2,"value":"原因分析","slug":"原因分析-4"},{"depth":2,"value":"经验教训","slug":"经验教训-4"},{"depth":1,"value":"大文件读写独占磁盘引发的故障","slug":"大文件读写独占磁盘引发的故障"},{"depth":2,"value":"故障现象","slug":"故障现象-5"},{"depth":2,"value":"原因分析","slug":"原因分析-5"},{"depth":2,"value":"经验教训","slug":"经验教训-5"},{"depth":1,"value":"滥用生产环境引发的故障","slug":"滥用生产环境引发的故障"},{"depth":2,"value":"故障现象","slug":"故障现象-6"},{"depth":2,"value":"原因分析","slug":"原因分析-6"},{"depth":2,"value":"经验教训","slug":"经验教训-6"},{"depth":1,"value":"不规范的流程引发的故障","slug":"不规范的流程引发的故障"},{"depth":2,"value":"故障现象","slug":"故障现象-7"},{"depth":2,"value":"原因分析","slug":"原因分析-7"},{"depth":2,"value":"经验教训","slug":"经验教训-7"},{"depth":2,"value":"不好的编程习惯引发的故障","slug":"不好的编程习惯引发的故障"},{"depth":2,"value":"故障现象","slug":"故障现象-8"},{"depth":2,"value":"原因分析","slug":"原因分析-8"},{"depth":2,"value":"经验教训","slug":"经验教训-8"}]}},
    "staticQueryHashes": ["630634786","928362550"]}