{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/Spring/spring24","result":{"data":{"siYuan":{"excerpt":"spring24 全新的配置文件处理 我感觉最大的改变是提供了新的配置文件的加载方式，为了去适应k8s容器化部署中的configMap。 如果不想使用新的加载方式，依然提供了旧版的加载方式 引入依赖 org.springframework....","raw":"# spring24\n\n# 全新的配置文件处理\n\n我感觉最大的改变是提供了新的配置文件的加载方式，为了去适应k8s容器化部署中的configMap。\n\n如果不想使用新的加载方式，依然提供了旧版的加载方式\n\n引入依赖\n\n```xml\n<dependency>\n  <groupId>org.springframework.cloud</groupId>\n  <artifactId>spring-cloud-starter-bootstrap</artifactId>\n  <version>3.0.3</version>\n</dependency>\n```\n\n在配置文件中加上 spring.config.use-legacy-processing=true \n\n## 新版加载方式spring.config.import属性\n\nspring.config.import属性可被视作这个版本最为牛逼的属性。\n\n可以从不同的位置加载数据\n\n1. 加载classpath数据\n\n```properties\nspring.config.import=optional:file:./dev.properties\n```\n\n1. 加载文件系统的数据\n\n```properties\nspring.config.import=file:/etc/config/myconfig[.yaml]\n```\n\n3. 加载Kubernetes的configMap(先将Kubernetes的数据挂载到卷轴上，然后在进行引用)\n   [如何配置看这里](https://kubernetes.io/docs/concepts/configuration/secret/#using-secrets-as-files-from-a-pod)\n\n```properties\nspring.config.import=optional:configtree:/etc/config/\n```\n\n4. 自定义加载数据，你可以通过自己喜欢的方式去从任意位置加载配置文件\n   [😃具体使用方式看这里](/post/zai-spring24-zhong-shi-yong-nacosconfig/)\n\n# 新的版本描述方案\n\n为了更加照顾英语非母语的开发者，spring采用了新的命名方案。\n\n之前那套用英文命名的真的让人摸不着头脑，英语也就算了，还整些个不常用的生词。\n\n单词的拼写很困难，版本号全靠复制。\n\n而且版本号上面也难以看出版本向下兼容性，很难做出判断而做出风险预估。\n\n为了解决这些问题\n\nSpring采用了日历化版本，并且使用的规则/公式是YYYY.MINOR.MICRO[-MODIFIER]，\n\n### 对各部分解释如下：\n\n+ YYYY：年份全称。eg：2020\n+ MINOR：辅助版本号（一般升级些非主线功能），在当前年内从0递增\n+ MICRO：补丁版本号（一般修复些bug），在当前年内从0递增\n+ MODIFIER：非必填。后缀，它用于修饰一些关键节点，用这些字母表示\n+ M数字：里程碑版本，如2020.0.0-M1、2020.0.0-M2\n+ RC数字：发布候选版本，如2020.0.0-RC1、2020.0.0-RC2\n+ SNAPSHOT：快照版本（后无数字），如2020.0.0-SNAPSHOT\n+ 啥都木有：正式版本（可放心使用，相当于之前的xxx-RELEASE），如2020.0.0\n\n---\n\n# R2DBC\n\nAR2dbcEntityTemplate可用于通过实体简化 Reactive R2DBC 的使用\n\n# Java 15 支持\n\nSpring Boot 2.4 现在完全支持（并针对）Java 15。支持的最低版本仍然是 Java 8。\n\n# 自定义属性名称支持\n\n如果想注入的名称和java关键字想冲突可以使用@Name属性进行注入\n\n```java\n@ConfigurationProperties(prefix = \"sample\")\n@ConstructorBinding\npublic class SampleConfigurationProperties {\n\n  private final String importValue;\n\n  public SampleConfigurationProperties(@Name(\"import\") String importValue) {\n    this.importValue = importValue;\n  }\n\n}\n````\n\n# 依赖升级\n\n+ Spring AMQP 2.3\n+ Spring Batch 4.\n+ Spring Data 2020.0\n+ Spring Framework 5.3\n+ Spring Integration 5.4\n+ Spring HATEOAS 1.2\n+ Spring Kafka 2\n+ Spring Retry 1.3\n+ Spring Security 5.4\n+ Spring Session 2020.0\n\n还更新了许多第三方依赖项：\n\n+ Artemis 2.13\n+ AssertJ 3.18\n+ Cassandra Driver 4.7\n+ Elasticsearch 7.9\n+ Flyway 7\n+ Jersey 2.31\n+ JUnit 5.7\n+ Liquibase 3.10\n+ Lettuce 6.0\n+ Micrometer 1.6\n+ Mockito 3.4\n+ MongoDB 4.1\n+ Oracle Database 19.7\n+ Reactor 2020.0\n+ RSocket 1.1\n+ Undertow 2.2\n","field":{"slug":"/posts/Spring/spring24"},"frontmatter":{"title":"spring24","tags":["Spring"],"date":"2022-04-21","description":"spring24 全新的配置文件处理 我感觉最大的改变是提供了新的配置文件的加载方式，为了去适应k8s容器化部署中的configMap。 如果不想使用新的加载方式，依然提供了旧版的加载方式 引入依赖 org.springframework...."}},"prev":{"frontmatter":{"title":"软路由"},"field":{"slug":"/posts/软路由"}},"next":{"frontmatter":{"title":"在Spring2.4中使用NacosConfig"},"field":{"slug":"/posts/Spring/在Spring2.4中使用NacosConfig"}}},"pageContext":{"slug":"/posts/Spring/spring24","prevSlug":"/posts/软路由","nextSlug":"/posts/Spring/在Spring2.4中使用NacosConfig"}},"staticQueryHashes":["1284643331","2841359383"]}